(* Module for axiomatizing type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type short_short_integer =
  < range -128 127 >
 
 val constant first 
   : int
  ensures { result =  (( -128) : int) }
 
 val constant last 
   : int
  ensures { result =  (127 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = short_short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type short_short_integer__ref =
  { mutable short_short_integer__content : short_short_integer }
 
 function short_short_integer__ref_short_short_integer__content__projection 
   (a : short_short_integer__ref) : short_short_integer =
  a.short_short_integer__content
 
 meta "model_projection" function short_short_integer__ref_short_short_integer__content__projection
 
 meta "inline:no" function short_short_integer__ref_short_short_integer__content__projection
 
 val short_short_integer__havoc 
   (x : short_short_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer__rep
 use        Standard__short_short_integer as Standard__short_short_integer
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__short_short_integer.short_short_integer) : int =
  (Standard__short_short_integer.short_short_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__short_short_integer.short_short_integer, 
 predicate in_range = Standard__short_short_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type short_integer =
  < range -32768 32767 >
 
 val constant first 
   : int
  ensures { result =  (( -32768) : int) }
 
 val constant last 
   : int
  ensures { result =  (32767 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type short_integer__ref =
  { mutable short_integer__content : short_integer }
 
 function short_integer__ref_short_integer__content__projection 
   (a : short_integer__ref) : short_integer =
  a.short_integer__content
 
 meta "model_projection" function short_integer__ref_short_integer__content__projection
 
 meta "inline:no" function short_integer__ref_short_integer__content__projection
 
 val short_integer__havoc 
   (x : short_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer__rep
 use        Standard__short_integer as Standard__short_integer
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__short_integer.short_integer) : int =
  (Standard__short_integer.short_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__short_integer.short_integer, 
 predicate in_range = Standard__short_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type integer =
  < range -2147483648 2147483647 >
 
 val constant first 
   : int
  ensures { result =  (( -2147483648) : int) }
 
 val constant last 
   : int
  ensures { result =  (2147483647 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer__ref =
  { mutable integer__content : integer }
 
 function integer__ref_integer__content__projection 
   (a : integer__ref) : integer =
  a.integer__content
 
 meta "model_projection" function integer__ref_integer__content__projection
 
 meta "inline:no" function integer__ref_integer__content__projection
 
 val integer__havoc 
   (x : integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer__rep
 use        Standard__integer as Standard__integer
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__integer.integer) : int =
  (Standard__integer.integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__integer.integer, 
 predicate in_range = Standard__integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type long_integer =
  < range -2147483648 2147483647 >
 
 val constant first 
   : int
  ensures { result =  (( -2147483648) : int) }
 
 val constant last 
   : int
  ensures { result =  (2147483647 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long_integer__ref =
  { mutable long_integer__content : long_integer }
 
 function long_integer__ref_long_integer__content__projection 
   (a : long_integer__ref) : long_integer =
  a.long_integer__content
 
 meta "model_projection" function long_integer__ref_long_integer__content__projection
 
 meta "inline:no" function long_integer__ref_long_integer__content__projection
 
 val long_integer__havoc 
   (x : long_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer__rep
 use        Standard__long_integer as Standard__long_integer
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__long_integer.long_integer) : int =
  (Standard__long_integer.long_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__long_integer.long_integer, 
 predicate in_range = Standard__long_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type long_long_integer =
  < range -9223372036854775808 9223372036854775807 >
 
 val constant first 
   : int
  ensures { result =  (( -9223372036854775808) : int) }
 
 val constant last 
   : int
  ensures { result =  (9223372036854775807 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = long_long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long_long_integer__ref =
  { mutable long_long_integer__content : long_long_integer }
 
 function long_long_integer__ref_long_long_integer__content__projection 
   (a : long_long_integer__ref) : long_long_integer =
  a.long_long_integer__content
 
 meta "model_projection" function long_long_integer__ref_long_long_integer__content__projection
 
 meta "inline:no" function long_long_integer__ref_long_long_integer__content__projection
 
 val long_long_integer__havoc 
   (x : long_long_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer__rep
 use        Standard__long_long_integer as Standard__long_long_integer
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__long_long_integer.long_long_integer) : int =
  (Standard__long_long_integer.long_long_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__long_long_integer.long_long_integer, 
 predicate in_range = Standard__long_long_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type natural =
  < range 0 2147483647 >
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (2147483647 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = natural, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type natural__ref =
  { mutable natural__content : natural }
 
 function natural__ref_natural__content__projection 
   (a : natural__ref) : natural =
  a.natural__content
 
 meta "model_projection" function natural__ref_natural__content__projection
 
 meta "inline:no" function natural__ref_natural__content__projection
 
 val natural__havoc 
   (x : natural__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural__rep
 use        Standard__natural as Standard__natural
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__natural.natural) : int =
  (Standard__natural.natural'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__natural.natural, 
 predicate in_range = Standard__natural.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type positive =
  < range 1 2147483647 >
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (2147483647 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = positive, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type positive__ref =
  { mutable positive__content : positive }
 
 function positive__ref_positive__content__projection 
   (a : positive__ref) : positive =
  a.positive__content
 
 meta "model_projection" function positive__ref_positive__content__projection
 
 meta "inline:no" function positive__ref_positive__content__projection
 
 val positive__havoc 
   (x : positive__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive__rep
 use        Standard__positive as Standard__positive
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__positive.positive) : int =
  (Standard__positive.positive'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__positive.positive, 
 predicate in_range = Standard__positive.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Float32 as Float32

 type short_float 
 
 val constant first 
   : Float32.t
  ensures { result =  (Float32.neg (340282346638528859811704183484516925440.0:Float32.t)) }
 
 val constant last 
   : Float32.t
  ensures { result =  (340282346638528859811704183484516925440.0:Float32.t) }
 
 predicate in_range 
   (x : Float32.t) =
  (Float32.t'isFinite x)
 val in_range 
   (x : Float32.t) : bool
  ensures { result <-> in_range (x : Float32.t) }
 
 clone export "ada__model".Static_Float32 with axiom .,
 type t = short_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type short_float__ref =
  { mutable short_float__content : short_float }
 
 function short_float__ref_short_float__content__projection 
   (a : short_float__ref) : short_float =
  a.short_float__content
 
 meta "model_projection" function short_float__ref_short_float__content__projection
 
 meta "inline:no" function short_float__ref_short_float__content__projection
 
 val short_float__havoc 
   (x : short_float__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float__rep
 use        Standard__short_float as Standard__short_float
 use        "_gnatprove_standard".Float32 as Float32
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Float32 with axiom .,
 type t = Standard__short_float.short_float, 
 predicate in_range = Standard__short_float.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Float32 as Float32

 type float__ 
 
 val constant first 
   : Float32.t
  ensures { result =  (Float32.neg (340282346638528859811704183484516925440.0:Float32.t)) }
 
 val constant last 
   : Float32.t
  ensures { result =  (340282346638528859811704183484516925440.0:Float32.t) }
 
 predicate in_range 
   (x : Float32.t) =
  (Float32.t'isFinite x)
 val in_range 
   (x : Float32.t) : bool
  ensures { result <-> in_range (x : Float32.t) }
 
 clone export "ada__model".Static_Float32 with axiom .,
 type t = float__, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type float____ref =
  { mutable float____content : float__ }
 
 function float____ref_float____content__projection 
   (a : float____ref) : float__ =
  a.float____content
 
 meta "model_projection" function float____ref_float____content__projection
 
 meta "inline:no" function float____ref_float____content__projection
 
 val float____havoc 
   (x : float____ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float__rep
 use        Standard__float as Standard__float
 use        "_gnatprove_standard".Float32 as Float32
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Float32 with axiom .,
 type t = Standard__float.float__, 
 predicate in_range = Standard__float.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Float64 as Float64

 type long_float 
 
 val constant first 
   : Float64.t
  ensures { result =  (Float64.neg (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t)) }
 
 val constant last 
   : Float64.t
  ensures { result =  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0:Float64.t) }
 
 predicate in_range 
   (x : Float64.t) =
  (Float64.t'isFinite x)
 val in_range 
   (x : Float64.t) : bool
  ensures { result <-> in_range (x : Float64.t) }
 
 clone export "ada__model".Static_Float64 with axiom .,
 type t = long_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type long_float__ref =
  { mutable long_float__content : long_float }
 
 function long_float__ref_long_float__content__projection 
   (a : long_float__ref) : long_float =
  a.long_float__content
 
 meta "model_projection" function long_float__ref_long_float__content__projection
 
 meta "inline:no" function long_float__ref_long_float__content__projection
 
 val long_float__havoc 
   (x : long_float__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float__rep
 use        Standard__long_float as Standard__long_float
 use        "_gnatprove_standard".Float64 as Float64
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Float64 with axiom .,
 type t = Standard__long_float.long_float, 
 predicate in_range = Standard__long_float.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type character 
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (255 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type character__ref =
  { mutable character__content : character }
 
 function character__ref_character__content__projection 
   (a : character__ref) : character =
  a.character__content
 
 meta "model_projection" function character__ref_character__content__projection
 
 meta "inline:no" function character__ref_character__content__projection
 
 val character__havoc 
   (x : character__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character__rep
 use        Standard__character as Standard__character
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__character.character, 
 predicate in_range = Standard__character.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type wide_character 
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (65535 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type wide_character__ref =
  { mutable wide_character__content : wide_character }
 
 function wide_character__ref_wide_character__content__projection 
   (a : wide_character__ref) : wide_character =
  a.wide_character__content
 
 meta "model_projection" function wide_character__ref_wide_character__content__projection
 
 meta "inline:no" function wide_character__ref_wide_character__content__projection
 
 val wide_character__havoc 
   (x : wide_character__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character__rep
 use        Standard__wide_character as Standard__wide_character
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__wide_character.wide_character, 
 predicate in_range = Standard__wide_character.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type wide_wide_character 
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (2147483647 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = wide_wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type wide_wide_character__ref =
  { mutable wide_wide_character__content : wide_wide_character }
 
 function wide_wide_character__ref_wide_wide_character__content__projection 
   (a : wide_wide_character__ref) : wide_wide_character =
  a.wide_wide_character__content
 
 meta "model_projection" function wide_wide_character__ref_wide_wide_character__content__projection
 
 meta "inline:no" function wide_wide_character__ref_wide_wide_character__content__projection
 
 val wide_wide_character__havoc 
   (x : wide_wide_character__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character__rep
 use        Standard__wide_wide_character as Standard__wide_wide_character
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__wide_wide_character.wide_wide_character, 
 predicate in_range = Standard__wide_wide_character.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing the array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__character
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep

 function index_I1_one 
   : int =
  (1 : int)
 
 type component_type =
  Standard__character.character
 
 clone export "_gnatprove_standard".Array__1 with axiom .,
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_91   : int.
   (if (( (a__first <= temp___idx_91) /\ (temp___idx_91 <= a__last) )) then (
    ((Standard__character__rep.to_rep (get a temp___idx_91)) = (Standard__character__rep.to_rep (get b ((b__first - a__first) + temp___idx_91))))) else true)) )
 val bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool
  ensures { result = bool_eq (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) }
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_91   : int.
    (if (( (a__first <= temp___idx_91) /\ (temp___idx_91 <= a__last) )) then (
     ((Standard__character__rep.to_rep (get a temp___idx_91)) = (Standard__character__rep.to_rep (get b ((b__first - a__first) + temp___idx_91))))) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "string", created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Standard__character__Concat
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Array__Int__Standard__character as Array__Int__Standard__character

 function index_Index_one 
   : int =
  (1 : int)
 
 clone export "_gnatprove_standard".Array__1__Concat with axiom .,
 type component_type = Array__Int__Standard__character.component_type, 
 type map = Array__Int__Standard__character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__character.get

end

(* Module for axiomatizing comparison for the array theory associated to type "string", created in Why.Gen.Arrays.Declare_Comparison_Symbols *)
module Array__Int__Standard__character_Comp
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character

 function index_Index_one 
   : int =
  (1 : int)
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with axiom .,
 type component_type = Array__Int__Standard__character.component_type, 
 function to_rep = Standard__character__rep.to_rep, 
 type map = Array__Int__Standard__character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__character.get, 
 function bool_eq = Array__Int__Standard__character.bool_eq

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer as Standard__integer
 use        Standard__positive as Standard__positive
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Standard__integer__rep as Standard__integer__rep

 type component_type =
  Standard__character.character
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type string =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline:no" function to_array
 
 meta "model_projection" function first
 
 meta "inline:no" function first
 
 meta "model_projection" function last
 
 meta "inline:no" function last
 
 type string__ref =
  { mutable string__content : string }
 
 function string__ref_string__content__projection 
   (a : string__ref) : string =
  a.string__content
 
 meta "model_projection" function string__ref_string__content__projection
 
 meta "inline:no" function string__ref_string__content__projection
 
 val string__havoc 
   (x : string__ref) : unit
  writes {x}

end

(* Module defining to_string/of_string functions, created in Gnat2Why.Types.Translate_Type *)
module Standard_String__Img
 use        "int".Int
 use        Standard__string as Standard__string
 use        "_gnatprove_standard".Main
 use        "int".Int

 val function to_string 
   (x : Main.__image) (s : int) : Standard__string.string
 
 val function from_string 
   (x : Standard__string.string) : Main.__image
 
 axiom to_string__first :
  (forall x   : Main.__image.
  (forall s   : int [(to_string x s)].
   ((Standard__string.first (to_string x s)) = (1 : int))))
 
 axiom to_string__length :
  (forall x   : Main.__image.
  (forall s   : int [(to_string x s)].
   ( (s >= (0 : int)) -> ((Standard__string.length (to_string x s)) <= s) )))

end

(* Module for axiomatizing the array theory associated to type "wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_character
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__wide_character as Standard__wide_character
 use        Standard__wide_character__rep as Standard__wide_character__rep

 function index_I1_one 
   : int =
  (1 : int)
 
 type component_type =
  Standard__wide_character.wide_character
 
 clone export "_gnatprove_standard".Array__1 with axiom .,
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_98   : int.
   (if (( (a__first <= temp___idx_98) /\ (temp___idx_98 <= a__last) )) then (
    ((Standard__wide_character__rep.to_rep (get a temp___idx_98)) = (Standard__wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_98))))) else true)) )
 val bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool
  ensures { result = bool_eq (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) }
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_98   : int.
    (if (( (a__first <= temp___idx_98) /\ (temp___idx_98 <= a__last) )) then (
     ((Standard__wide_character__rep.to_rep (get a temp___idx_98)) = (Standard__wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_98))))) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "wide_string", created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Standard__wide_character__Concat
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Array__Int__Standard__wide_character as Array__Int__Standard__wide_character

 function index_Index_one 
   : int =
  (1 : int)
 
 clone export "_gnatprove_standard".Array__1__Concat with axiom .,
 type component_type = Array__Int__Standard__wide_character.component_type, 
 type map = Array__Int__Standard__wide_character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__wide_character.get

end

(* Module for axiomatizing comparison for the array theory associated to type "wide_string", created in Why.Gen.Arrays.Declare_Comparison_Symbols *)
module Array__Int__Standard__wide_character_Comp
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__wide_character__rep as Standard__wide_character__rep
 use        Array__Int__Standard__wide_character as Array__Int__Standard__wide_character

 function index_Index_one 
   : int =
  (1 : int)
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with axiom .,
 type component_type = Array__Int__Standard__wide_character.component_type, 
 function to_rep = Standard__wide_character__rep.to_rep, 
 type map = Array__Int__Standard__wide_character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__wide_character.get, 
 function bool_eq = Array__Int__Standard__wide_character.bool_eq

end

(* Module for axiomatizing type "wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_string
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer as Standard__integer
 use        Standard__positive as Standard__positive
 use        Standard__wide_character as Standard__wide_character
 use        Standard__integer__rep as Standard__integer__rep
 use        Array__Int__Standard__wide_character as Array__Int__Standard__wide_character

 type component_type =
  Standard__wide_character.wide_character
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with axiom .,
 type map = Array__Int__Standard__wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_string =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline:no" function to_array
 
 meta "model_projection" function first
 
 meta "inline:no" function first
 
 meta "model_projection" function last
 
 meta "inline:no" function last
 
 type wide_string__ref =
  { mutable wide_string__content : wide_string }
 
 function wide_string__ref_wide_string__content__projection 
   (a : wide_string__ref) : wide_string =
  a.wide_string__content
 
 meta "model_projection" function wide_string__ref_wide_string__content__projection
 
 meta "inline:no" function wide_string__ref_wide_string__content__projection
 
 val wide_string__havoc 
   (x : wide_string__ref) : unit
  writes {x}

end

(* Module for axiomatizing the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int__Standard__wide_wide_character
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__wide_wide_character as Standard__wide_wide_character
 use        Standard__wide_wide_character__rep as Standard__wide_wide_character__rep

 function index_I1_one 
   : int =
  (1 : int)
 
 type component_type =
  Standard__wide_wide_character.wide_wide_character
 
 clone export "_gnatprove_standard".Array__1 with axiom .,
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one, 
 type component_type = component_type
 
 function bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool =
  ( (if ((a__first <= a__last)) then (
   ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
   (b__first > b__last))) /\ (forall temp___idx_105   : int.
   (if (( (a__first <= temp___idx_105) /\ (temp___idx_105 <= a__last) )) then (
    ((Standard__wide_wide_character__rep.to_rep (get a temp___idx_105)) = (Standard__wide_wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_105))))) else true)) )
 val bool_eq 
   (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) : bool
  ensures { result = bool_eq (a : map) (a__first : int) (a__last : int) (b : map) (b__first : int) (b__last : int) }
 
 axiom bool_eq_rev :
  (forall a   b   : map.
  (forall a__first   a__last   b__first   b__last   : int.
   ( ((bool_eq b b__first b__last a a__first a__last) = True) -> ( (if ((a__first <= a__last)) then (
    ( (b__first <= b__last) /\ ((a__last - a__first) = (b__last - b__first)) )) else (
    (b__first > b__last))) /\ (forall temp___idx_105   : int.
    (if (( (a__first <= temp___idx_105) /\ (temp___idx_105 <= a__last) )) then (
     ((Standard__wide_wide_character__rep.to_rep (get a temp___idx_105)) = (Standard__wide_wide_character__rep.to_rep (get b ((b__first - a__first) + temp___idx_105))))) else true)) ) )))

end

(* Module for axiomatizing concatenation for the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Declare_Concatenation_Symbols *)
module Array__Int__Standard__wide_wide_character__Concat
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Array__Int__Standard__wide_wide_character as Array__Int__Standard__wide_wide_character

 function index_Index_one 
   : int =
  (1 : int)
 
 clone export "_gnatprove_standard".Array__1__Concat with axiom .,
 type component_type = Array__Int__Standard__wide_wide_character.component_type, 
 type map = Array__Int__Standard__wide_wide_character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__wide_wide_character.get

end

(* Module for axiomatizing comparison for the array theory associated to type "wide_wide_string", created in Why.Gen.Arrays.Declare_Comparison_Symbols *)
module Array__Int__Standard__wide_wide_character_Comp
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__wide_wide_character__rep as Standard__wide_wide_character__rep
 use        Array__Int__Standard__wide_wide_character as Array__Int__Standard__wide_wide_character

 function index_Index_one 
   : int =
  (1 : int)
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with axiom .,
 type component_type = Array__Int__Standard__wide_wide_character.component_type, 
 function to_rep = Standard__wide_wide_character__rep.to_rep, 
 type map = Array__Int__Standard__wide_wide_character.map, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int__Standard__wide_wide_character.get, 
 function bool_eq = Array__Int__Standard__wide_wide_character.bool_eq

end

(* Module for axiomatizing type "wide_wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_string
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer as Standard__integer
 use        Standard__positive as Standard__positive
 use        Standard__wide_wide_character as Standard__wide_wide_character
 use        Standard__integer__rep as Standard__integer__rep
 use        Array__Int__Standard__wide_wide_character as Array__Int__Standard__wide_wide_character

 type component_type =
  Standard__wide_wide_character.wide_wide_character
 
 function index_1_id 
   (x : int) : int =
  x
 
 clone export "ada__model".Unconstr_Array with axiom .,
 type map = Array__Int__Standard__wide_wide_character.map, 
 function array_bool_eq = Array__Int__Standard__wide_wide_character.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer__rep.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_wide_string =
  __t
 
 meta "model_projection" function to_array
 
 meta "inline:no" function to_array
 
 meta "model_projection" function first
 
 meta "inline:no" function first
 
 meta "model_projection" function last
 
 meta "inline:no" function last
 
 type wide_wide_string__ref =
  { mutable wide_wide_string__content : wide_wide_string }
 
 function wide_wide_string__ref_wide_wide_string__content__projection 
   (a : wide_wide_string__ref) : wide_wide_string =
  a.wide_wide_string__content
 
 meta "model_projection" function wide_wide_string__ref_wide_wide_string__content__projection
 
 meta "inline:no" function wide_wide_string__ref_wide_wide_string__content__projection
 
 val wide_wide_string__havoc 
   (x : wide_wide_string__ref) : unit
  writes {x}

end

(* Module for fixed-point operation for type at system.ads:1, created in Why.Gen.Scalars.Create_Fixed_Point_Theory_If_Needed *)
module Fixed_Point__1_1000000000
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 function num_small 
   : int =
  (1 : int)
 
 function den_small 
   : int =
  (1000000000 : int)
 
 clone export "ada__model".Fixed_Point_Rep with axiom .,
 function num_small = num_small, 
 function den_small = den_small

end

(* Module for axiomatizing type "duration", created in Gnat2Why.Types.Translate_Type *)
module Standard__duration
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main

 type duration 
 
 val constant num_small 
   : Main.__fixed
  ensures { result =  (1 : int) }
 
 val constant den_small 
   : Main.__fixed
  ensures { result =  (1000000000 : int) }
 
 val constant first 
   : Main.__fixed
  ensures { result =  ( ( -9223372036854775808 ) : int ) }
 
 val constant last 
   : Main.__fixed
  ensures { result =  ( 9223372036854775807 : int ) }
 
 predicate in_range 
   (x : Main.__fixed) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : Main.__fixed) : bool
  ensures { result <-> in_range (x : Main.__fixed) }
 
 clone export "ada__model".Static_Fixed_Point with axiom .,
 type t = duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type duration__ref =
  { mutable duration__content : duration }
 
 function duration__ref_duration__content__projection 
   (a : duration__ref) : duration =
  a.duration__content
 
 meta "model_projection" function duration__ref_duration__content__projection
 
 meta "inline:no" function duration__ref_duration__content__projection
 
 val duration__havoc 
   (x : duration__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "duration", created in Gnat2Why.Types.Translate_Type *)
module Standard__duration__rep
 use        Standard__duration as Standard__duration
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Fixed with axiom .,
 type t = Standard__duration.duration, 
 predicate in_range = Standard__duration.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type integer_8 =
  < range -128 127 >
 
 val constant first 
   : int
  ensures { result =  (( -128) : int) }
 
 val constant last 
   : int
  ensures { result =  (127 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_8__ref =
  { mutable integer_8__content : integer_8 }
 
 function integer_8__ref_integer_8__content__projection 
   (a : integer_8__ref) : integer_8 =
  a.integer_8__content
 
 meta "model_projection" function integer_8__ref_integer_8__content__projection
 
 meta "inline:no" function integer_8__ref_integer_8__content__projection
 
 val integer_8__havoc 
   (x : integer_8__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8__rep
 use        Standard__integer_8 as Standard__integer_8
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__integer_8.integer_8) : int =
  (Standard__integer_8.integer_8'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__integer_8.integer_8, 
 predicate in_range = Standard__integer_8.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type integer_16 =
  < range -32768 32767 >
 
 val constant first 
   : int
  ensures { result =  (( -32768) : int) }
 
 val constant last 
   : int
  ensures { result =  (32767 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_16__ref =
  { mutable integer_16__content : integer_16 }
 
 function integer_16__ref_integer_16__content__projection 
   (a : integer_16__ref) : integer_16 =
  a.integer_16__content
 
 meta "model_projection" function integer_16__ref_integer_16__content__projection
 
 meta "inline:no" function integer_16__ref_integer_16__content__projection
 
 val integer_16__havoc 
   (x : integer_16__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16__rep
 use        Standard__integer_16 as Standard__integer_16
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__integer_16.integer_16) : int =
  (Standard__integer_16.integer_16'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__integer_16.integer_16, 
 predicate in_range = Standard__integer_16.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type integer_32 =
  < range -2147483648 2147483647 >
 
 val constant first 
   : int
  ensures { result =  (( -2147483648) : int) }
 
 val constant last 
   : int
  ensures { result =  (2147483647 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_32__ref =
  { mutable integer_32__content : integer_32 }
 
 function integer_32__ref_integer_32__content__projection 
   (a : integer_32__ref) : integer_32 =
  a.integer_32__content
 
 meta "model_projection" function integer_32__ref_integer_32__content__projection
 
 meta "inline:no" function integer_32__ref_integer_32__content__projection
 
 val integer_32__havoc 
   (x : integer_32__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32__rep
 use        Standard__integer_32 as Standard__integer_32
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__integer_32.integer_32) : int =
  (Standard__integer_32.integer_32'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__integer_32.integer_32, 
 predicate in_range = Standard__integer_32.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type integer_64 =
  < range -9223372036854775808 9223372036854775807 >
 
 val constant first 
   : int
  ensures { result =  (( -9223372036854775808) : int) }
 
 val constant last 
   : int
  ensures { result =  (9223372036854775807 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type integer_64__ref =
  { mutable integer_64__content : integer_64 }
 
 function integer_64__ref_integer_64__content__projection 
   (a : integer_64__ref) : integer_64 =
  a.integer_64__content
 
 meta "model_projection" function integer_64__ref_integer_64__content__projection
 
 meta "inline:no" function integer_64__ref_integer_64__content__projection
 
 val integer_64__havoc 
   (x : integer_64__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64__rep
 use        Standard__integer_64 as Standard__integer_64
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__integer_64.integer_64) : int =
  (Standard__integer_64.integer_64'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__integer_64.integer_64, 
 predicate in_range = Standard__integer_64.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type universal_integer =
  < range -9223372036854775808 9223372036854775807 >
 
 val constant first 
   : int
  ensures { result =  (( -9223372036854775808) : int) }
 
 val constant last 
   : int
  ensures { result =  (9223372036854775807 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = universal_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type universal_integer__ref =
  { mutable universal_integer__content : universal_integer }
 
 function universal_integer__ref_universal_integer__content__projection 
   (a : universal_integer__ref) : universal_integer =
  a.universal_integer__content
 
 meta "model_projection" function universal_integer__ref_universal_integer__content__projection
 
 meta "inline:no" function universal_integer__ref_universal_integer__content__projection
 
 val universal_integer__havoc 
   (x : universal_integer__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer__rep
 use        Standard__universal_integer as Standard__universal_integer
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Standard__universal_integer.universal_integer) : int =
  (Standard__universal_integer.universal_integer'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Standard__universal_integer.universal_integer, 
 predicate in_range = Standard__universal_integer.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "TcountB" defined at a-textio.ads:77, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__TcountB
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type tcountB =
  < range -2147483648 2147483647 >
 
 val constant first 
   : int
  ensures { result =  (( -2147483648) : int) }
 
 val constant last 
   : int
  ensures { result =  (2147483647 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = tcountB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tcountB__ref =
  { mutable tcountB__content : tcountB }
 
 function tcountB__ref_tcountB__content__projection 
   (a : tcountB__ref) : tcountB =
  a.tcountB__content
 
 meta "model_projection" function tcountB__ref_tcountB__content__projection
 
 meta "inline:no" function tcountB__ref_tcountB__content__projection
 
 val tcountB__havoc 
   (x : tcountB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TcountB" defined at a-textio.ads:77, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__TcountB__rep
 use        Ada__text_io__TcountB as Ada__text_io__TcountB
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Ada__text_io__TcountB.tcountB) : int =
  (Ada__text_io__TcountB.tcountB'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Ada__text_io__TcountB.tcountB, 
 predicate in_range = Ada__text_io__TcountB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "count" defined at a-textio.ads:77, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__count
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type count =
  < range 0 2147483647 >
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (2147483647 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = count, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type count__ref =
  { mutable count__content : count }
 
 function count__ref_count__content__projection 
   (a : count__ref) : count =
  a.count__content
 
 meta "model_projection" function count__ref_count__content__projection
 
 meta "inline:no" function count__ref_count__content__projection
 
 val count__havoc 
   (x : count__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "count" defined at a-textio.ads:77, created in Gnat2Why.Types.Translate_Type *)
module Ada__text_io__count__rep
 use        Ada__text_io__count as Ada__text_io__count
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Ada__text_io__count.count) : int =
  (Ada__text_io__count.count'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Ada__text_io__count.count, 
 predicate in_range = Ada__text_io__count.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "TtempB" defined at trains.ads:7, created in Gnat2Why.Types.Translate_Type *)
module Trains__TtempB
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type ttempB =
  < range -128 127 >
 
 val constant first 
   : int
  ensures { result =  (( -128) : int) }
 
 val constant last 
   : int
  ensures { result =  (127 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = ttempB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type ttempB__ref =
  { mutable ttempB__content : ttempB }
 
 function ttempB__ref_ttempB__content__projection 
   (a : ttempB__ref) : ttempB =
  a.ttempB__content
 
 meta "model_projection" function ttempB__ref_ttempB__content__projection
 
 meta "inline:no" function ttempB__ref_ttempB__content__projection
 
 val ttempB__havoc 
   (x : ttempB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TtempB" defined at trains.ads:7, created in Gnat2Why.Types.Translate_Type *)
module Trains__TtempB__rep
 use        Trains__TtempB as Trains__TtempB
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Trains__TtempB.ttempB) : int =
  (Trains__TtempB.ttempB'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Trains__TtempB.ttempB, 
 predicate in_range = Trains__TtempB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "temp" defined at trains.ads:7, created in Gnat2Why.Types.Translate_Type *)
module Trains__temp
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type temp =
  < range 0 100 >
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (100 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = temp, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type temp__ref =
  { mutable temp__content : temp }
 
 function temp__ref_temp__content__projection 
   (a : temp__ref) : temp =
  a.temp__content
 
 meta "model_projection" function temp__ref_temp__content__projection
 
 meta "inline:no" function temp__ref_temp__content__projection
 
 val temp__havoc 
   (x : temp__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "temp" defined at trains.ads:7, created in Gnat2Why.Types.Translate_Type *)
module Trains__temp__rep
 use        Trains__temp as Trains__temp
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Trains__temp.temp) : int =
  (Trains__temp.temp'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Trains__temp.temp, 
 predicate in_range = Trains__temp.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "TcontrolrodsB" defined at trains.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Trains__TcontrolrodsB
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type tcontrolrodsB =
  < range -128 127 >
 
 val constant first 
   : int
  ensures { result =  (( -128) : int) }
 
 val constant last 
   : int
  ensures { result =  (127 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = tcontrolrodsB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tcontrolrodsB__ref =
  { mutable tcontrolrodsB__content : tcontrolrodsB }
 
 function tcontrolrodsB__ref_tcontrolrodsB__content__projection 
   (a : tcontrolrodsB__ref) : tcontrolrodsB =
  a.tcontrolrodsB__content
 
 meta "model_projection" function tcontrolrodsB__ref_tcontrolrodsB__content__projection
 
 meta "inline:no" function tcontrolrodsB__ref_tcontrolrodsB__content__projection
 
 val tcontrolrodsB__havoc 
   (x : tcontrolrodsB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TcontrolrodsB" defined at trains.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Trains__TcontrolrodsB__rep
 use        Trains__TcontrolrodsB as Trains__TcontrolrodsB
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Trains__TcontrolrodsB.tcontrolrodsB) : int =
  (Trains__TcontrolrodsB.tcontrolrodsB'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Trains__TcontrolrodsB.tcontrolrodsB, 
 predicate in_range = Trains__TcontrolrodsB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "controlrods" defined at trains.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Trains__controlrods
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type controlrods =
  < range 1 5 >
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (5 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = controlrods, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type controlrods__ref =
  { mutable controlrods__content : controlrods }
 
 function controlrods__ref_controlrods__content__projection 
   (a : controlrods__ref) : controlrods =
  a.controlrods__content
 
 meta "model_projection" function controlrods__ref_controlrods__content__projection
 
 meta "inline:no" function controlrods__ref_controlrods__content__projection
 
 val controlrods__havoc 
   (x : controlrods__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "controlrods" defined at trains.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Trains__controlrods__rep
 use        Trains__controlrods as Trains__controlrods
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Trains__controlrods.controlrods) : int =
  (Trains__controlrods.controlrods'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Trains__controlrods.controlrods, 
 predicate in_range = Trains__controlrods.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "TwatersupplyB" defined at trains.ads:9, created in Gnat2Why.Types.Translate_Type *)
module Trains__TwatersupplyB
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type twatersupplyB =
  < range -128 127 >
 
 val constant first 
   : int
  ensures { result =  (( -128) : int) }
 
 val constant last 
   : int
  ensures { result =  (127 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = twatersupplyB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type twatersupplyB__ref =
  { mutable twatersupplyB__content : twatersupplyB }
 
 function twatersupplyB__ref_twatersupplyB__content__projection 
   (a : twatersupplyB__ref) : twatersupplyB =
  a.twatersupplyB__content
 
 meta "model_projection" function twatersupplyB__ref_twatersupplyB__content__projection
 
 meta "inline:no" function twatersupplyB__ref_twatersupplyB__content__projection
 
 val twatersupplyB__havoc 
   (x : twatersupplyB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TwatersupplyB" defined at trains.ads:9, created in Gnat2Why.Types.Translate_Type *)
module Trains__TwatersupplyB__rep
 use        Trains__TwatersupplyB as Trains__TwatersupplyB
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Trains__TwatersupplyB.twatersupplyB) : int =
  (Trains__TwatersupplyB.twatersupplyB'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Trains__TwatersupplyB.twatersupplyB, 
 predicate in_range = Trains__TwatersupplyB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "watersupply" defined at trains.ads:9, created in Gnat2Why.Types.Translate_Type *)
module Trains__watersupply
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type watersupply =
  < range 1 10 >
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (10 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = watersupply, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type watersupply__ref =
  { mutable watersupply__content : watersupply }
 
 function watersupply__ref_watersupply__content__projection 
   (a : watersupply__ref) : watersupply =
  a.watersupply__content
 
 meta "model_projection" function watersupply__ref_watersupply__content__projection
 
 meta "inline:no" function watersupply__ref_watersupply__content__projection
 
 val watersupply__havoc 
   (x : watersupply__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "watersupply" defined at trains.ads:9, created in Gnat2Why.Types.Translate_Type *)
module Trains__watersupply__rep
 use        Trains__watersupply as Trains__watersupply
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Trains__watersupply.watersupply) : int =
  (Trains__watersupply.watersupply'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Trains__watersupply.watersupply, 
 predicate in_range = Trains__watersupply.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "TpowersupplyB" defined at trains.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Trains__TpowersupplyB
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type tpowersupplyB =
  < range -128 127 >
 
 val constant first 
   : int
  ensures { result =  (( -128) : int) }
 
 val constant last 
   : int
  ensures { result =  (127 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = tpowersupplyB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tpowersupplyB__ref =
  { mutable tpowersupplyB__content : tpowersupplyB }
 
 function tpowersupplyB__ref_tpowersupplyB__content__projection 
   (a : tpowersupplyB__ref) : tpowersupplyB =
  a.tpowersupplyB__content
 
 meta "model_projection" function tpowersupplyB__ref_tpowersupplyB__content__projection
 
 meta "inline:no" function tpowersupplyB__ref_tpowersupplyB__content__projection
 
 val tpowersupplyB__havoc 
   (x : tpowersupplyB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TpowersupplyB" defined at trains.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Trains__TpowersupplyB__rep
 use        Trains__TpowersupplyB as Trains__TpowersupplyB
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Trains__TpowersupplyB.tpowersupplyB) : int =
  (Trains__TpowersupplyB.tpowersupplyB'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Trains__TpowersupplyB.tpowersupplyB, 
 predicate in_range = Trains__TpowersupplyB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "powersupply" defined at trains.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Trains__powersupply
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type powersupply =
  < range 0 10 >
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (10 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = powersupply, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type powersupply__ref =
  { mutable powersupply__content : powersupply }
 
 function powersupply__ref_powersupply__content__projection 
   (a : powersupply__ref) : powersupply =
  a.powersupply__content
 
 meta "model_projection" function powersupply__ref_powersupply__content__projection
 
 meta "inline:no" function powersupply__ref_powersupply__content__projection
 
 val powersupply__havoc 
   (x : powersupply__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "powersupply" defined at trains.ads:10, created in Gnat2Why.Types.Translate_Type *)
module Trains__powersupply__rep
 use        Trains__powersupply as Trains__powersupply
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Trains__powersupply.powersupply) : int =
  (Trains__powersupply.powersupply'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Trains__powersupply.powersupply, 
 predicate in_range = Trains__powersupply.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "TcarriagesB" defined at trains.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Trains__TcarriagesB
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type tcarriagesB =
  < range -128 127 >
 
 val constant first 
   : int
  ensures { result =  (( -128) : int) }
 
 val constant last 
   : int
  ensures { result =  (127 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = tcarriagesB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tcarriagesB__ref =
  { mutable tcarriagesB__content : tcarriagesB }
 
 function tcarriagesB__ref_tcarriagesB__content__projection 
   (a : tcarriagesB__ref) : tcarriagesB =
  a.tcarriagesB__content
 
 meta "model_projection" function tcarriagesB__ref_tcarriagesB__content__projection
 
 meta "inline:no" function tcarriagesB__ref_tcarriagesB__content__projection
 
 val tcarriagesB__havoc 
   (x : tcarriagesB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TcarriagesB" defined at trains.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Trains__TcarriagesB__rep
 use        Trains__TcarriagesB as Trains__TcarriagesB
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Trains__TcarriagesB.tcarriagesB) : int =
  (Trains__TcarriagesB.tcarriagesB'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Trains__TcarriagesB.tcarriagesB, 
 predicate in_range = Trains__TcarriagesB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "carriages" defined at trains.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Trains__carriages
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type carriages =
  < range 0 10 >
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (10 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = carriages, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type carriages__ref =
  { mutable carriages__content : carriages }
 
 function carriages__ref_carriages__content__projection 
   (a : carriages__ref) : carriages =
  a.carriages__content
 
 meta "model_projection" function carriages__ref_carriages__content__projection
 
 meta "inline:no" function carriages__ref_carriages__content__projection
 
 val carriages__havoc 
   (x : carriages__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "carriages" defined at trains.ads:11, created in Gnat2Why.Types.Translate_Type *)
module Trains__carriages__rep
 use        Trains__carriages as Trains__carriages
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Trains__carriages.carriages) : int =
  (Trains__carriages.carriages'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Trains__carriages.carriages, 
 predicate in_range = Trains__carriages.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "TvelocityB" defined at trains.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Trains__TvelocityB
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type tvelocityB =
  < range -128 127 >
 
 val constant first 
   : int
  ensures { result =  (( -128) : int) }
 
 val constant last 
   : int
  ensures { result =  (127 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = tvelocityB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type tvelocityB__ref =
  { mutable tvelocityB__content : tvelocityB }
 
 function tvelocityB__ref_tvelocityB__content__projection 
   (a : tvelocityB__ref) : tvelocityB =
  a.tvelocityB__content
 
 meta "model_projection" function tvelocityB__ref_tvelocityB__content__projection
 
 meta "inline:no" function tvelocityB__ref_tvelocityB__content__projection
 
 val tvelocityB__havoc 
   (x : tvelocityB__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "TvelocityB" defined at trains.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Trains__TvelocityB__rep
 use        Trains__TvelocityB as Trains__TvelocityB
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Trains__TvelocityB.tvelocityB) : int =
  (Trains__TvelocityB.tvelocityB'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Trains__TvelocityB.tvelocityB, 
 predicate in_range = Trains__TvelocityB.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "velocity" defined at trains.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Trains__velocity
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type velocity =
  < range 0 100 >
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (100 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = velocity, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type velocity__ref =
  { mutable velocity__content : velocity }
 
 function velocity__ref_velocity__content__projection 
   (a : velocity__ref) : velocity =
  a.velocity__content
 
 meta "model_projection" function velocity__ref_velocity__content__projection
 
 meta "inline:no" function velocity__ref_velocity__content__projection
 
 val velocity__havoc 
   (x : velocity__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "velocity" defined at trains.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Trains__velocity__rep
 use        Trains__velocity as Trains__velocity
 use        "_gnatprove_standard".Main
 use        "int".Int

 function to_rep 
   (x : Trains__velocity.velocity) : int =
  (Trains__velocity.velocity'int x)
 
 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Trains__velocity.velocity, 
 predicate in_range = Trains__velocity.in_range, 
 function to_rep = to_rep
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "reactorstate" defined at trains.ads:13, created in Gnat2Why.Types.Translate_Type *)
module Trains__reactorstate
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type reactorstate 
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (1 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = reactorstate, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type reactorstate__ref =
  { mutable reactorstate__content : reactorstate }
 
 function reactorstate__ref_reactorstate__content__projection 
   (a : reactorstate__ref) : reactorstate =
  a.reactorstate__content
 
 meta "model_projection" function reactorstate__ref_reactorstate__content__projection
 
 meta "inline:no" function reactorstate__ref_reactorstate__content__projection
 
 val reactorstate__havoc 
   (x : reactorstate__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "reactorstate" defined at trains.ads:13, created in Gnat2Why.Types.Translate_Type *)
module Trains__reactorstate__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Trains__reactorstate.reactorstate, 
 predicate in_range = Trains__reactorstate.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing type "lights" defined at trains.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Trains__lights
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type lights 
 
 val constant first 
   : int
  ensures { result =  (0 : int) }
 
 val constant last 
   : int
  ensures { result =  (2 : int) }
 
 predicate in_range 
   (x : int) =
  ( (first <= x) /\ (x <= last) )
 val in_range 
   (x : int) : bool
  ensures { result <-> in_range (x : int) }
 
 clone export "ada__model".Static_Discrete with axiom .,
 type t = lights, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range
 
 type lights__ref =
  { mutable lights__content : lights }
 
 function lights__ref_lights__content__projection 
   (a : lights__ref) : lights =
  a.lights__content
 
 meta "model_projection" function lights__ref_lights__content__projection
 
 meta "inline:no" function lights__ref_lights__content__projection
 
 val lights__havoc 
   (x : lights__ref) : unit
  writes {x}

end

(* Module defining to_rep/of_rep for type "lights" defined at trains.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Trains__lights__rep
 use        Trains__lights as Trains__lights
 use        "_gnatprove_standard".Main
 use        "int".Int

 clone export "ada__model".Rep_Proj_Int with axiom .,
 type t = Trains__lights.lights, 
 predicate in_range = Trains__lights.in_range
 
 meta "model_projection" function to_rep
 
 meta "inline:no" function to_rep

end

(* Module for axiomatizing the record theory associated to type "reactors" defined at trains.ads:17, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Trains__reactors__rep
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Trains__temp as Trains__temp
 use        Trains__temp__rep as Trains__temp__rep
 use        Trains__controlrods as Trains__controlrods
 use        Trains__controlrods__rep as Trains__controlrods__rep
 use        Trains__watersupply as Trains__watersupply
 use        Trains__watersupply__rep as Trains__watersupply__rep
 use        Trains__powersupply as Trains__powersupply
 use        Trains__powersupply__rep as Trains__powersupply__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep
 use        Trains__lights as Trains__lights
 use        Trains__lights__rep as Trains__lights__rep

 type __split_fields =
  { rec__trains__reactors__lightstate [@model_trace:.3579] [@name:lightState] : Trains__lights.lights; rec__trains__reactors__currenttemp [@name:currentTemp] [@model_trace:.3589] : Trains__temp.temp; rec__trains__reactors__nocontrolrods [@model_trace:.3599] [@name:noControlRods] : Trains__controlrods.controlrods; rec__trains__reactors__amountofwater [@name:amountOfWater] [@model_trace:.3609] : Trains__watersupply.watersupply; rec__trains__reactors__currentreactorstate [@model_trace:.3619] [@name:currentReactorState] : Trains__reactorstate.reactorstate; rec__trains__reactors__amountofpower [@model_trace:.3629] [@name:amountOfPower] : Trains__powersupply.powersupply }
 
 function __split_fields_rec__trains__reactors__lightstate__projection [@model_trace:.3579] [@name:lightState] 
   (a : __split_fields) : Trains__lights.lights =
  a.rec__trains__reactors__lightstate
 
 meta "model_projection" function __split_fields_rec__trains__reactors__lightstate__projection
 
 meta "inline:no" function __split_fields_rec__trains__reactors__lightstate__projection
 
 function __split_fields_rec__trains__reactors__currenttemp__projection [@name:currentTemp] [@model_trace:.3589] 
   (a : __split_fields) : Trains__temp.temp =
  a.rec__trains__reactors__currenttemp
 
 meta "model_projection" function __split_fields_rec__trains__reactors__currenttemp__projection
 
 meta "inline:no" function __split_fields_rec__trains__reactors__currenttemp__projection
 
 function __split_fields_rec__trains__reactors__nocontrolrods__projection [@model_trace:.3599] [@name:noControlRods] 
   (a : __split_fields) : Trains__controlrods.controlrods =
  a.rec__trains__reactors__nocontrolrods
 
 meta "model_projection" function __split_fields_rec__trains__reactors__nocontrolrods__projection
 
 meta "inline:no" function __split_fields_rec__trains__reactors__nocontrolrods__projection
 
 function __split_fields_rec__trains__reactors__amountofwater__projection [@name:amountOfWater] [@model_trace:.3609] 
   (a : __split_fields) : Trains__watersupply.watersupply =
  a.rec__trains__reactors__amountofwater
 
 meta "model_projection" function __split_fields_rec__trains__reactors__amountofwater__projection
 
 meta "inline:no" function __split_fields_rec__trains__reactors__amountofwater__projection
 
 function __split_fields_rec__trains__reactors__currentreactorstate__projection [@model_trace:.3619] [@name:currentReactorState] 
   (a : __split_fields) : Trains__reactorstate.reactorstate =
  a.rec__trains__reactors__currentreactorstate
 
 meta "model_projection" function __split_fields_rec__trains__reactors__currentreactorstate__projection
 
 meta "inline:no" function __split_fields_rec__trains__reactors__currentreactorstate__projection
 
 function __split_fields_rec__trains__reactors__amountofpower__projection [@model_trace:.3629] [@name:amountOfPower] 
   (a : __split_fields) : Trains__powersupply.powersupply =
  a.rec__trains__reactors__amountofpower
 
 meta "model_projection" function __split_fields_rec__trains__reactors__amountofpower__projection
 
 meta "inline:no" function __split_fields_rec__trains__reactors__amountofpower__projection
 
 type __split_fields__ref =
  { mutable __split_fields__content : __split_fields }
 
 function __split_fields__ref___split_fields__content__projection 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref___split_fields__content__projection
 
 meta "inline:no" function __split_fields__ref___split_fields__content__projection
 
 val __split_fields__havoc 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep =
  { __split_fields : __split_fields }
 
 function __rep___split_fields__projection 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep___split_fields__projection
 
 meta "inline:no" function __rep___split_fields__projection
 
 function to_base 
   (a : __rep) : __rep =
  a
 val to_base 
   (a : __rep) : __rep
  ensures { result = to_base (a : __rep) }
 
 function of_base 
   (a : __rep) : __rep =
  a
 val of_base 
   (a : __rep) : __rep
  ensures { result = of_base (a : __rep) }
 
 predicate trains__reactors__lightstate__pred 
   (a : __rep) =
  true
 val trains__reactors__lightstate__pred 
   (a : __rep) : bool
  ensures { result <-> trains__reactors__lightstate__pred (a : __rep) }
 
 val rec__trains__reactors__lightstate_ 
   (a : __rep) : Trains__lights.lights
  requires {  (trains__reactors__lightstate__pred a) }
  ensures {  (result = a.__split_fields.rec__trains__reactors__lightstate) }
 
 predicate trains__reactors__currenttemp__pred 
   (a : __rep) =
  true
 val trains__reactors__currenttemp__pred 
   (a : __rep) : bool
  ensures { result <-> trains__reactors__currenttemp__pred (a : __rep) }
 
 val rec__trains__reactors__currenttemp_ 
   (a : __rep) : Trains__temp.temp
  requires {  (trains__reactors__currenttemp__pred a) }
  ensures {  (result = a.__split_fields.rec__trains__reactors__currenttemp) }
 
 predicate trains__reactors__nocontrolrods__pred 
   (a : __rep) =
  true
 val trains__reactors__nocontrolrods__pred 
   (a : __rep) : bool
  ensures { result <-> trains__reactors__nocontrolrods__pred (a : __rep) }
 
 val rec__trains__reactors__nocontrolrods_ 
   (a : __rep) : Trains__controlrods.controlrods
  requires {  (trains__reactors__nocontrolrods__pred a) }
  ensures {  (result = a.__split_fields.rec__trains__reactors__nocontrolrods) }
 
 predicate trains__reactors__amountofwater__pred 
   (a : __rep) =
  true
 val trains__reactors__amountofwater__pred 
   (a : __rep) : bool
  ensures { result <-> trains__reactors__amountofwater__pred (a : __rep) }
 
 val rec__trains__reactors__amountofwater_ 
   (a : __rep) : Trains__watersupply.watersupply
  requires {  (trains__reactors__amountofwater__pred a) }
  ensures {  (result = a.__split_fields.rec__trains__reactors__amountofwater) }
 
 predicate trains__reactors__currentreactorstate__pred 
   (a : __rep) =
  true
 val trains__reactors__currentreactorstate__pred 
   (a : __rep) : bool
  ensures { result <-> trains__reactors__currentreactorstate__pred (a : __rep) }
 
 val rec__trains__reactors__currentreactorstate_ 
   (a : __rep) : Trains__reactorstate.reactorstate
  requires {  (trains__reactors__currentreactorstate__pred a) }
  ensures {  (result = a.__split_fields.rec__trains__reactors__currentreactorstate) }
 
 predicate trains__reactors__amountofpower__pred 
   (a : __rep) =
  true
 val trains__reactors__amountofpower__pred 
   (a : __rep) : bool
  ensures { result <-> trains__reactors__amountofpower__pred (a : __rep) }
 
 val rec__trains__reactors__amountofpower_ 
   (a : __rep) : Trains__powersupply.powersupply
  requires {  (trains__reactors__amountofpower__pred a) }
  ensures {  (result = a.__split_fields.rec__trains__reactors__amountofpower) }
 
 function bool_eq 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ((Trains__lights__rep.to_rep a.__split_fields.rec__trains__reactors__lightstate) = (Trains__lights__rep.to_rep b.__split_fields.rec__trains__reactors__lightstate)) /\ ((Trains__temp__rep.to_rep a.__split_fields.rec__trains__reactors__currenttemp) = (Trains__temp__rep.to_rep b.__split_fields.rec__trains__reactors__currenttemp)) )/\( ( ((Trains__controlrods__rep.to_rep a.__split_fields.rec__trains__reactors__nocontrolrods) = (Trains__controlrods__rep.to_rep b.__split_fields.rec__trains__reactors__nocontrolrods))/\((Trains__watersupply__rep.to_rep a.__split_fields.rec__trains__reactors__amountofwater) = (Trains__watersupply__rep.to_rep b.__split_fields.rec__trains__reactors__amountofwater)) )/\( ((Trains__reactorstate__rep.to_rep a.__split_fields.rec__trains__reactors__currentreactorstate) = (Trains__reactorstate__rep.to_rep b.__split_fields.rec__trains__reactors__currentreactorstate))/\((Trains__powersupply__rep.to_rep a.__split_fields.rec__trains__reactors__amountofpower) = (Trains__powersupply__rep.to_rep b.__split_fields.rec__trains__reactors__amountofpower)) ) ) )) then (
   True) else (
   False))
 val bool_eq 
   (a : __rep) (b : __rep) : bool
  ensures { result = bool_eq (a : __rep) (b : __rep) }

end

(* Module for axiomatizing type "reactors" defined at trains.ads:17, created in Gnat2Why.Types.Translate_Type *)
module Trains__reactors
 use export Trains__reactors__rep
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type reactors =
  __rep
 
 val constant value__size 
   : int

 
 val constant object__size 
   : int

 
 val constant alignment 
   : int

 
 axiom value__size_axiom :
  ((value__size ) >= (0 : int))
 
 axiom object__size_axiom :
  ((object__size ) >= (0 : int))
 
 axiom alignment_axiom :
  ((alignment ) >= (0 : int))
 
 val constant trains__reactors__lightstate__first__bit 
   : int

 
 val constant trains__reactors__lightstate__last__bit 
   : int

 
 val constant trains__reactors__lightstate__position 
   : int

 
 axiom trains__reactors__lightstate__first__bit_axiom :
  ((trains__reactors__lightstate__first__bit ) >= (0 : int))
 
 axiom trains__reactors__lightstate__last__bit_axiom :
  ((trains__reactors__lightstate__last__bit ) > (trains__reactors__lightstate__first__bit ))
 
 axiom trains__reactors__lightstate__position_axiom :
  ((trains__reactors__lightstate__position ) >= (0 : int))
 
 val constant trains__reactors__currenttemp__first__bit 
   : int

 
 val constant trains__reactors__currenttemp__last__bit 
   : int

 
 val constant trains__reactors__currenttemp__position 
   : int

 
 axiom trains__reactors__currenttemp__first__bit_axiom :
  ((trains__reactors__currenttemp__first__bit ) >= (0 : int))
 
 axiom trains__reactors__currenttemp__last__bit_axiom :
  ((trains__reactors__currenttemp__last__bit ) > (trains__reactors__currenttemp__first__bit ))
 
 axiom trains__reactors__currenttemp__position_axiom :
  ((trains__reactors__currenttemp__position ) >= (0 : int))
 
 val constant trains__reactors__nocontrolrods__first__bit 
   : int

 
 val constant trains__reactors__nocontrolrods__last__bit 
   : int

 
 val constant trains__reactors__nocontrolrods__position 
   : int

 
 axiom trains__reactors__nocontrolrods__first__bit_axiom :
  ((trains__reactors__nocontrolrods__first__bit ) >= (0 : int))
 
 axiom trains__reactors__nocontrolrods__last__bit_axiom :
  ((trains__reactors__nocontrolrods__last__bit ) > (trains__reactors__nocontrolrods__first__bit ))
 
 axiom trains__reactors__nocontrolrods__position_axiom :
  ((trains__reactors__nocontrolrods__position ) >= (0 : int))
 
 val constant trains__reactors__amountofwater__first__bit 
   : int

 
 val constant trains__reactors__amountofwater__last__bit 
   : int

 
 val constant trains__reactors__amountofwater__position 
   : int

 
 axiom trains__reactors__amountofwater__first__bit_axiom :
  ((trains__reactors__amountofwater__first__bit ) >= (0 : int))
 
 axiom trains__reactors__amountofwater__last__bit_axiom :
  ((trains__reactors__amountofwater__last__bit ) > (trains__reactors__amountofwater__first__bit ))
 
 axiom trains__reactors__amountofwater__position_axiom :
  ((trains__reactors__amountofwater__position ) >= (0 : int))
 
 val constant trains__reactors__currentreactorstate__first__bit 
   : int

 
 val constant trains__reactors__currentreactorstate__last__bit 
   : int

 
 val constant trains__reactors__currentreactorstate__position 
   : int

 
 axiom trains__reactors__currentreactorstate__first__bit_axiom :
  ((trains__reactors__currentreactorstate__first__bit ) >= (0 : int))
 
 axiom trains__reactors__currentreactorstate__last__bit_axiom :
  ((trains__reactors__currentreactorstate__last__bit ) > (trains__reactors__currentreactorstate__first__bit ))
 
 axiom trains__reactors__currentreactorstate__position_axiom :
  ((trains__reactors__currentreactorstate__position ) >= (0 : int))
 
 val constant trains__reactors__amountofpower__first__bit 
   : int

 
 val constant trains__reactors__amountofpower__last__bit 
   : int

 
 val constant trains__reactors__amountofpower__position 
   : int

 
 axiom trains__reactors__amountofpower__first__bit_axiom :
  ((trains__reactors__amountofpower__first__bit ) >= (0 : int))
 
 axiom trains__reactors__amountofpower__last__bit_axiom :
  ((trains__reactors__amountofpower__last__bit ) > (trains__reactors__amountofpower__first__bit ))
 
 axiom trains__reactors__amountofpower__position_axiom :
  ((trains__reactors__amountofpower__position ) >= (0 : int))
 
 val function user_eq 
   (a : reactors) (b : reactors) : bool
 
 val constant dummy 
   : reactors

 
 type reactors__ref =
  { mutable reactors__content : reactors }
 
 function reactors__ref_reactors__content__projection 
   (a : reactors__ref) : reactors =
  a.reactors__content
 
 meta "model_projection" function reactors__ref_reactors__content__projection
 
 meta "inline:no" function reactors__ref_reactors__content__projection
 
 val reactors__havoc 
   (x : reactors__ref) : unit
  writes {x}

end

(* Module for axiomatizing the record theory associated to type "trains" defined at trains.ads:26, created in Why.Gen.Records.Create_Rep_Record_Theory_If_Needed *)
module Trains__trains__rep
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Trains__reactors as Trains__reactors
 use        Trains__carriages as Trains__carriages
 use        Trains__carriages__rep as Trains__carriages__rep
 use        Trains__velocity as Trains__velocity
 use        Trains__velocity__rep as Trains__velocity__rep

 type __split_fields =
  { rec__trains__trains__nocarriages [@model_trace:.3651] [@name:noCarriages] : Trains__carriages.carriages; rec__trains__trains__currentspeed [@model_trace:.3661] [@name:currentSpeed] : Trains__velocity.velocity; rec__trains__trains__trainreactors [@name:trainReactors] [@model_trace:.3671] : Trains__reactors.reactors }
 
 function __split_fields_rec__trains__trains__nocarriages__projection [@model_trace:.3651] [@name:noCarriages] 
   (a : __split_fields) : Trains__carriages.carriages =
  a.rec__trains__trains__nocarriages
 
 meta "model_projection" function __split_fields_rec__trains__trains__nocarriages__projection
 
 meta "inline:no" function __split_fields_rec__trains__trains__nocarriages__projection
 
 function __split_fields_rec__trains__trains__currentspeed__projection [@model_trace:.3661] [@name:currentSpeed] 
   (a : __split_fields) : Trains__velocity.velocity =
  a.rec__trains__trains__currentspeed
 
 meta "model_projection" function __split_fields_rec__trains__trains__currentspeed__projection
 
 meta "inline:no" function __split_fields_rec__trains__trains__currentspeed__projection
 
 function __split_fields_rec__trains__trains__trainreactors__projection [@name:trainReactors] [@model_trace:.3671] 
   (a : __split_fields) : Trains__reactors.reactors =
  a.rec__trains__trains__trainreactors
 
 meta "model_projection" function __split_fields_rec__trains__trains__trainreactors__projection
 
 meta "inline:no" function __split_fields_rec__trains__trains__trainreactors__projection
 
 type __split_fields__ref =
  { mutable __split_fields__content : __split_fields }
 
 function __split_fields__ref___split_fields__content__2__projection 
   (a : __split_fields__ref) : __split_fields =
  a.__split_fields__content
 
 meta "model_projection" function __split_fields__ref___split_fields__content__2__projection
 
 meta "inline:no" function __split_fields__ref___split_fields__content__2__projection
 
 val __split_fields__havoc 
   (x : __split_fields__ref) : unit
  writes {x}
 
 type __rep =
  { __split_fields : __split_fields }
 
 function __rep___split_fields__2__projection 
   (a : __rep) : __split_fields =
  a.__split_fields
 
 meta "model_projection" function __rep___split_fields__2__projection
 
 meta "inline:no" function __rep___split_fields__2__projection
 
 function to_base 
   (a : __rep) : __rep =
  a
 val to_base 
   (a : __rep) : __rep
  ensures { result = to_base (a : __rep) }
 
 function of_base 
   (a : __rep) : __rep =
  a
 val of_base 
   (a : __rep) : __rep
  ensures { result = of_base (a : __rep) }
 
 predicate trains__trains__nocarriages__pred 
   (a : __rep) =
  true
 val trains__trains__nocarriages__pred 
   (a : __rep) : bool
  ensures { result <-> trains__trains__nocarriages__pred (a : __rep) }
 
 val rec__trains__trains__nocarriages_ 
   (a : __rep) : Trains__carriages.carriages
  requires {  (trains__trains__nocarriages__pred a) }
  ensures {  (result = a.__split_fields.rec__trains__trains__nocarriages) }
 
 predicate trains__trains__currentspeed__pred 
   (a : __rep) =
  true
 val trains__trains__currentspeed__pred 
   (a : __rep) : bool
  ensures { result <-> trains__trains__currentspeed__pred (a : __rep) }
 
 val rec__trains__trains__currentspeed_ 
   (a : __rep) : Trains__velocity.velocity
  requires {  (trains__trains__currentspeed__pred a) }
  ensures {  (result = a.__split_fields.rec__trains__trains__currentspeed) }
 
 predicate trains__trains__trainreactors__pred 
   (a : __rep) =
  true
 val trains__trains__trainreactors__pred 
   (a : __rep) : bool
  ensures { result <-> trains__trains__trainreactors__pred (a : __rep) }
 
 val rec__trains__trains__trainreactors_ 
   (a : __rep) : Trains__reactors.reactors
  requires {  (trains__trains__trainreactors__pred a) }
  ensures {  (result = a.__split_fields.rec__trains__trains__trainreactors) }
 
 function bool_eq 
   (a : __rep) (b : __rep) : bool =
  (if (( ( ((Trains__carriages__rep.to_rep a.__split_fields.rec__trains__trains__nocarriages) = (Trains__carriages__rep.to_rep b.__split_fields.rec__trains__trains__nocarriages)) /\ ((Trains__velocity__rep.to_rep a.__split_fields.rec__trains__trains__currentspeed) = (Trains__velocity__rep.to_rep b.__split_fields.rec__trains__trains__currentspeed)) )/\(Trains__reactors.bool_eq a.__split_fields.rec__trains__trains__trainreactors b.__split_fields.rec__trains__trains__trainreactors) )) then (
   True) else (
   False))
 val bool_eq 
   (a : __rep) (b : __rep) : bool
  ensures { result = bool_eq (a : __rep) (b : __rep) }

end

(* Module for axiomatizing type "trains" defined at trains.ads:26, created in Gnat2Why.Types.Translate_Type *)
module Trains__trains
 use export Trains__trains__rep
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int

 type trains =
  __rep
 
 val constant value__size 
   : int

 
 val constant object__size 
   : int

 
 val constant alignment 
   : int

 
 axiom value__size_axiom :
  ((value__size ) >= (0 : int))
 
 axiom object__size_axiom :
  ((object__size ) >= (0 : int))
 
 axiom alignment_axiom :
  ((alignment ) >= (0 : int))
 
 val constant trains__trains__nocarriages__first__bit 
   : int

 
 val constant trains__trains__nocarriages__last__bit 
   : int

 
 val constant trains__trains__nocarriages__position 
   : int

 
 axiom trains__trains__nocarriages__first__bit_axiom :
  ((trains__trains__nocarriages__first__bit ) >= (0 : int))
 
 axiom trains__trains__nocarriages__last__bit_axiom :
  ((trains__trains__nocarriages__last__bit ) > (trains__trains__nocarriages__first__bit ))
 
 axiom trains__trains__nocarriages__position_axiom :
  ((trains__trains__nocarriages__position ) >= (0 : int))
 
 val constant trains__trains__currentspeed__first__bit 
   : int

 
 val constant trains__trains__currentspeed__last__bit 
   : int

 
 val constant trains__trains__currentspeed__position 
   : int

 
 axiom trains__trains__currentspeed__first__bit_axiom :
  ((trains__trains__currentspeed__first__bit ) >= (0 : int))
 
 axiom trains__trains__currentspeed__last__bit_axiom :
  ((trains__trains__currentspeed__last__bit ) > (trains__trains__currentspeed__first__bit ))
 
 axiom trains__trains__currentspeed__position_axiom :
  ((trains__trains__currentspeed__position ) >= (0 : int))
 
 val constant trains__trains__trainreactors__first__bit 
   : int

 
 val constant trains__trains__trainreactors__last__bit 
   : int

 
 val constant trains__trains__trainreactors__position 
   : int

 
 axiom trains__trains__trainreactors__first__bit_axiom :
  ((trains__trains__trainreactors__first__bit ) >= (0 : int))
 
 axiom trains__trains__trainreactors__last__bit_axiom :
  ((trains__trains__trainreactors__last__bit ) > (trains__trains__trainreactors__first__bit ))
 
 axiom trains__trains__trainreactors__position_axiom :
  ((trains__trains__trainreactors__position ) >= (0 : int))
 
 val function user_eq 
   (a : trains) (b : trains) : bool
 
 val constant dummy 
   : trains

 
 type trains__ref =
  { mutable trains__content : trains }
 
 function trains__ref_trains__content__projection 
   (a : trains__ref) : trains =
  a.trains__content
 
 meta "model_projection" function trains__ref_trains__content__projection
 
 meta "inline:no" function trains__ref_trains__content__projection
 
 val trains__havoc 
   (x : trains__ref) : unit
  writes {x}

end

(* Module for axiomatizing type "T1b" defined at trains.adb:12, created in Gnat2Why.Types.Translate_Type *)
module Trains__addcontrolrod__T1b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (25 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "item" defined at a-textio.ads:509, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put_line__2__item
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Standard__string as Standard__string

 val constant item [#"a-textio.ads" 509 0 0][@name:Item] [@model_trace:8223] [@model_projected] 
   : Standard__string.string

 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:509, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put_line__2__item___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for axiomatizing type "T2b" defined at trains.adb:20, created in Gnat2Why.Types.Translate_Type *)
module Trains__removingcontrolrod__T2b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (25 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T3b" defined at trains.adb:29, created in Gnat2Why.Types.Translate_Type *)
module Trains__addcarriage__T3b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (19 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T4b" defined at trains.adb:37, created in Gnat2Why.Types.Translate_Type *)
module Trains__removingcarriage__T4b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (19 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T5b" defined at trains.adb:45, created in Gnat2Why.Types.Translate_Type *)
module Trains__increasecoolant__T5b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (15 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T6b" defined at trains.adb:54, created in Gnat2Why.Types.Translate_Type *)
module Trains__decreasecoolant__T6b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (15 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T7b" defined at trains.adb:62, created in Gnat2Why.Types.Translate_Type *)
module Trains__increasetemp__T7b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (19 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T8b" defined at trains.adb:189, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T8b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (4 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for defining the constant "item" defined at a-textio.ads:465, created in Gnat2Why.Decls.Translate_Constant *)
module Ada__text_io__put__4__item
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Standard__string as Standard__string

 val constant item [#"a-textio.ads" 465 0 0][@name:Item] [@model_trace:7911] [@model_projected] 
   : Standard__string.string

 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "item" defined at a-textio.ads:465, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Ada__text_io__put__4__item___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for axiomatizing type "T9b" defined at trains.adb:190, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T9b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (81 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T10b" defined at trains.adb:191, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T10b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (90 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T11b" defined at trains.adb:192, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T11b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (86 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T12b" defined at trains.adb:193, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T12b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (15 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T13b" defined at trains.adb:193, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T13b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (64 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T14b" defined at trains.adb:194, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T14b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (21 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T15b" defined at trains.adb:194, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T15b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (59 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T16b" defined at trains.adb:195, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T16b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (85 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T17b" defined at trains.adb:196, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T17b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (85 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T18b" defined at trains.adb:197, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T18b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (15 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T19b" defined at trains.adb:197, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T19b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (70 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T20b" defined at trains.adb:198, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T20b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (13 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T21b" defined at trains.adb:198, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T21b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (68 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T22b" defined at trains.adb:199, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T22b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (33 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T23b" defined at trains.adb:199, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T23b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (49 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T24b" defined at trains.adb:200, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T24b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (30 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T25b" defined at trains.adb:200, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T25b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (57 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T26b" defined at trains.adb:201, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T26b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (14 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T27b" defined at trains.adb:201, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T27b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (67 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T28b" defined at trains.adb:202, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T28b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (32 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T29b" defined at trains.adb:202, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T29b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (4 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T30b" defined at trains.adb:203, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T30b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (55 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T31b" defined at trains.adb:205, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T31b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (48 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T32b" defined at trains.adb:209, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T32b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (46 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T33b" defined at trains.adb:213, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T33b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (41 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T34b" defined at trains.adb:220, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T34b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (78 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T35b" defined at trains.adb:225, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T35b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (41 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T36b" defined at trains.adb:229, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T36b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (35 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T37b" defined at trains.adb:235, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T37b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (28 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T38b" defined at trains.adb:237, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T38b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (28 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T39b" defined at trains.adb:241, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T39b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (82 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end

(* Module for axiomatizing type "T40b" defined at trains.adb:246, created in Gnat2Why.Types.Translate_Type *)
module Trains__displayall__T40b
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 type component_type =
  Standard__character.character
 
 val constant first 
   : int
  ensures { result =  (1 : int) }
 
 val constant last 
   : int
  ensures { result =  (26 : int) }
 
 clone export "ada__model".Constr_Array with axiom .,
 type map = Array__Int__Standard__character.map, 
 function array_bool_eq = Array__Int__Standard__character.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int

end
(* Module for defining a ref holding the value of variable "reactor" defined at trains.ads:33, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__reactor
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Trains__reactors as Trains__reactors

 val reactor__split_fields [#"trains.ads" 33 0 0][@model_trace:3683] [@model_projected] [@name:reactor]  : Trains__reactors.__split_fields__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "reactor" defined at trains.ads:33, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__reactor___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining a ref holding the value of variable "train" defined at trains.ads:41, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__train
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Trains__trains as Trains__trains

 val train__split_fields [#"trains.ads" 41 0 0][@model_projected] [@model_trace:3715] [@name:train]  : Trains__trains.__split_fields__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "train" defined at trains.ads:41, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__train___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining a ref holding the value of variable "reactorshutdown" defined at trains.ads:46, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__reactorshutdown
 use        "_gnatprove_standard".Main
 use        "int".Int

 val reactorshutdown [#"trains.ads" 46 0 0][@model_trace:3738] [@model_projected] [@name:reactorShutDown]  : bool__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "reactorshutdown" defined at trains.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__reactorshutdown___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining a ref holding the value of variable "reactorneedscontrol" defined at trains.ads:47, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__reactorneedscontrol
 use        "_gnatprove_standard".Main
 use        "int".Int

 val reactorneedscontrol [#"trains.ads" 47 0 0][@model_projected] [@name:reactorNeedsControl] [@model_trace:3748]  : bool__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "reactorneedscontrol" defined at trains.ads:47, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__reactorneedscontrol___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining a ref holding the value of variable "reactorneedscoolant" defined at trains.ads:48, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__reactorneedscoolant
 use        "_gnatprove_standard".Main
 use        "int".Int

 val reactorneedscoolant [#"trains.ads" 48 0 0][@name:reactorNeedsCoolant] [@model_projected] [@model_trace:3758]  : bool__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "reactorneedscoolant" defined at trains.ads:48, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__reactorneedscoolant___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining a ref holding the value of variable "reactoremer" defined at trains.ads:49, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__reactoremer
 use        "_gnatprove_standard".Main
 use        "int".Int

 val reactoremer [#"trains.ads" 49 0 0][@model_trace:3768] [@model_projected] [@name:reactorEmer]  : bool__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "reactoremer" defined at trains.ads:49, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__reactoremer___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining a ref holding the value of variable "reactormaintenance" defined at trains.ads:50, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__reactormaintenance
 use        "_gnatprove_standard".Main
 use        "int".Int

 val reactormaintenance [#"trains.ads" 50 0 0][@model_trace:3778] [@model_projected] [@name:reactorMaintenance]  : bool__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "reactormaintenance" defined at trains.ads:50, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__reactormaintenance___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining a ref holding the value of variable "reactornotoff" defined at trains.ads:51, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__reactornotoff
 use        "_gnatprove_standard".Main
 use        "int".Int

 val reactornotoff [#"trains.ads" 51 0 0][@model_projected] [@name:reactorNotOff] [@model_trace:3788]  : bool__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "reactornotoff" defined at trains.ads:51, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__reactornotoff___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining a ref holding the value of variable "trainstart1" defined at trains.ads:52, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__trainstart1
 use        "_gnatprove_standard".Main
 use        "int".Int

 val trainstart1 [#"trains.ads" 52 0 0][@name:trainStart1] [@model_projected] [@model_trace:3798]  : bool__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "trainstart1" defined at trains.ads:52, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__trainstart1___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining a ref holding the value of variable "trainstart2" defined at trains.ads:53, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__trainstart2
 use        "_gnatprove_standard".Main
 use        "int".Int

 val trainstart2 [#"trains.ads" 53 0 0][@name:trainStart2] [@model_projected] [@model_trace:3808]  : bool__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "trainstart2" defined at trains.ads:53, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__trainstart2___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining a ref holding the value of variable "trainneedsreactor" defined at trains.ads:54, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__trainneedsreactor
 use        "_gnatprove_standard".Main
 use        "int".Int

 val trainneedsreactor [#"trains.ads" 54 0 0][@model_trace:3818] [@model_projected] [@name:trainNeedsReactor]  : bool__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "trainneedsreactor" defined at trains.ads:54, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__trainneedsreactor___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining a ref holding the value of variable "power" defined at trains.adb:133, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__calculatepower__power
 use        "_gnatprove_standard".Main
 use        "int".Int

 val power [#"trains.adb" 133 0 0][@model_trace:2915] [@model_projected] [@name:power]  : int__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "power" defined at trains.adb:133, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__calculatepower__power___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining a ref holding the value of variable "speed" defined at trains.adb:142, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__calculatespeed__speed
 use        "_gnatprove_standard".Main
 use        "int".Int

 val speed [#"trains.adb" 142 0 0][@model_projected] [@model_trace:2960] [@name:speed]  : int__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "speed" defined at trains.adb:142, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__calculatespeed__speed___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining a ref holding the value of variable "temperature" defined at trains.adb:161, created in Gnat2Why.Decls.Translate_Variable *)
module Trains__calculatetemperature__temperature
 use        "_gnatprove_standard".Main
 use        "int".Int

 val temperature [#"trains.adb" 161 0 0][@name:temperature] [@model_projected] [@model_trace:3056]  : int__ref 
 
 val constant attr__ATTRIBUTE_ADDRESS 
   : int


end

(* Module giving an empty axiom for the entity "temperature" defined at trains.adb:161, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Trains__calculatetemperature__temperature___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module declaring the external object "ada__text_io__standard_in," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada__text_io__standard_in
 use        "_gnatprove_standard".Main
 use        "int".Int

 val standard_in  : Main.__private__ref 

end

(* Module declaring the external object "ada__text_io__standard_out," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada__text_io__standard_out
 use        "_gnatprove_standard".Main
 use        "int".Int

 val standard_out  : Main.__private__ref 

end

(* Module declaring the external object "ada__text_io__standard_err," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada__text_io__standard_err
 use        "_gnatprove_standard".Main
 use        "int".Int

 val standard_err  : Main.__private__ref 

end

(* Module declaring the external object "ada__text_io__current_in," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada__text_io__current_in
 use        "_gnatprove_standard".Main
 use        "int".Int

 val current_in  : Main.__private__ref 

end

(* Module declaring the external object "ada__text_io__current_out," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada__text_io__current_out
 use        "_gnatprove_standard".Main
 use        "int".Int

 val current_out  : Main.__private__ref 

end

(* Module declaring the external object "ada__text_io__current_err," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada__text_io__current_err
 use        "_gnatprove_standard".Main
 use        "int".Int

 val current_err  : Main.__private__ref 

end

(* Module declaring the external object "ada__text_io__file_system," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada__text_io__file_system
 use        "_gnatprove_standard".Main
 use        "int".Int

 val file_system  : Main.__private__ref 

end

(* Module declaring the external object "ada__real_time__clock_time," created in Gnat2Why.Decls.Translate_External_Object *)
module Ada__real_time__clock_time
 use        "_gnatprove_standard".Main
 use        "int".Int

 val clock_time  : Main.__private__ref 

end
(* Module giving axioms for type "short_short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_short_integer___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__short_short_integer as Standard__short_short_integer

 predicate dynamic_invariant [@inline] 
   (temp___expr_4 : int) (temp___is_init_0 : bool) (temp___skip_constant_1 : bool) (temp___do_toplevel_2 : bool) (temp___do_typ_inv_3 : bool) =
  (if (( temp___is_init_0 \/ (Standard__short_short_integer.first <= Standard__short_short_integer.last) )) then (
   (Standard__short_short_integer.dynamic_property Standard__short_short_integer.first Standard__short_short_integer.last temp___expr_4)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_4 : int) (temp___is_init_0 : bool) (temp___skip_constant_1 : bool) (temp___do_toplevel_2 : bool) (temp___do_typ_inv_3 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_4 : int) (temp___is_init_0 : bool) (temp___skip_constant_1 : bool) (temp___do_toplevel_2 : bool) (temp___do_typ_inv_3 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_5 : int) (temp___skip_top_level_6 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_5 : int) (temp___skip_top_level_6 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_5 : int) (temp___skip_top_level_6 : bool) }

end

(* Module giving axioms for type "short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_integer___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__short_integer as Standard__short_integer

 predicate dynamic_invariant [@inline] 
   (temp___expr_11 : int) (temp___is_init_7 : bool) (temp___skip_constant_8 : bool) (temp___do_toplevel_9 : bool) (temp___do_typ_inv_10 : bool) =
  (if (( temp___is_init_7 \/ (Standard__short_integer.first <= Standard__short_integer.last) )) then (
   (Standard__short_integer.dynamic_property Standard__short_integer.first Standard__short_integer.last temp___expr_11)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_11 : int) (temp___is_init_7 : bool) (temp___skip_constant_8 : bool) (temp___do_toplevel_9 : bool) (temp___do_typ_inv_10 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_11 : int) (temp___is_init_7 : bool) (temp___skip_constant_8 : bool) (temp___do_toplevel_9 : bool) (temp___do_typ_inv_10 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_12 : int) (temp___skip_top_level_13 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_12 : int) (temp___skip_top_level_13 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_12 : int) (temp___skip_top_level_13 : bool) }

end

(* Module giving axioms for type "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer as Standard__integer

 predicate dynamic_invariant [@inline] 
   (temp___expr_18 : int) (temp___is_init_14 : bool) (temp___skip_constant_15 : bool) (temp___do_toplevel_16 : bool) (temp___do_typ_inv_17 : bool) =
  (if (( temp___is_init_14 \/ (Standard__integer.first <= Standard__integer.last) )) then (
   (Standard__integer.dynamic_property Standard__integer.first Standard__integer.last temp___expr_18)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_18 : int) (temp___is_init_14 : bool) (temp___skip_constant_15 : bool) (temp___do_toplevel_16 : bool) (temp___do_typ_inv_17 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_18 : int) (temp___is_init_14 : bool) (temp___skip_constant_15 : bool) (temp___do_toplevel_16 : bool) (temp___do_typ_inv_17 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_19 : int) (temp___skip_top_level_20 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_19 : int) (temp___skip_top_level_20 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_19 : int) (temp___skip_top_level_20 : bool) }

end

(* Module giving axioms for type "long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_integer___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__long_integer as Standard__long_integer

 predicate dynamic_invariant [@inline] 
   (temp___expr_25 : int) (temp___is_init_21 : bool) (temp___skip_constant_22 : bool) (temp___do_toplevel_23 : bool) (temp___do_typ_inv_24 : bool) =
  (if (( temp___is_init_21 \/ (Standard__long_integer.first <= Standard__long_integer.last) )) then (
   (Standard__long_integer.dynamic_property Standard__long_integer.first Standard__long_integer.last temp___expr_25)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_25 : int) (temp___is_init_21 : bool) (temp___skip_constant_22 : bool) (temp___do_toplevel_23 : bool) (temp___do_typ_inv_24 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_25 : int) (temp___is_init_21 : bool) (temp___skip_constant_22 : bool) (temp___do_toplevel_23 : bool) (temp___do_typ_inv_24 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_26 : int) (temp___skip_top_level_27 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_26 : int) (temp___skip_top_level_27 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_26 : int) (temp___skip_top_level_27 : bool) }

end

(* Module giving axioms for type "long_long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_integer___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__long_long_integer as Standard__long_long_integer

 predicate dynamic_invariant [@inline] 
   (temp___expr_32 : int) (temp___is_init_28 : bool) (temp___skip_constant_29 : bool) (temp___do_toplevel_30 : bool) (temp___do_typ_inv_31 : bool) =
  (if (( temp___is_init_28 \/ (Standard__long_long_integer.first <= Standard__long_long_integer.last) )) then (
   (Standard__long_long_integer.dynamic_property Standard__long_long_integer.first Standard__long_long_integer.last temp___expr_32)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_32 : int) (temp___is_init_28 : bool) (temp___skip_constant_29 : bool) (temp___do_toplevel_30 : bool) (temp___do_typ_inv_31 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_32 : int) (temp___is_init_28 : bool) (temp___skip_constant_29 : bool) (temp___do_toplevel_30 : bool) (temp___do_typ_inv_31 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_33 : int) (temp___skip_top_level_34 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_33 : int) (temp___skip_top_level_34 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_33 : int) (temp___skip_top_level_34 : bool) }

end

(* Module giving axioms for type "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__natural as Standard__natural

 predicate dynamic_invariant [@inline] 
   (temp___expr_39 : int) (temp___is_init_35 : bool) (temp___skip_constant_36 : bool) (temp___do_toplevel_37 : bool) (temp___do_typ_inv_38 : bool) =
  (if (( temp___is_init_35 \/ (Standard__natural.first <= Standard__natural.last) )) then (
   (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last temp___expr_39)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_39 : int) (temp___is_init_35 : bool) (temp___skip_constant_36 : bool) (temp___do_toplevel_37 : bool) (temp___do_typ_inv_38 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_39 : int) (temp___is_init_35 : bool) (temp___skip_constant_36 : bool) (temp___do_toplevel_37 : bool) (temp___do_typ_inv_38 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_40 : int) (temp___skip_top_level_41 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_40 : int) (temp___skip_top_level_41 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_40 : int) (temp___skip_top_level_41 : bool) }

end

(* Module giving axioms for type "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__positive as Standard__positive

 predicate dynamic_invariant [@inline] 
   (temp___expr_46 : int) (temp___is_init_42 : bool) (temp___skip_constant_43 : bool) (temp___do_toplevel_44 : bool) (temp___do_typ_inv_45 : bool) =
  (if (( temp___is_init_42 \/ (Standard__positive.first <= Standard__positive.last) )) then (
   (Standard__positive.dynamic_property Standard__positive.first Standard__positive.last temp___expr_46)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_46 : int) (temp___is_init_42 : bool) (temp___skip_constant_43 : bool) (temp___do_toplevel_44 : bool) (temp___do_typ_inv_45 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_46 : int) (temp___is_init_42 : bool) (temp___skip_constant_43 : bool) (temp___do_toplevel_44 : bool) (temp___do_typ_inv_45 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_47 : int) (temp___skip_top_level_48 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_47 : int) (temp___skip_top_level_48 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_47 : int) (temp___skip_top_level_48 : bool) }

end

(* Module giving axioms for type "short_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_float___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Float32 as Float32
 use        Standard__short_float as Standard__short_float

 predicate dynamic_invariant [@inline] 
   (temp___expr_53 : Float32.t) (temp___is_init_49 : bool) (temp___skip_constant_50 : bool) (temp___do_toplevel_51 : bool) (temp___do_typ_inv_52 : bool) =
  (if (( temp___is_init_49 \/ (Float32.le Standard__short_float.first Standard__short_float.last) )) then (
   (Standard__short_float.dynamic_property Standard__short_float.first Standard__short_float.last temp___expr_53)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_53 : Float32.t) (temp___is_init_49 : bool) (temp___skip_constant_50 : bool) (temp___do_toplevel_51 : bool) (temp___do_typ_inv_52 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_53 : Float32.t) (temp___is_init_49 : bool) (temp___skip_constant_50 : bool) (temp___do_toplevel_51 : bool) (temp___do_typ_inv_52 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_54 : Float32.t) (temp___skip_top_level_55 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_54 : Float32.t) (temp___skip_top_level_55 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_54 : Float32.t) (temp___skip_top_level_55 : bool) }

end

(* Module giving axioms for type "float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__float___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Float32 as Float32
 use        Standard__float as Standard__float

 predicate dynamic_invariant [@inline] 
   (temp___expr_60 : Float32.t) (temp___is_init_56 : bool) (temp___skip_constant_57 : bool) (temp___do_toplevel_58 : bool) (temp___do_typ_inv_59 : bool) =
  (if (( temp___is_init_56 \/ (Float32.le Standard__float.first Standard__float.last) )) then (
   (Standard__float.dynamic_property Standard__float.first Standard__float.last temp___expr_60)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_60 : Float32.t) (temp___is_init_56 : bool) (temp___skip_constant_57 : bool) (temp___do_toplevel_58 : bool) (temp___do_typ_inv_59 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_60 : Float32.t) (temp___is_init_56 : bool) (temp___skip_constant_57 : bool) (temp___do_toplevel_58 : bool) (temp___do_typ_inv_59 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_61 : Float32.t) (temp___skip_top_level_62 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_61 : Float32.t) (temp___skip_top_level_62 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_61 : Float32.t) (temp___skip_top_level_62 : bool) }

end

(* Module giving axioms for type "long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_float___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Float64 as Float64
 use        Standard__long_float as Standard__long_float

 predicate dynamic_invariant [@inline] 
   (temp___expr_67 : Float64.t) (temp___is_init_63 : bool) (temp___skip_constant_64 : bool) (temp___do_toplevel_65 : bool) (temp___do_typ_inv_66 : bool) =
  (if (( temp___is_init_63 \/ (Float64.le Standard__long_float.first Standard__long_float.last) )) then (
   (Standard__long_float.dynamic_property Standard__long_float.first Standard__long_float.last temp___expr_67)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_67 : Float64.t) (temp___is_init_63 : bool) (temp___skip_constant_64 : bool) (temp___do_toplevel_65 : bool) (temp___do_typ_inv_66 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_67 : Float64.t) (temp___is_init_63 : bool) (temp___skip_constant_64 : bool) (temp___do_toplevel_65 : bool) (temp___do_typ_inv_66 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_68 : Float64.t) (temp___skip_top_level_69 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_68 : Float64.t) (temp___skip_top_level_69 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_68 : Float64.t) (temp___skip_top_level_69 : bool) }

end

(* Module giving axioms for type "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character

 predicate dynamic_invariant [@inline] 
   (temp___expr_74 : int) (temp___is_init_70 : bool) (temp___skip_constant_71 : bool) (temp___do_toplevel_72 : bool) (temp___do_typ_inv_73 : bool) =
  (if (( temp___is_init_70 \/ (Standard__character.first <= Standard__character.last) )) then (
   (Standard__character.dynamic_property Standard__character.first Standard__character.last temp___expr_74)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_74 : int) (temp___is_init_70 : bool) (temp___skip_constant_71 : bool) (temp___do_toplevel_72 : bool) (temp___do_typ_inv_73 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_74 : int) (temp___is_init_70 : bool) (temp___skip_constant_71 : bool) (temp___do_toplevel_72 : bool) (temp___do_typ_inv_73 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_75 : int) (temp___skip_top_level_76 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_75 : int) (temp___skip_top_level_76 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_75 : int) (temp___skip_top_level_76 : bool) }

end

(* Module giving axioms for type "wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_character___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__wide_character as Standard__wide_character

 predicate dynamic_invariant [@inline] 
   (temp___expr_81 : int) (temp___is_init_77 : bool) (temp___skip_constant_78 : bool) (temp___do_toplevel_79 : bool) (temp___do_typ_inv_80 : bool) =
  (if (( temp___is_init_77 \/ (Standard__wide_character.first <= Standard__wide_character.last) )) then (
   (Standard__wide_character.dynamic_property Standard__wide_character.first Standard__wide_character.last temp___expr_81)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_81 : int) (temp___is_init_77 : bool) (temp___skip_constant_78 : bool) (temp___do_toplevel_79 : bool) (temp___do_typ_inv_80 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_81 : int) (temp___is_init_77 : bool) (temp___skip_constant_78 : bool) (temp___do_toplevel_79 : bool) (temp___do_typ_inv_80 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_82 : int) (temp___skip_top_level_83 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_82 : int) (temp___skip_top_level_83 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_82 : int) (temp___skip_top_level_83 : bool) }

end

(* Module giving axioms for type "wide_wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_character___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__wide_wide_character as Standard__wide_wide_character

 predicate dynamic_invariant [@inline] 
   (temp___expr_88 : int) (temp___is_init_84 : bool) (temp___skip_constant_85 : bool) (temp___do_toplevel_86 : bool) (temp___do_typ_inv_87 : bool) =
  (if (( temp___is_init_84 \/ (Standard__wide_wide_character.first <= Standard__wide_wide_character.last) )) then (
   (Standard__wide_wide_character.dynamic_property Standard__wide_wide_character.first Standard__wide_wide_character.last temp___expr_88)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_88 : int) (temp___is_init_84 : bool) (temp___skip_constant_85 : bool) (temp___do_toplevel_86 : bool) (temp___do_typ_inv_87 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_88 : int) (temp___is_init_84 : bool) (temp___skip_constant_85 : bool) (temp___do_toplevel_86 : bool) (temp___do_typ_inv_87 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_89 : int) (temp___skip_top_level_90 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_89 : int) (temp___skip_top_level_90 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_89 : int) (temp___skip_top_level_90 : bool) }

end

(* Module giving axioms for type "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Standard__positive as Standard__positive
 use        Standard__string as Standard__string

 predicate dynamic_invariant [@inline] 
   (temp___expr_96 : Standard__string.string) (temp___is_init_92 : bool) (temp___skip_constant_93 : bool) (temp___do_toplevel_94 : bool) (temp___do_typ_inv_95 : bool) =
  (if (temp___skip_constant_93) then (
   true) else (
   (Standard__string.dynamic_property Standard__positive.first Standard__positive.last (Standard__string.first temp___expr_96) (Standard__string.last temp___expr_96))))
 val dynamic_invariant [@inline] 
   (temp___expr_96 : Standard__string.string) (temp___is_init_92 : bool) (temp___skip_constant_93 : bool) (temp___do_toplevel_94 : bool) (temp___do_typ_inv_95 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_96 : Standard__string.string) (temp___is_init_92 : bool) (temp___skip_constant_93 : bool) (temp___do_toplevel_94 : bool) (temp___do_typ_inv_95 : bool) }

end

(* Module giving axioms for type "wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_string___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Standard__positive as Standard__positive
 use        Standard__wide_string as Standard__wide_string

 predicate dynamic_invariant [@inline] 
   (temp___expr_103 : Standard__wide_string.wide_string) (temp___is_init_99 : bool) (temp___skip_constant_100 : bool) (temp___do_toplevel_101 : bool) (temp___do_typ_inv_102 : bool) =
  (if (temp___skip_constant_100) then (
   true) else (
   (Standard__wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_string.first temp___expr_103) (Standard__wide_string.last temp___expr_103))))
 val dynamic_invariant [@inline] 
   (temp___expr_103 : Standard__wide_string.wide_string) (temp___is_init_99 : bool) (temp___skip_constant_100 : bool) (temp___do_toplevel_101 : bool) (temp___do_typ_inv_102 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_103 : Standard__wide_string.wide_string) (temp___is_init_99 : bool) (temp___skip_constant_100 : bool) (temp___do_toplevel_101 : bool) (temp___do_typ_inv_102 : bool) }

end

(* Module giving axioms for type "wide_wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_string___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Standard__positive as Standard__positive
 use        Standard__wide_wide_string as Standard__wide_wide_string

 predicate dynamic_invariant [@inline] 
   (temp___expr_110 : Standard__wide_wide_string.wide_wide_string) (temp___is_init_106 : bool) (temp___skip_constant_107 : bool) (temp___do_toplevel_108 : bool) (temp___do_typ_inv_109 : bool) =
  (if (temp___skip_constant_107) then (
   true) else (
   (Standard__wide_wide_string.dynamic_property Standard__positive.first Standard__positive.last (Standard__wide_wide_string.first temp___expr_110) (Standard__wide_wide_string.last temp___expr_110))))
 val dynamic_invariant [@inline] 
   (temp___expr_110 : Standard__wide_wide_string.wide_wide_string) (temp___is_init_106 : bool) (temp___skip_constant_107 : bool) (temp___do_toplevel_108 : bool) (temp___do_typ_inv_109 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_110 : Standard__wide_wide_string.wide_wide_string) (temp___is_init_106 : bool) (temp___skip_constant_107 : bool) (temp___do_toplevel_108 : bool) (temp___do_typ_inv_109 : bool) }

end

(* Module giving axioms for type "duration", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__duration___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        Standard__duration as Standard__duration

 predicate dynamic_invariant [@inline] 
   (temp___expr_116 : Main.__fixed) (temp___is_init_112 : bool) (temp___skip_constant_113 : bool) (temp___do_toplevel_114 : bool) (temp___do_typ_inv_115 : bool) =
  (if (( temp___is_init_112 \/ (Standard__duration.first <= Standard__duration.last) )) then (
   (Standard__duration.dynamic_property Standard__duration.first Standard__duration.last temp___expr_116)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_116 : Main.__fixed) (temp___is_init_112 : bool) (temp___skip_constant_113 : bool) (temp___do_toplevel_114 : bool) (temp___do_typ_inv_115 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_116 : Main.__fixed) (temp___is_init_112 : bool) (temp___skip_constant_113 : bool) (temp___do_toplevel_114 : bool) (temp___do_typ_inv_115 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_117 : Main.__fixed) (temp___skip_top_level_118 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_117 : Main.__fixed) (temp___skip_top_level_118 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_117 : Main.__fixed) (temp___skip_top_level_118 : bool) }

end

(* Module giving axioms for type "integer_8", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_8___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer_8 as Standard__integer_8

 predicate dynamic_invariant [@inline] 
   (temp___expr_123 : int) (temp___is_init_119 : bool) (temp___skip_constant_120 : bool) (temp___do_toplevel_121 : bool) (temp___do_typ_inv_122 : bool) =
  (if (( temp___is_init_119 \/ (Standard__integer_8.first <= Standard__integer_8.last) )) then (
   (Standard__integer_8.dynamic_property Standard__integer_8.first Standard__integer_8.last temp___expr_123)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_123 : int) (temp___is_init_119 : bool) (temp___skip_constant_120 : bool) (temp___do_toplevel_121 : bool) (temp___do_typ_inv_122 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_123 : int) (temp___is_init_119 : bool) (temp___skip_constant_120 : bool) (temp___do_toplevel_121 : bool) (temp___do_typ_inv_122 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_124 : int) (temp___skip_top_level_125 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_124 : int) (temp___skip_top_level_125 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_124 : int) (temp___skip_top_level_125 : bool) }

end

(* Module giving axioms for type "integer_16", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_16___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer_16 as Standard__integer_16

 predicate dynamic_invariant [@inline] 
   (temp___expr_130 : int) (temp___is_init_126 : bool) (temp___skip_constant_127 : bool) (temp___do_toplevel_128 : bool) (temp___do_typ_inv_129 : bool) =
  (if (( temp___is_init_126 \/ (Standard__integer_16.first <= Standard__integer_16.last) )) then (
   (Standard__integer_16.dynamic_property Standard__integer_16.first Standard__integer_16.last temp___expr_130)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_130 : int) (temp___is_init_126 : bool) (temp___skip_constant_127 : bool) (temp___do_toplevel_128 : bool) (temp___do_typ_inv_129 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_130 : int) (temp___is_init_126 : bool) (temp___skip_constant_127 : bool) (temp___do_toplevel_128 : bool) (temp___do_typ_inv_129 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_131 : int) (temp___skip_top_level_132 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_131 : int) (temp___skip_top_level_132 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_131 : int) (temp___skip_top_level_132 : bool) }

end

(* Module giving axioms for type "integer_32", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_32___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer_32 as Standard__integer_32

 predicate dynamic_invariant [@inline] 
   (temp___expr_137 : int) (temp___is_init_133 : bool) (temp___skip_constant_134 : bool) (temp___do_toplevel_135 : bool) (temp___do_typ_inv_136 : bool) =
  (if (( temp___is_init_133 \/ (Standard__integer_32.first <= Standard__integer_32.last) )) then (
   (Standard__integer_32.dynamic_property Standard__integer_32.first Standard__integer_32.last temp___expr_137)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_137 : int) (temp___is_init_133 : bool) (temp___skip_constant_134 : bool) (temp___do_toplevel_135 : bool) (temp___do_typ_inv_136 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_137 : int) (temp___is_init_133 : bool) (temp___skip_constant_134 : bool) (temp___do_toplevel_135 : bool) (temp___do_typ_inv_136 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_138 : int) (temp___skip_top_level_139 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_138 : int) (temp___skip_top_level_139 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_138 : int) (temp___skip_top_level_139 : bool) }

end

(* Module giving axioms for type "integer_64", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_64___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__integer_64 as Standard__integer_64

 predicate dynamic_invariant [@inline] 
   (temp___expr_144 : int) (temp___is_init_140 : bool) (temp___skip_constant_141 : bool) (temp___do_toplevel_142 : bool) (temp___do_typ_inv_143 : bool) =
  (if (( temp___is_init_140 \/ (Standard__integer_64.first <= Standard__integer_64.last) )) then (
   (Standard__integer_64.dynamic_property Standard__integer_64.first Standard__integer_64.last temp___expr_144)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_144 : int) (temp___is_init_140 : bool) (temp___skip_constant_141 : bool) (temp___do_toplevel_142 : bool) (temp___do_typ_inv_143 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_144 : int) (temp___is_init_140 : bool) (temp___skip_constant_141 : bool) (temp___do_toplevel_142 : bool) (temp___do_typ_inv_143 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_145 : int) (temp___skip_top_level_146 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_145 : int) (temp___skip_top_level_146 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_145 : int) (temp___skip_top_level_146 : bool) }

end

(* Module giving axioms for type "universal_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_integer___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__universal_integer as Standard__universal_integer

 predicate dynamic_invariant [@inline] 
   (temp___expr_151 : int) (temp___is_init_147 : bool) (temp___skip_constant_148 : bool) (temp___do_toplevel_149 : bool) (temp___do_typ_inv_150 : bool) =
  (if (( temp___is_init_147 \/ (Standard__universal_integer.first <= Standard__universal_integer.last) )) then (
   (Standard__universal_integer.dynamic_property Standard__universal_integer.first Standard__universal_integer.last temp___expr_151)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_151 : int) (temp___is_init_147 : bool) (temp___skip_constant_148 : bool) (temp___do_toplevel_149 : bool) (temp___do_typ_inv_150 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_151 : int) (temp___is_init_147 : bool) (temp___skip_constant_148 : bool) (temp___do_toplevel_149 : bool) (temp___do_typ_inv_150 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_152 : int) (temp___skip_top_level_153 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_152 : int) (temp___skip_top_level_153 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_152 : int) (temp___skip_top_level_153 : bool) }

end

(* Module for possibly declaring a logic function for "line_length__2" defined at a-textio.ads:245, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__line_length__2
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Main as Main

 val function line_length__2 
   (ada__text_io__standard_in : Main.__private) (ada__text_io__standard_out : Main.__private) (ada__text_io__standard_err : Main.__private) (ada__text_io__current_in : Main.__private) (ada__text_io__current_out : Main.__private) (ada__text_io__current_err : Main.__private) (ada__text_io__file_system : Main.__private) : int
 
 val predicate line_length__2__function_guard 
   (temp___result_154 : int) (ada__text_io__standard_in : Main.__private) (ada__text_io__standard_out : Main.__private) (ada__text_io__standard_err : Main.__private) (ada__text_io__current_in : Main.__private) (ada__text_io__current_out : Main.__private) (ada__text_io__current_err : Main.__private) (ada__text_io__file_system : Main.__private)

end

(* Module for possibly declaring a logic function for "page_length__2" defined at a-textio.ads:251, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__page_length__2
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Main as Main

 val function page_length__2 
   (ada__text_io__standard_in : Main.__private) (ada__text_io__standard_out : Main.__private) (ada__text_io__standard_err : Main.__private) (ada__text_io__current_in : Main.__private) (ada__text_io__current_out : Main.__private) (ada__text_io__current_err : Main.__private) (ada__text_io__file_system : Main.__private) : int
 
 val predicate page_length__2__function_guard 
   (temp___result_155 : int) (ada__text_io__standard_in : Main.__private) (ada__text_io__standard_out : Main.__private) (ada__text_io__standard_err : Main.__private) (ada__text_io__current_in : Main.__private) (ada__text_io__current_out : Main.__private) (ada__text_io__current_err : Main.__private) (ada__text_io__file_system : Main.__private)

end

(* Module for possibly declaring a logic function for "addcontrolrod" defined at trains.ads:56, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__addcontrolrod
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "removingcontrolrod" defined at trains.ads:61, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__removingcontrolrod
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "addcarriage" defined at trains.ads:66, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__addcarriage
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "removingcarriage" defined at trains.ads:71, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__removingcarriage
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "increasecoolant" defined at trains.ads:76, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__increasecoolant
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "decreasecoolant" defined at trains.ads:81, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__decreasecoolant
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "increasetemp" defined at trains.ads:86, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__increasetemp
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "warninglight" defined at trains.ads:92, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__warninglight
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "emergencystop" defined at trains.ads:98, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__emergencystop
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "manualshutdown" defined at trains.ads:105, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__manualshutdown
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "startupthereactor" defined at trains.ads:112, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__startupthereactor
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "trainstart" defined at trains.ads:118, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__trainstart
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "calculatepower" defined at trains.ads:123, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__calculatepower
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "calculatespeed" defined at trains.ads:130, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__calculatespeed
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "calculatetemperature" defined at trains.ads:137, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__calculatetemperature
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "displayall" defined at trains.ads:143, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__displayall
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "restart" defined at trains.ads:148, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__restart
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "maintenance" defined at trains.ads:152, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Trains__maintenance
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "put_line__2" defined at a-textio.ads:508, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put_line__2
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for possibly declaring a logic function for "put__4" defined at a-textio.ads:465, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Ada__text_io__put__4
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "TcountB" defined at a-textio.ads:77, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__TcountB___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "count" defined at a-textio.ads:77, created in Gnat2Why.Types.Generate_Type_Completion *)
module Ada__text_io__count___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Ada__text_io__count as Ada__text_io__count

 predicate dynamic_invariant [@inline] 
   (temp___expr_160 : int) (temp___is_init_156 : bool) (temp___skip_constant_157 : bool) (temp___do_toplevel_158 : bool) (temp___do_typ_inv_159 : bool) =
  (if (( temp___is_init_156 \/ (Ada__text_io__count.first <= Ada__text_io__count.last) )) then (
   (Ada__text_io__count.dynamic_property Ada__text_io__count.first Ada__text_io__count.last temp___expr_160)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_160 : int) (temp___is_init_156 : bool) (temp___skip_constant_157 : bool) (temp___do_toplevel_158 : bool) (temp___do_typ_inv_159 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_160 : int) (temp___is_init_156 : bool) (temp___skip_constant_157 : bool) (temp___do_toplevel_158 : bool) (temp___do_typ_inv_159 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_161 : int) (temp___skip_top_level_162 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_161 : int) (temp___skip_top_level_162 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_161 : int) (temp___skip_top_level_162 : bool) }

end

(* Module giving axioms for type "TtempB" defined at trains.ads:7, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TtempB___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "temp" defined at trains.ads:7, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__temp___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__temp as Trains__temp

 predicate dynamic_invariant [@inline] 
   (temp___expr_167 : int) (temp___is_init_163 : bool) (temp___skip_constant_164 : bool) (temp___do_toplevel_165 : bool) (temp___do_typ_inv_166 : bool) =
  (if (( temp___is_init_163 \/ (Trains__temp.first <= Trains__temp.last) )) then (
   (Trains__temp.dynamic_property Trains__temp.first Trains__temp.last temp___expr_167)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_167 : int) (temp___is_init_163 : bool) (temp___skip_constant_164 : bool) (temp___do_toplevel_165 : bool) (temp___do_typ_inv_166 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_167 : int) (temp___is_init_163 : bool) (temp___skip_constant_164 : bool) (temp___do_toplevel_165 : bool) (temp___do_typ_inv_166 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_168 : int) (temp___skip_top_level_169 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_168 : int) (temp___skip_top_level_169 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_168 : int) (temp___skip_top_level_169 : bool) }

end

(* Module giving axioms for type "TcontrolrodsB" defined at trains.ads:8, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TcontrolrodsB___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "controlrods" defined at trains.ads:8, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__controlrods___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__controlrods as Trains__controlrods

 predicate dynamic_invariant [@inline] 
   (temp___expr_174 : int) (temp___is_init_170 : bool) (temp___skip_constant_171 : bool) (temp___do_toplevel_172 : bool) (temp___do_typ_inv_173 : bool) =
  (if (( temp___is_init_170 \/ (Trains__controlrods.first <= Trains__controlrods.last) )) then (
   (Trains__controlrods.dynamic_property Trains__controlrods.first Trains__controlrods.last temp___expr_174)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_174 : int) (temp___is_init_170 : bool) (temp___skip_constant_171 : bool) (temp___do_toplevel_172 : bool) (temp___do_typ_inv_173 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_174 : int) (temp___is_init_170 : bool) (temp___skip_constant_171 : bool) (temp___do_toplevel_172 : bool) (temp___do_typ_inv_173 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_175 : int) (temp___skip_top_level_176 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_175 : int) (temp___skip_top_level_176 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_175 : int) (temp___skip_top_level_176 : bool) }

end

(* Module giving axioms for type "TwatersupplyB" defined at trains.ads:9, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TwatersupplyB___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "watersupply" defined at trains.ads:9, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__watersupply___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__watersupply as Trains__watersupply

 predicate dynamic_invariant [@inline] 
   (temp___expr_181 : int) (temp___is_init_177 : bool) (temp___skip_constant_178 : bool) (temp___do_toplevel_179 : bool) (temp___do_typ_inv_180 : bool) =
  (if (( temp___is_init_177 \/ (Trains__watersupply.first <= Trains__watersupply.last) )) then (
   (Trains__watersupply.dynamic_property Trains__watersupply.first Trains__watersupply.last temp___expr_181)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_181 : int) (temp___is_init_177 : bool) (temp___skip_constant_178 : bool) (temp___do_toplevel_179 : bool) (temp___do_typ_inv_180 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_181 : int) (temp___is_init_177 : bool) (temp___skip_constant_178 : bool) (temp___do_toplevel_179 : bool) (temp___do_typ_inv_180 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_182 : int) (temp___skip_top_level_183 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_182 : int) (temp___skip_top_level_183 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_182 : int) (temp___skip_top_level_183 : bool) }

end

(* Module giving axioms for type "TpowersupplyB" defined at trains.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TpowersupplyB___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "powersupply" defined at trains.ads:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__powersupply___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__powersupply as Trains__powersupply

 predicate dynamic_invariant [@inline] 
   (temp___expr_188 : int) (temp___is_init_184 : bool) (temp___skip_constant_185 : bool) (temp___do_toplevel_186 : bool) (temp___do_typ_inv_187 : bool) =
  (if (( temp___is_init_184 \/ (Trains__powersupply.first <= Trains__powersupply.last) )) then (
   (Trains__powersupply.dynamic_property Trains__powersupply.first Trains__powersupply.last temp___expr_188)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_188 : int) (temp___is_init_184 : bool) (temp___skip_constant_185 : bool) (temp___do_toplevel_186 : bool) (temp___do_typ_inv_187 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_188 : int) (temp___is_init_184 : bool) (temp___skip_constant_185 : bool) (temp___do_toplevel_186 : bool) (temp___do_typ_inv_187 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_189 : int) (temp___skip_top_level_190 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_189 : int) (temp___skip_top_level_190 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_189 : int) (temp___skip_top_level_190 : bool) }

end

(* Module giving axioms for type "TcarriagesB" defined at trains.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TcarriagesB___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "carriages" defined at trains.ads:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__carriages___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__carriages as Trains__carriages

 predicate dynamic_invariant [@inline] 
   (temp___expr_195 : int) (temp___is_init_191 : bool) (temp___skip_constant_192 : bool) (temp___do_toplevel_193 : bool) (temp___do_typ_inv_194 : bool) =
  (if (( temp___is_init_191 \/ (Trains__carriages.first <= Trains__carriages.last) )) then (
   (Trains__carriages.dynamic_property Trains__carriages.first Trains__carriages.last temp___expr_195)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_195 : int) (temp___is_init_191 : bool) (temp___skip_constant_192 : bool) (temp___do_toplevel_193 : bool) (temp___do_typ_inv_194 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_195 : int) (temp___is_init_191 : bool) (temp___skip_constant_192 : bool) (temp___do_toplevel_193 : bool) (temp___do_typ_inv_194 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_196 : int) (temp___skip_top_level_197 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_196 : int) (temp___skip_top_level_197 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_196 : int) (temp___skip_top_level_197 : bool) }

end

(* Module giving axioms for type "TvelocityB" defined at trains.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__TvelocityB___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "velocity" defined at trains.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__velocity___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__velocity as Trains__velocity

 predicate dynamic_invariant [@inline] 
   (temp___expr_202 : int) (temp___is_init_198 : bool) (temp___skip_constant_199 : bool) (temp___do_toplevel_200 : bool) (temp___do_typ_inv_201 : bool) =
  (if (( temp___is_init_198 \/ (Trains__velocity.first <= Trains__velocity.last) )) then (
   (Trains__velocity.dynamic_property Trains__velocity.first Trains__velocity.last temp___expr_202)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_202 : int) (temp___is_init_198 : bool) (temp___skip_constant_199 : bool) (temp___do_toplevel_200 : bool) (temp___do_typ_inv_201 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_202 : int) (temp___is_init_198 : bool) (temp___skip_constant_199 : bool) (temp___do_toplevel_200 : bool) (temp___do_typ_inv_201 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_203 : int) (temp___skip_top_level_204 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_203 : int) (temp___skip_top_level_204 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_203 : int) (temp___skip_top_level_204 : bool) }

end

(* Module giving axioms for type "reactorstate" defined at trains.ads:13, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__reactorstate___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__reactorstate as Trains__reactorstate

 predicate dynamic_invariant [@inline] 
   (temp___expr_209 : int) (temp___is_init_205 : bool) (temp___skip_constant_206 : bool) (temp___do_toplevel_207 : bool) (temp___do_typ_inv_208 : bool) =
  (if (( temp___is_init_205 \/ (Trains__reactorstate.first <= Trains__reactorstate.last) )) then (
   (Trains__reactorstate.dynamic_property Trains__reactorstate.first Trains__reactorstate.last temp___expr_209)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_209 : int) (temp___is_init_205 : bool) (temp___skip_constant_206 : bool) (temp___do_toplevel_207 : bool) (temp___do_typ_inv_208 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_209 : int) (temp___is_init_205 : bool) (temp___skip_constant_206 : bool) (temp___do_toplevel_207 : bool) (temp___do_typ_inv_208 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_210 : int) (temp___skip_top_level_211 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_210 : int) (temp___skip_top_level_211 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_210 : int) (temp___skip_top_level_211 : bool) }

end

(* Module giving axioms for type "lights" defined at trains.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__lights___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__lights as Trains__lights

 predicate dynamic_invariant [@inline] 
   (temp___expr_216 : int) (temp___is_init_212 : bool) (temp___skip_constant_213 : bool) (temp___do_toplevel_214 : bool) (temp___do_typ_inv_215 : bool) =
  (if (( temp___is_init_212 \/ (Trains__lights.first <= Trains__lights.last) )) then (
   (Trains__lights.dynamic_property Trains__lights.first Trains__lights.last temp___expr_216)) else true)
 val dynamic_invariant [@inline] 
   (temp___expr_216 : int) (temp___is_init_212 : bool) (temp___skip_constant_213 : bool) (temp___do_toplevel_214 : bool) (temp___do_typ_inv_215 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_216 : int) (temp___is_init_212 : bool) (temp___skip_constant_213 : bool) (temp___do_toplevel_214 : bool) (temp___do_typ_inv_215 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_217 : int) (temp___skip_top_level_218 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_217 : int) (temp___skip_top_level_218 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_217 : int) (temp___skip_top_level_218 : bool) }

end

(* Module giving axioms for type "reactors" defined at trains.ads:17, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__reactors___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Trains__reactors as Trains__reactors

 predicate dynamic_invariant [@inline] 
   (temp___expr_223 : Trains__reactors.reactors) (temp___is_init_219 : bool) (temp___skip_constant_220 : bool) (temp___do_toplevel_221 : bool) (temp___do_typ_inv_222 : bool) =
  true
 val dynamic_invariant [@inline] 
   (temp___expr_223 : Trains__reactors.reactors) (temp___is_init_219 : bool) (temp___skip_constant_220 : bool) (temp___do_toplevel_221 : bool) (temp___do_typ_inv_222 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_223 : Trains__reactors.reactors) (temp___is_init_219 : bool) (temp___skip_constant_220 : bool) (temp___do_toplevel_221 : bool) (temp___do_typ_inv_222 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_224 : Trains__reactors.reactors) (temp___skip_top_level_225 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_224 : Trains__reactors.reactors) (temp___skip_top_level_225 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_224 : Trains__reactors.reactors) (temp___skip_top_level_225 : bool) }

end

(* Module giving axioms for type "trains" defined at trains.ads:26, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__trains___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Trains__trains as Trains__trains

 predicate dynamic_invariant [@inline] 
   (temp___expr_236 : Trains__trains.trains) (temp___is_init_232 : bool) (temp___skip_constant_233 : bool) (temp___do_toplevel_234 : bool) (temp___do_typ_inv_235 : bool) =
  true
 val dynamic_invariant [@inline] 
   (temp___expr_236 : Trains__trains.trains) (temp___is_init_232 : bool) (temp___skip_constant_233 : bool) (temp___do_toplevel_234 : bool) (temp___do_typ_inv_235 : bool) : bool
  ensures { result <-> dynamic_invariant (temp___expr_236 : Trains__trains.trains) (temp___is_init_232 : bool) (temp___skip_constant_233 : bool) (temp___do_toplevel_234 : bool) (temp___do_typ_inv_235 : bool) }
 
 predicate default_initial_assumption [@inline] 
   (temp___expr_237 : Trains__trains.trains) (temp___skip_top_level_238 : bool) =
  true
 val default_initial_assumption [@inline] 
   (temp___expr_237 : Trains__trains.trains) (temp___skip_top_level_238 : bool) : bool
  ensures { result <-> default_initial_assumption (temp___expr_237 : Trains__trains.trains) (temp___skip_top_level_238 : bool) }

end

(* Module giving axioms for type "T1b" defined at trains.adb:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__addcontrolrod__T1b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T2b" defined at trains.adb:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__removingcontrolrod__T2b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T3b" defined at trains.adb:29, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__addcarriage__T3b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T4b" defined at trains.adb:37, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__removingcarriage__T4b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T5b" defined at trains.adb:45, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__increasecoolant__T5b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T6b" defined at trains.adb:54, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__decreasecoolant__T6b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T7b" defined at trains.adb:62, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__increasetemp__T7b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T8b" defined at trains.adb:189, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T8b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T9b" defined at trains.adb:190, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T9b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T10b" defined at trains.adb:191, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T10b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T11b" defined at trains.adb:192, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T11b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T12b" defined at trains.adb:193, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T12b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T13b" defined at trains.adb:193, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T13b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T14b" defined at trains.adb:194, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T14b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T15b" defined at trains.adb:194, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T15b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T16b" defined at trains.adb:195, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T16b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T17b" defined at trains.adb:196, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T17b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T18b" defined at trains.adb:197, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T18b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T19b" defined at trains.adb:197, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T19b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T20b" defined at trains.adb:198, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T20b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T21b" defined at trains.adb:198, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T21b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T22b" defined at trains.adb:199, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T22b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T23b" defined at trains.adb:199, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T23b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T24b" defined at trains.adb:200, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T24b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T25b" defined at trains.adb:200, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T25b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T26b" defined at trains.adb:201, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T26b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T27b" defined at trains.adb:201, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T27b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T28b" defined at trains.adb:202, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T28b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T29b" defined at trains.adb:202, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T29b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T30b" defined at trains.adb:203, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T30b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T31b" defined at trains.adb:205, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T31b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T32b" defined at trains.adb:209, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T32b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T33b" defined at trains.adb:213, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T33b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T34b" defined at trains.adb:220, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T34b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T35b" defined at trains.adb:225, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T35b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T36b" defined at trains.adb:229, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T36b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T37b" defined at trains.adb:235, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T37b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T38b" defined at trains.adb:237, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T38b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T39b" defined at trains.adb:241, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T39b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module giving axioms for type "T40b" defined at trains.adb:246, created in Gnat2Why.Types.Generate_Type_Completion *)
module Trains__displayall__T40b___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int


end

(* Module for defining a value for string literal  defined at trains.adb:12, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_253
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_253 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_253__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_253 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (1 : int))) = (78 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (2 : int))) = (117 : int)) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (3 : int))) = (109 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (4 : int))) = (98 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (5 : int))) = (101 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (6 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (7 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (8 : int))) = (111 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (9 : int))) = (102 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (10 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (11 : int))) = (67 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (12 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (13 : int))) = (110 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (14 : int))) = (116 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (15 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (16 : int))) = (111 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (17 : int))) = (108 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (18 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (19 : int))) = (82 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (20 : int))) = (111 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (21 : int))) = (100 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (22 : int))) = (115 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (23 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (24 : int))) = (105 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_253 __void_param) (25 : int))) = (115 : int)) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:20, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_260
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_260 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_260__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_260 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (1 : int))) = (78 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (2 : int))) = (117 : int)) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (3 : int))) = (109 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (4 : int))) = (98 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (5 : int))) = (101 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (6 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (7 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (8 : int))) = (111 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (9 : int))) = (102 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (10 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (11 : int))) = (67 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (12 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (13 : int))) = (110 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (14 : int))) = (116 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (15 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (16 : int))) = (111 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (17 : int))) = (108 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (18 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (19 : int))) = (82 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (20 : int))) = (111 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (21 : int))) = (100 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (22 : int))) = (115 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (23 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (24 : int))) = (105 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_260 __void_param) (25 : int))) = (115 : int)) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:29, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_266
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_266 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_266__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_266 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (1 : int))) = (78 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (2 : int))) = (117 : int)) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (3 : int))) = (109 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (4 : int))) = (98 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (5 : int))) = (101 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (6 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (7 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (8 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (9 : int))) = (102 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (10 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (11 : int))) = (67 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (12 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (13 : int))) = (114 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (14 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (15 : int))) = (105 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (16 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (17 : int))) = (103 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (18 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_266 __void_param) (19 : int))) = (115 : int)) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:37, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_272
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_272 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_272__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_272 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (1 : int))) = (78 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (2 : int))) = (117 : int)) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (3 : int))) = (109 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (4 : int))) = (98 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (5 : int))) = (101 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (6 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (7 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (8 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (9 : int))) = (102 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (10 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (11 : int))) = (67 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (12 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (13 : int))) = (114 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (14 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (15 : int))) = (105 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (16 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (17 : int))) = (103 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (18 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_272 __void_param) (19 : int))) = (115 : int)) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:45, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_279
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_279 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_279__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_279 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_279 __void_param) (1 : int))) = (65 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_279 __void_param) (2 : int))) = (109 : int)) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_279 __void_param) (3 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_279 __void_param) (4 : int))) = (117 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_279 __void_param) (5 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_279 __void_param) (6 : int))) = (116 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_279 __void_param) (7 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_279 __void_param) (8 : int))) = (111 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_279 __void_param) (9 : int))) = (102 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_279 __void_param) (10 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_279 __void_param) (11 : int))) = (87 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_279 __void_param) (12 : int))) = (97 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_279 __void_param) (13 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_279 __void_param) (14 : int))) = (101 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_279 __void_param) (15 : int))) = (114 : int)) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:54, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_286
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_286 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_286__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_286 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_286 __void_param) (1 : int))) = (65 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_286 __void_param) (2 : int))) = (109 : int)) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_286 __void_param) (3 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_286 __void_param) (4 : int))) = (117 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_286 __void_param) (5 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_286 __void_param) (6 : int))) = (116 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_286 __void_param) (7 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_286 __void_param) (8 : int))) = (111 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_286 __void_param) (9 : int))) = (102 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_286 __void_param) (10 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_286 __void_param) (11 : int))) = (87 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_286 __void_param) (12 : int))) = (97 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_286 __void_param) (13 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_286 __void_param) (14 : int))) = (101 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_286 __void_param) (15 : int))) = (114 : int)) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:62, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_293
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_293 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_293__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_293 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (1 : int))) = (67 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (2 : int))) = (117 : int)) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (3 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (4 : int))) = (114 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (5 : int))) = (101 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (6 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (7 : int))) = (116 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (8 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (9 : int))) = (84 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (10 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (11 : int))) = (109 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (12 : int))) = (112 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (13 : int))) = (101 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (14 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (15 : int))) = (97 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (16 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (17 : int))) = (117 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (18 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_293 __void_param) (19 : int))) = (101 : int)) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:189, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_358
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_358 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_358__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_358 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_358 __void_param) (1 : int))) = (27 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_358 __void_param) (2 : int))) = (91 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_358 __void_param) (3 : int))) = (50 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_358 __void_param) (4 : int))) = (74 : int)) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:190, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_359
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_359 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_359__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_359 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (1 : int))) = (67 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (2 : int))) = (117 : int)) )/\( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (3 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (4 : int))) = (114 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (5 : int))) = (101 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (6 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (7 : int))) = (116 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (8 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (9 : int))) = (83 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (10 : int))) = (116 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (11 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (12 : int))) = (116 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (13 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (14 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (15 : int))) = (111 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (16 : int))) = (102 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (17 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (18 : int))) = (84 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (19 : int))) = (104 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (20 : int))) = (101 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (21 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (22 : int))) = (84 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (23 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (24 : int))) = (97 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (25 : int))) = (105 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (26 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (27 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (28 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (29 : int))) = (110 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (30 : int))) = (100 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (31 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (32 : int))) = (82 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (33 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (34 : int))) = (97 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (35 : int))) = (99 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (36 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (37 : int))) = (111 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (38 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (39 : int))) = (58 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (40 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (41 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (42 : int))) = (32 : int)) ) ) ) ) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (43 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (44 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (45 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (46 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (47 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (48 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (49 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (50 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (51 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (52 : int))) = (32 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (53 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (54 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (55 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (56 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (57 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (58 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (59 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (60 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (61 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (62 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (63 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (64 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (65 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (66 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (67 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (68 : int))) = (72 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (69 : int))) = (101 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (70 : int))) = (108 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (71 : int))) = (112 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (72 : int))) = (32 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (73 : int))) = (79 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (74 : int))) = (112 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (75 : int))) = (116 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (76 : int))) = (105 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (77 : int))) = (111 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (78 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (79 : int))) = (115 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (80 : int))) = (58 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_359 __void_param) (81 : int))) = (32 : int)) ) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:191, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_360
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_360 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_360__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_360 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (1 : int))) = (45 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (2 : int))) = (45 : int)) )/\( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (3 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (4 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (5 : int))) = (45 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (6 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (7 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (8 : int))) = (45 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (9 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (10 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (11 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (12 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (13 : int))) = (45 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (14 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (15 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (16 : int))) = (45 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (17 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (18 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (19 : int))) = (45 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (20 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (21 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (22 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (23 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (24 : int))) = (45 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (25 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (26 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (27 : int))) = (45 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (28 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (29 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (30 : int))) = (45 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (31 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (32 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (33 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (34 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (35 : int))) = (45 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (36 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (37 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (38 : int))) = (45 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (39 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (40 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (41 : int))) = (45 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (42 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (43 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (44 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (45 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (46 : int))) = (45 : int)) ) ) ) ) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (47 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (48 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (49 : int))) = (45 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (50 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (51 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (52 : int))) = (45 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (53 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (54 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (55 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (56 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (57 : int))) = (32 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (58 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (59 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (60 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (61 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (62 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (63 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (64 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (65 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (66 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (67 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (68 : int))) = (49 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (69 : int))) = (46 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (70 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (71 : int))) = (83 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (72 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (73 : int))) = (97 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (74 : int))) = (114 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (75 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (76 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (77 : int))) = (85 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (78 : int))) = (112 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (79 : int))) = (32 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (80 : int))) = (84 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (81 : int))) = (104 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (82 : int))) = (101 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (83 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (84 : int))) = (82 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (85 : int))) = (101 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (86 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (87 : int))) = (99 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (88 : int))) = (116 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (89 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_360 __void_param) (90 : int))) = (114 : int)) ) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:192, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_361
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_361 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_361__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_361 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (1 : int))) = (84 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (2 : int))) = (114 : int)) )/\( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (3 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (4 : int))) = (105 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (5 : int))) = (110 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (6 : int))) = (58 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (7 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (8 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (9 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (10 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (11 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (12 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (13 : int))) = (32 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (14 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (15 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (16 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (17 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (18 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (19 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (20 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (21 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (22 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (23 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (24 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (25 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (26 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (27 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (28 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (29 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (30 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (31 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (32 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (33 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (34 : int))) = (32 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (35 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (36 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (37 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (38 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (39 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (40 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (41 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (42 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (43 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (44 : int))) = (32 : int)) ) ) ) ) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (45 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (46 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (47 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (48 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (49 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (50 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (51 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (52 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (53 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (54 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (55 : int))) = (32 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (56 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (57 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (58 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (59 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (60 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (61 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (62 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (63 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (64 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (65 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (66 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (67 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (68 : int))) = (50 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (69 : int))) = (46 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (70 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (71 : int))) = (77 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (72 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (73 : int))) = (110 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (74 : int))) = (117 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (75 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (76 : int))) = (108 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (77 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (78 : int))) = (83 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (79 : int))) = (104 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (80 : int))) = (117 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (81 : int))) = (116 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (82 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (83 : int))) = (68 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (84 : int))) = (111 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (85 : int))) = (119 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_361 __void_param) (86 : int))) = (110 : int)) ) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:193, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_362
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_362 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_362__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_362 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (1 : int))) = (32 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (2 : int))) = (109 : int)) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (3 : int))) = (112 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (4 : int))) = (104 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (5 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (6 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (7 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (8 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (9 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (10 : int))) = (32 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (11 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (12 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (13 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (14 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (15 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (16 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (17 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (18 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (19 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (20 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (21 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (22 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (23 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (24 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (25 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (26 : int))) = (32 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (27 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (28 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (29 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (30 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (31 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (32 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (33 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (34 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (35 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (36 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (37 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (38 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (39 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (40 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (41 : int))) = (32 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (42 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (43 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (44 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (45 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (46 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (47 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (48 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (49 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (50 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (51 : int))) = (51 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (52 : int))) = (46 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (53 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (54 : int))) = (84 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (55 : int))) = (114 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (56 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (57 : int))) = (105 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (58 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (59 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (60 : int))) = (83 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (61 : int))) = (116 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (62 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (63 : int))) = (114 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_362 __void_param) (64 : int))) = (116 : int)) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:193, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_363
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_363 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_363__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_363 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_363 __void_param) (1 : int))) = (67 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_363 __void_param) (2 : int))) = (117 : int)) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_363 __void_param) (3 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_363 __void_param) (4 : int))) = (114 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_363 __void_param) (5 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_363 __void_param) (6 : int))) = (110 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_363 __void_param) (7 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_363 __void_param) (8 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_363 __void_param) (9 : int))) = (83 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_363 __void_param) (10 : int))) = (112 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_363 __void_param) (11 : int))) = (101 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_363 __void_param) (12 : int))) = (101 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_363 __void_param) (13 : int))) = (100 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_363 __void_param) (14 : int))) = (58 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_363 __void_param) (15 : int))) = (32 : int)) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:194, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_368
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_368 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_368__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_368 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (1 : int))) = (32 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (2 : int))) = (32 : int)) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (3 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (4 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (5 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (6 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (7 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (8 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (9 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (10 : int))) = (32 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (11 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (12 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (13 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (14 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (15 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (16 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (17 : int))) = (32 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (18 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (19 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (20 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (21 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (22 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (23 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (24 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (25 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (26 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (27 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (28 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (29 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (30 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (31 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (32 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (33 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (34 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (35 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (36 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (37 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (38 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (39 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (40 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (41 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (42 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (43 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (44 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (45 : int))) = (52 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (46 : int))) = (46 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (47 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (48 : int))) = (65 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (49 : int))) = (100 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (50 : int))) = (100 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (51 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (52 : int))) = (67 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (53 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (54 : int))) = (114 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (55 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (56 : int))) = (105 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (57 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (58 : int))) = (103 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_368 __void_param) (59 : int))) = (101 : int)) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:194, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_369
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_369 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_369__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_369 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (1 : int))) = (78 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (2 : int))) = (117 : int)) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (3 : int))) = (109 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (4 : int))) = (98 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (5 : int))) = (101 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (6 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (7 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (8 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (9 : int))) = (102 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (10 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (11 : int))) = (67 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (12 : int))) = (97 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (13 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (14 : int))) = (114 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (15 : int))) = (105 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (16 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (17 : int))) = (103 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (18 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (19 : int))) = (115 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (20 : int))) = (58 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_369 __void_param) (21 : int))) = (32 : int)) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:195, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_374
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_374 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_374__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_374 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (1 : int))) = (45 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (2 : int))) = (45 : int)) )/\( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (3 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (4 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (5 : int))) = (45 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (6 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (7 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (8 : int))) = (45 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (9 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (10 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (11 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (12 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (13 : int))) = (45 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (14 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (15 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (16 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (17 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (18 : int))) = (45 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (19 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (20 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (21 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (22 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (23 : int))) = (45 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (24 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (25 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (26 : int))) = (45 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (27 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (28 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (29 : int))) = (45 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (30 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (31 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (32 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (33 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (34 : int))) = (45 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (35 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (36 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (37 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (38 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (39 : int))) = (45 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (40 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (41 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (42 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (43 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (44 : int))) = (45 : int)) ) ) ) ) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (45 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (46 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (47 : int))) = (45 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (48 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (49 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (50 : int))) = (45 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (51 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (52 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (53 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (54 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (55 : int))) = (45 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (56 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (57 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (58 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (59 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (60 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (61 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (62 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (63 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (64 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (65 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (66 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (67 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (68 : int))) = (53 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (69 : int))) = (46 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (70 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (71 : int))) = (82 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (72 : int))) = (101 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (73 : int))) = (109 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (74 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (75 : int))) = (118 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (76 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (77 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (78 : int))) = (67 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (79 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (80 : int))) = (114 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (81 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (82 : int))) = (105 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (83 : int))) = (97 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (84 : int))) = (103 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_374 __void_param) (85 : int))) = (101 : int)) ) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:196, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_375
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_375 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_375__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_375 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (1 : int))) = (82 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (2 : int))) = (101 : int)) )/\( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (3 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (4 : int))) = (99 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (5 : int))) = (116 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (6 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (7 : int))) = (114 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (8 : int))) = (58 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (9 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (10 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (11 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (12 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (13 : int))) = (32 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (14 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (15 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (16 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (17 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (18 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (19 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (20 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (21 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (22 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (23 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (24 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (25 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (26 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (27 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (28 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (29 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (30 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (31 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (32 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (33 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (34 : int))) = (32 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (35 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (36 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (37 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (38 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (39 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (40 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (41 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (42 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (43 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (44 : int))) = (32 : int)) ) ) ) ) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (45 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (46 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (47 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (48 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (49 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (50 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (51 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (52 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (53 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (54 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (55 : int))) = (32 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (56 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (57 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (58 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (59 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (60 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (61 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (62 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (63 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (64 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (65 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (66 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (67 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (68 : int))) = (54 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (69 : int))) = (46 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (70 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (71 : int))) = (65 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (72 : int))) = (100 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (73 : int))) = (100 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (74 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (75 : int))) = (67 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (76 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (77 : int))) = (110 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (78 : int))) = (116 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (79 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (80 : int))) = (111 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (81 : int))) = (108 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (82 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (83 : int))) = (82 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (84 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_375 __void_param) (85 : int))) = (100 : int)) ) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:197, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_376
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_376 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_376__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_376 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (1 : int))) = (32 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (2 : int))) = (32 : int)) )/\( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (3 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (4 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (5 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (6 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (7 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (8 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (9 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (10 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (11 : int))) = (32 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (12 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (13 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (14 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (15 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (16 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (17 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (18 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (19 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (20 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (21 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (22 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (23 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (24 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (25 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (26 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (27 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (28 : int))) = (32 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (29 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (30 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (31 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (32 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (33 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (34 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (35 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (36 : int))) = (32 : int)) ) ) ) ) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (37 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (38 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (39 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (40 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (41 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (42 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (43 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (44 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (45 : int))) = (32 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (46 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (47 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (48 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (49 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (50 : int))) = (55 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (51 : int))) = (46 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (52 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (53 : int))) = (82 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (54 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (55 : int))) = (109 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (56 : int))) = (111 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (57 : int))) = (118 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (58 : int))) = (101 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (59 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (60 : int))) = (67 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (61 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (62 : int))) = (110 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (63 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (64 : int))) = (114 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (65 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (66 : int))) = (108 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (67 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (68 : int))) = (82 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (69 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_376 __void_param) (70 : int))) = (100 : int)) ) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:197, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_377
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_377 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_377__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_377 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_377 __void_param) (1 : int))) = (82 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_377 __void_param) (2 : int))) = (101 : int)) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_377 __void_param) (3 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_377 __void_param) (4 : int))) = (99 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_377 __void_param) (5 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_377 __void_param) (6 : int))) = (111 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_377 __void_param) (7 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_377 __void_param) (8 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_377 __void_param) (9 : int))) = (83 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_377 __void_param) (10 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_377 __void_param) (11 : int))) = (97 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_377 __void_param) (12 : int))) = (116 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_377 __void_param) (13 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_377 __void_param) (14 : int))) = (58 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_377 __void_param) (15 : int))) = (32 : int)) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:198, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_382
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_382 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_382__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_382 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (1 : int))) = (32 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (2 : int))) = (32 : int)) )/\( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (3 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (4 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (5 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (6 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (7 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (8 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (9 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (10 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (11 : int))) = (32 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (12 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (13 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (14 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (15 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (16 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (17 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (18 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (19 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (20 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (21 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (22 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (23 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (24 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (25 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (26 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (27 : int))) = (32 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (28 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (29 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (30 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (31 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (32 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (33 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (34 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (35 : int))) = (32 : int)) ) ) ) ) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (36 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (37 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (38 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (39 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (40 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (41 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (42 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (43 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (44 : int))) = (32 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (45 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (46 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (47 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (48 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (49 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (50 : int))) = (56 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (51 : int))) = (46 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (52 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (53 : int))) = (73 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (54 : int))) = (110 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (55 : int))) = (99 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (56 : int))) = (114 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (57 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (58 : int))) = (97 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (59 : int))) = (115 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (60 : int))) = (101 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (61 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (62 : int))) = (67 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (63 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (64 : int))) = (111 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (65 : int))) = (108 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (66 : int))) = (97 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (67 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_382 __void_param) (68 : int))) = (116 : int)) ) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:198, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_383
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_383 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_383__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_383 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_383 __void_param) (1 : int))) = (76 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_383 __void_param) (2 : int))) = (105 : int)) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_383 __void_param) (3 : int))) = (103 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_383 __void_param) (4 : int))) = (104 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_383 __void_param) (5 : int))) = (116 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_383 __void_param) (6 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_383 __void_param) (7 : int))) = (83 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_383 __void_param) (8 : int))) = (116 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_383 __void_param) (9 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_383 __void_param) (10 : int))) = (116 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_383 __void_param) (11 : int))) = (101 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_383 __void_param) (12 : int))) = (58 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_383 __void_param) (13 : int))) = (32 : int)) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:199, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_388
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_388 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_388__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_388 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (1 : int))) = (32 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (2 : int))) = (32 : int)) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (3 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (4 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (5 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (6 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (7 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (8 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (9 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (10 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (11 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (12 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (13 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (14 : int))) = (32 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (15 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (16 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (17 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (18 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (19 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (20 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (21 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (22 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (23 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (24 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (25 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (26 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (27 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (28 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (29 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (30 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (31 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (32 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (33 : int))) = (57 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (34 : int))) = (46 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (35 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (36 : int))) = (82 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (37 : int))) = (101 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (38 : int))) = (109 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (39 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (40 : int))) = (118 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (41 : int))) = (101 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (42 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (43 : int))) = (67 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (44 : int))) = (111 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (45 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (46 : int))) = (108 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (47 : int))) = (97 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (48 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_388 __void_param) (49 : int))) = (116 : int)) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:199, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_389
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_389 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_389__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_389 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (1 : int))) = (78 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (2 : int))) = (117 : int)) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (3 : int))) = (109 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (4 : int))) = (98 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (5 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (6 : int))) = (114 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (7 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (8 : int))) = (111 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (9 : int))) = (102 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (10 : int))) = (32 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (11 : int))) = (67 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (12 : int))) = (111 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (13 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (14 : int))) = (116 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (15 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (16 : int))) = (111 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (17 : int))) = (108 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (18 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (19 : int))) = (82 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (20 : int))) = (111 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (21 : int))) = (100 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (22 : int))) = (115 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (23 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (24 : int))) = (73 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (25 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (26 : int))) = (115 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (27 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (28 : int))) = (114 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (29 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (30 : int))) = (101 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (31 : int))) = (100 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (32 : int))) = (58 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_389 __void_param) (33 : int))) = (32 : int)) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:200, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_394
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_394 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_394__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_394 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (1 : int))) = (32 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (2 : int))) = (32 : int)) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (3 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (4 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (5 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (6 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (7 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (8 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (9 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (10 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (11 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (12 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (13 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (14 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (15 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (16 : int))) = (32 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (17 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (18 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (19 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (20 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (21 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (22 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (23 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (24 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (25 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (26 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (27 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (28 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (29 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (30 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (31 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (32 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (33 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (34 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (35 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (36 : int))) = (109 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (37 : int))) = (46 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (38 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (39 : int))) = (82 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (40 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (41 : int))) = (97 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (42 : int))) = (99 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (43 : int))) = (116 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (44 : int))) = (111 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (45 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (46 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (47 : int))) = (77 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (48 : int))) = (97 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (49 : int))) = (105 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (50 : int))) = (110 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (51 : int))) = (116 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (52 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (53 : int))) = (110 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (54 : int))) = (97 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (55 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (56 : int))) = (99 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_394 __void_param) (57 : int))) = (101 : int)) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:200, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_395
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_395 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_395__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_395 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (1 : int))) = (65 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (2 : int))) = (109 : int)) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (3 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (4 : int))) = (117 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (5 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (6 : int))) = (116 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (7 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (8 : int))) = (111 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (9 : int))) = (102 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (10 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (11 : int))) = (67 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (12 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (13 : int))) = (111 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (14 : int))) = (108 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (15 : int))) = (97 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (16 : int))) = (110 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (17 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (18 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (19 : int))) = (73 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (20 : int))) = (110 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (21 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (22 : int))) = (82 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (23 : int))) = (101 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (24 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (25 : int))) = (99 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (26 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (27 : int))) = (111 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (28 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (29 : int))) = (58 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_395 __void_param) (30 : int))) = (32 : int)) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:201, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_400
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_400 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_400__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_400 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (1 : int))) = (67 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (2 : int))) = (32 : int)) )/\( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (3 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (4 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (5 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (6 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (7 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (8 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (9 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (10 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (11 : int))) = (32 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (12 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (13 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (14 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (15 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (16 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (17 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (18 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (19 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (20 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (21 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (22 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (23 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (24 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (25 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (26 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (27 : int))) = (32 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (28 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (29 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (30 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (31 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (32 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (33 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (34 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (35 : int))) = (32 : int)) ) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (36 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (37 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (38 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (39 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (40 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (41 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (42 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (43 : int))) = (32 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (44 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (45 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (46 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (47 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (48 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (49 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (50 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (51 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (52 : int))) = (48 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (53 : int))) = (46 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (54 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (55 : int))) = (82 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (56 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (57 : int))) = (115 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (58 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (59 : int))) = (116 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (60 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (61 : int))) = (82 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (62 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (63 : int))) = (97 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (64 : int))) = (99 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (65 : int))) = (116 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (66 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_400 __void_param) (67 : int))) = (114 : int)) ) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:201, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_401
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_401 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_401__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_401 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_401 __void_param) (1 : int))) = (67 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_401 __void_param) (2 : int))) = (117 : int)) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_401 __void_param) (3 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_401 __void_param) (4 : int))) = (114 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_401 __void_param) (5 : int))) = (101 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_401 __void_param) (6 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_401 __void_param) (7 : int))) = (116 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_401 __void_param) (8 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_401 __void_param) (9 : int))) = (84 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_401 __void_param) (10 : int))) = (101 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_401 __void_param) (11 : int))) = (109 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_401 __void_param) (12 : int))) = (112 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_401 __void_param) (13 : int))) = (58 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_401 __void_param) (14 : int))) = (32 : int)) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:202, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_406
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_406 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_406__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_406 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_406 __void_param) (1 : int))) = (32 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_406 __void_param) (2 : int))) = (77 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_406 __void_param) (3 : int))) = (119 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_406 __void_param) (4 : int))) = (104 : int)) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:202, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_407
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_407 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_407__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_407 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (1 : int))) = (65 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (2 : int))) = (109 : int)) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (3 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (4 : int))) = (117 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (5 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (6 : int))) = (116 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (7 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (8 : int))) = (111 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (9 : int))) = (102 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (10 : int))) = (32 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (11 : int))) = (80 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (12 : int))) = (111 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (13 : int))) = (119 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (14 : int))) = (101 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (15 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (16 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (17 : int))) = (66 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (18 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (19 : int))) = (105 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (20 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (21 : int))) = (103 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (22 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (23 : int))) = (80 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (24 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (25 : int))) = (111 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (26 : int))) = (100 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (27 : int))) = (117 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (28 : int))) = (99 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (29 : int))) = (101 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (30 : int))) = (100 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (31 : int))) = (58 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_407 __void_param) (32 : int))) = (32 : int)) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:203, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_412
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_412 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_412__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_412 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (1 : int))) = (45 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (2 : int))) = (45 : int)) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (3 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (4 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (5 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (6 : int))) = (45 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (7 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (8 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (9 : int))) = (45 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (10 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (11 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (12 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (13 : int))) = (45 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (14 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (15 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (16 : int))) = (45 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (17 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (18 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (19 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (20 : int))) = (45 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (21 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (22 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (23 : int))) = (45 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (24 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (25 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (26 : int))) = (45 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (27 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (28 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (29 : int))) = (45 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (30 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (31 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (32 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (33 : int))) = (45 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (34 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (35 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (36 : int))) = (45 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (37 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (38 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (39 : int))) = (45 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (40 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (41 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (42 : int))) = (45 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (43 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (44 : int))) = (45 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (45 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (46 : int))) = (45 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (47 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (48 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (49 : int))) = (45 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (50 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (51 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (52 : int))) = (45 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (53 : int))) = (45 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (54 : int))) = (45 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_412 __void_param) (55 : int))) = (45 : int)) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:205, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_413
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_413 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_413__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_413 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (1 : int))) = (82 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (2 : int))) = (101 : int)) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (3 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (4 : int))) = (99 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (5 : int))) = (116 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (6 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (7 : int))) = (114 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (8 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (9 : int))) = (104 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (10 : int))) = (97 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (11 : int))) = (115 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (12 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (13 : int))) = (98 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (14 : int))) = (101 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (15 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (16 : int))) = (110 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (17 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (18 : int))) = (77 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (19 : int))) = (97 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (20 : int))) = (110 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (21 : int))) = (117 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (22 : int))) = (97 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (23 : int))) = (108 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (24 : int))) = (108 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (25 : int))) = (121 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (26 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (27 : int))) = (83 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (28 : int))) = (104 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (29 : int))) = (117 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (30 : int))) = (116 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (31 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (32 : int))) = (68 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (33 : int))) = (111 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (34 : int))) = (119 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (35 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (36 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (37 : int))) = (83 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (38 : int))) = (117 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (39 : int))) = (99 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (40 : int))) = (99 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (41 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (42 : int))) = (115 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (43 : int))) = (115 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (44 : int))) = (102 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (45 : int))) = (117 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (46 : int))) = (108 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (47 : int))) = (108 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_413 __void_param) (48 : int))) = (121 : int)) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:209, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_414
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_414 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_414__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_414 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (1 : int))) = (77 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (2 : int))) = (85 : int)) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (3 : int))) = (83 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (4 : int))) = (84 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (5 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (6 : int))) = (65 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (7 : int))) = (68 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (8 : int))) = (68 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (9 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (10 : int))) = (77 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (11 : int))) = (79 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (12 : int))) = (82 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (13 : int))) = (69 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (14 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (15 : int))) = (67 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (16 : int))) = (79 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (17 : int))) = (78 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (18 : int))) = (84 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (19 : int))) = (82 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (20 : int))) = (79 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (21 : int))) = (76 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (22 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (23 : int))) = (82 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (24 : int))) = (79 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (25 : int))) = (68 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (26 : int))) = (83 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (27 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (28 : int))) = (70 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (29 : int))) = (79 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (30 : int))) = (82 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (31 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (32 : int))) = (77 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (33 : int))) = (65 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (34 : int))) = (78 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (35 : int))) = (85 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (36 : int))) = (65 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (37 : int))) = (76 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (38 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (39 : int))) = (83 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (40 : int))) = (72 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (41 : int))) = (85 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (42 : int))) = (84 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (43 : int))) = (68 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (44 : int))) = (79 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (45 : int))) = (87 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_414 __void_param) (46 : int))) = (78 : int)) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:213, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_415
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_415 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_415__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_415 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (1 : int))) = (77 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (2 : int))) = (85 : int)) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (3 : int))) = (83 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (4 : int))) = (84 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (5 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (6 : int))) = (65 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (7 : int))) = (68 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (8 : int))) = (68 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (9 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (10 : int))) = (77 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (11 : int))) = (79 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (12 : int))) = (82 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (13 : int))) = (69 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (14 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (15 : int))) = (67 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (16 : int))) = (79 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (17 : int))) = (79 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (18 : int))) = (76 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (19 : int))) = (65 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (20 : int))) = (78 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (21 : int))) = (84 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (22 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (23 : int))) = (70 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (24 : int))) = (79 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (25 : int))) = (82 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (26 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (27 : int))) = (77 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (28 : int))) = (65 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (29 : int))) = (78 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (30 : int))) = (85 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (31 : int))) = (65 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (32 : int))) = (76 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (33 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (34 : int))) = (83 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (35 : int))) = (72 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (36 : int))) = (85 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (37 : int))) = (84 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (38 : int))) = (68 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (39 : int))) = (79 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (40 : int))) = (87 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_415 __void_param) (41 : int))) = (78 : int)) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:220, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_416
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_416 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_416__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_416 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (1 : int))) = (69 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (2 : int))) = (77 : int)) )/\( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (3 : int))) = (69 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (4 : int))) = (82 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (5 : int))) = (71 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (6 : int))) = (69 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (7 : int))) = (78 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (8 : int))) = (67 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (9 : int))) = (89 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (10 : int))) = (33 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (11 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (12 : int))) = (82 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (13 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (14 : int))) = (97 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (15 : int))) = (99 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (16 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (17 : int))) = (111 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (18 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (19 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (20 : int))) = (83 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (21 : int))) = (104 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (22 : int))) = (117 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (23 : int))) = (116 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (24 : int))) = (116 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (25 : int))) = (105 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (26 : int))) = (110 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (27 : int))) = (103 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (28 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (29 : int))) = (68 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (30 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (31 : int))) = (119 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (32 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (33 : int))) = (44 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (34 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (35 : int))) = (84 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (36 : int))) = (101 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (37 : int))) = (109 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (38 : int))) = (112 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (39 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (40 : int))) = (114 : int)) ) ) ) ) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (41 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (42 : int))) = (116 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (43 : int))) = (117 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (44 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (45 : int))) = (101 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (46 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (47 : int))) = (101 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (48 : int))) = (120 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (49 : int))) = (99 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (50 : int))) = (101 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (51 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (52 : int))) = (100 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (53 : int))) = (101 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (54 : int))) = (100 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (55 : int))) = (32 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (56 : int))) = (109 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (57 : int))) = (97 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (58 : int))) = (120 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (59 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (60 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (61 : int))) = (112 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (62 : int))) = (101 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (63 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (64 : int))) = (97 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (65 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (66 : int))) = (105 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (67 : int))) = (110 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (68 : int))) = (103 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (69 : int))) = (32 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (70 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (71 : int))) = (101 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (72 : int))) = (109 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (73 : int))) = (112 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (74 : int))) = (58 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (75 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (76 : int))) = (57 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (77 : int))) = (53 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_416 __void_param) (78 : int))) = (67 : int)) ) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:225, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_417
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_417 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_417__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_417 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (1 : int))) = (84 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (2 : int))) = (104 : int)) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (3 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (4 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (5 : int))) = (84 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (6 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (7 : int))) = (97 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (8 : int))) = (105 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (9 : int))) = (110 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (10 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (11 : int))) = (72 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (12 : int))) = (97 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (13 : int))) = (115 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (14 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (15 : int))) = (83 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (16 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (17 : int))) = (97 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (18 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (19 : int))) = (116 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (20 : int))) = (101 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (21 : int))) = (100 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (22 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (23 : int))) = (77 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (24 : int))) = (111 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (25 : int))) = (118 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (26 : int))) = (105 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (27 : int))) = (110 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (28 : int))) = (103 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (29 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (30 : int))) = (83 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (31 : int))) = (117 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (32 : int))) = (99 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (33 : int))) = (99 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (34 : int))) = (101 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (35 : int))) = (115 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (36 : int))) = (115 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (37 : int))) = (102 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (38 : int))) = (117 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (39 : int))) = (108 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (40 : int))) = (108 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_417 __void_param) (41 : int))) = (121 : int)) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:229, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_418
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_418 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_418__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_418 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (1 : int))) = (82 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (2 : int))) = (101 : int)) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (3 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (4 : int))) = (99 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (5 : int))) = (116 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (6 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (7 : int))) = (114 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (8 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (9 : int))) = (78 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (10 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (11 : int))) = (101 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (12 : int))) = (100 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (13 : int))) = (115 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (14 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (15 : int))) = (84 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (16 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (17 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (18 : int))) = (66 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (19 : int))) = (101 : int)) ) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (20 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (21 : int))) = (84 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (22 : int))) = (117 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (23 : int))) = (114 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (24 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (25 : int))) = (101 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (26 : int))) = (100 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (27 : int))) = (32 : int)) ) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (28 : int))) = (79 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (29 : int))) = (110 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (30 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (31 : int))) = (70 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (32 : int))) = (105 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (33 : int))) = (114 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (34 : int))) = (115 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_418 __void_param) (35 : int))) = (116 : int)) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:235, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_419
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_419 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_419__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_419 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (1 : int))) = (82 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (2 : int))) = (101 : int)) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (3 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (4 : int))) = (99 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (5 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (6 : int))) = (111 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (7 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (8 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (9 : int))) = (73 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (10 : int))) = (115 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (11 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (12 : int))) = (85 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (13 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (14 : int))) = (100 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (15 : int))) = (101 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (16 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (17 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (18 : int))) = (77 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (19 : int))) = (97 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (20 : int))) = (105 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (21 : int))) = (110 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (22 : int))) = (116 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (23 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (24 : int))) = (110 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (25 : int))) = (101 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (26 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (27 : int))) = (99 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_419 __void_param) (28 : int))) = (101 : int)) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:237, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_420
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_420 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_420__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_420 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (1 : int))) = (82 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (2 : int))) = (101 : int)) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (3 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (4 : int))) = (99 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (5 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (6 : int))) = (111 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (7 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (8 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (9 : int))) = (77 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (10 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (11 : int))) = (105 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (12 : int))) = (110 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (13 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (14 : int))) = (97 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (15 : int))) = (110 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (16 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (17 : int))) = (110 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (18 : int))) = (99 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (19 : int))) = (101 : int)) ) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (20 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (21 : int))) = (67 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (22 : int))) = (111 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (23 : int))) = (109 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (24 : int))) = (112 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (25 : int))) = (108 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (26 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (27 : int))) = (116 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_420 __void_param) (28 : int))) = (101 : int)) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:241, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_421
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_421 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_421__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_421 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (1 : int))) = (82 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (2 : int))) = (101 : int)) )/\( ( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (3 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (4 : int))) = (99 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (5 : int))) = (116 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (6 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (7 : int))) = (114 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (8 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (9 : int))) = (78 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (10 : int))) = (101 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (11 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (12 : int))) = (100 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (13 : int))) = (115 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (14 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (15 : int))) = (84 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (16 : int))) = (111 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (17 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (18 : int))) = (66 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (19 : int))) = (101 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (20 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (21 : int))) = (83 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (22 : int))) = (104 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (23 : int))) = (117 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (24 : int))) = (116 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (25 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (26 : int))) = (68 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (27 : int))) = (111 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (28 : int))) = (119 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (29 : int))) = (110 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (30 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (31 : int))) = (70 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (32 : int))) = (111 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (33 : int))) = (114 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (34 : int))) = (32 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (35 : int))) = (77 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (36 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (37 : int))) = (105 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (38 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (39 : int))) = (116 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (40 : int))) = (97 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (41 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (42 : int))) = (99 : int)) ) ) ) ) )/\( ( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (43 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (44 : int))) = (110 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (45 : int))) = (99 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (46 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (47 : int))) = (44 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (48 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (49 : int))) = (80 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (50 : int))) = (108 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (51 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (52 : int))) = (97 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (53 : int))) = (115 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (54 : int))) = (101 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (55 : int))) = (32 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (56 : int))) = (70 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (57 : int))) = (111 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (58 : int))) = (108 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (59 : int))) = (108 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (60 : int))) = (111 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (61 : int))) = (119 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (62 : int))) = (32 : int)) ) ) ) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (63 : int))) = (83 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (64 : int))) = (104 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (65 : int))) = (117 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (66 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (67 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (68 : int))) = (68 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (69 : int))) = (111 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (70 : int))) = (119 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (71 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (72 : int))) = (32 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (73 : int))) = (80 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (74 : int))) = (114 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (75 : int))) = (111 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (76 : int))) = (99 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (77 : int))) = (101 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (78 : int))) = (100 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (79 : int))) = (117 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (80 : int))) = (114 : int)) )/\( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (81 : int))) = (101 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_421 __void_param) (82 : int))) = (115 : int)) ) ) ) ) ) ) ))

end

(* Module for defining a value for string literal  defined at trains.adb:246, created in Gnat2Why.Expr.Transform_String_Literal *)
module Temp___String_Literal_422
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Standard__character as Standard__character
 use        Standard__character__rep as Standard__character__rep
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character

 val function temp___String_Literal_422 
   (__void_param : unit) : Array__Int__Standard__character.map
 
 axiom temp___String_Literal_422__def_axiom :
  (forall __void_param   : unit [(temp___String_Literal_422 __void_param)].
   ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (1 : int))) = (69 : int)) /\ ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (2 : int))) = (110 : int)) )/\( ( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (3 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (4 : int))) = (101 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (5 : int))) = (114 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (6 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (7 : int))) = (119 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (8 : int))) = (104 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (9 : int))) = (97 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (10 : int))) = (116 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (11 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (12 : int))) = (121 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (13 : int))) = (111 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (14 : int))) = (117 : int)) ) ) )/\( ( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (15 : int))) = (32 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (16 : int))) = (119 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (17 : int))) = (97 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (18 : int))) = (110 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (19 : int))) = (116 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (20 : int))) = (32 : int)) ) )/\( ( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (21 : int))) = (116 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (22 : int))) = (111 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (23 : int))) = (32 : int)) )/\( ( ((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (24 : int))) = (100 : int))/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (25 : int))) = (111 : int)) )/\((Standard__character__rep.to_rep (Array__Int__Standard__character.get (temp___String_Literal_422 __void_param) (26 : int))) = (58 : int)) ) ) ) ) ))

end
(* Module for declaring a program function (and possibly an axiom) for "line_length__2" defined at a-textio.ads:245, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__line_length__2___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        Ada__text_io__line_length__2 as Ada__text_io__line_length__2
 use        Ada__text_io__count___axiom as Ada__text_io__count___axiom
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system

 val line_length__2 
   (__void_param : unit) : int
  requires {  true }
  ensures {  ( ( (result = (Ada__text_io__line_length__2.line_length__2 Ada__text_io__standard_in.standard_in.Main.__private__content Ada__text_io__standard_out.standard_out.Main.__private__content Ada__text_io__standard_err.standard_err.Main.__private__content Ada__text_io__current_in.current_in.Main.__private__content Ada__text_io__current_out.current_out.Main.__private__content Ada__text_io__current_err.current_err.Main.__private__content Ada__text_io__file_system.file_system.Main.__private__content)) /\ true )/\(Ada__text_io__count___axiom.dynamic_invariant result True False True True) ) }
  reads {Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}
 
 axiom line_length__2__post_axiom :
  (forall ada__text_io__standard_in   ada__text_io__standard_out   ada__text_io__standard_err   ada__text_io__current_in   ada__text_io__current_out   ada__text_io__current_err   ada__text_io__file_system   : Main.__private [(Ada__text_io__line_length__2.line_length__2 ada__text_io__standard_in ada__text_io__standard_out ada__text_io__standard_err ada__text_io__current_in ada__text_io__current_out ada__text_io__current_err ada__text_io__file_system)].
   ( true -> (let result = (Ada__text_io__line_length__2.line_length__2 ada__text_io__standard_in ada__text_io__standard_out ada__text_io__standard_err ada__text_io__current_in ada__text_io__current_out ada__text_io__current_err ada__text_io__file_system) in (
    ( ( true /\ (Ada__text_io__count___axiom.dynamic_invariant result True False True True) )/\true )))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "page_length__2" defined at a-textio.ads:251, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__page_length__2___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        Ada__text_io__page_length__2 as Ada__text_io__page_length__2
 use        Ada__text_io__count___axiom as Ada__text_io__count___axiom
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system

 val page_length__2 
   (__void_param : unit) : int
  requires {  true }
  ensures {  ( ( (result = (Ada__text_io__page_length__2.page_length__2 Ada__text_io__standard_in.standard_in.Main.__private__content Ada__text_io__standard_out.standard_out.Main.__private__content Ada__text_io__standard_err.standard_err.Main.__private__content Ada__text_io__current_in.current_in.Main.__private__content Ada__text_io__current_out.current_out.Main.__private__content Ada__text_io__current_err.current_err.Main.__private__content Ada__text_io__file_system.file_system.Main.__private__content)) /\ true )/\(Ada__text_io__count___axiom.dynamic_invariant result True False True True) ) }
  reads {Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}
 
 axiom page_length__2__post_axiom :
  (forall ada__text_io__standard_in   ada__text_io__standard_out   ada__text_io__standard_err   ada__text_io__current_in   ada__text_io__current_out   ada__text_io__current_err   ada__text_io__file_system   : Main.__private [(Ada__text_io__page_length__2.page_length__2 ada__text_io__standard_in ada__text_io__standard_out ada__text_io__standard_err ada__text_io__current_in ada__text_io__current_out ada__text_io__current_err ada__text_io__file_system)].
   ( true -> (let result = (Ada__text_io__page_length__2.page_length__2 ada__text_io__standard_in ada__text_io__standard_out ada__text_io__standard_err ada__text_io__current_in ada__text_io__current_out ada__text_io__current_err ada__text_io__file_system) in (
    ( ( true /\ (Ada__text_io__count___axiom.dynamic_invariant result True False True True) )/\true )))
    ))

end

(* Module for declaring a program function (and possibly an axiom) for "addcontrolrod" defined at trains.ads:56, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__addcontrolrod___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__controlrods as Trains__controlrods
 use        Trains__controlrods__rep as Trains__controlrods__rep
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system

 val addcontrolrod 
   (__void_param : unit) : unit
  requires {  ( ( [@GP_Pretty_Ada:3859] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) > (1 : int)) ) /\ ( [@GP_Pretty_Ada:3869] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) < (5 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:44107] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) = ((Trains__controlrods__rep.to_rep (old { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods )) + (1 : int))) ) /\ (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True True True True) ) }
  reads {Trains__train.train__split_fields, Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}
  writes {Trains__train.train__split_fields, Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}

end

(* Module for declaring a program function (and possibly an axiom) for "removingcontrolrod" defined at trains.ads:61, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__removingcontrolrod___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__controlrods as Trains__controlrods
 use        Trains__controlrods__rep as Trains__controlrods__rep
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system

 val removingcontrolrod 
   (__void_param : unit) : unit
  requires {  ( ( [@GP_Pretty_Ada:3921] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) > (1 : int)) ) /\ ( [@GP_Pretty_Ada:3931] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) < (5 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:44182] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) = ((Trains__controlrods__rep.to_rep (old { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods )) - (1 : int))) ) /\ (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True True True True) ) }
  reads {Trains__train.train__split_fields, Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}
  writes {Trains__train.train__split_fields, Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}

end

(* Module for declaring a program function (and possibly an axiom) for "addcarriage" defined at trains.ads:66, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__addcarriage___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__carriages as Trains__carriages
 use        Trains__carriages__rep as Trains__carriages__rep
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system

 val addcarriage 
   (__void_param : unit) : unit
  requires {  ( ( [@GP_Pretty_Ada:3981] ((Trains__carriages__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages) > (0 : int)) ) /\ ( [@GP_Pretty_Ada:3989] ((Trains__carriages__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages) < (10 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:44249] ((Trains__carriages__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages) <= ((Trains__carriages__rep.to_rep (old { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages )) + (1 : int))) ) /\ (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True True True True) ) }
  reads {Trains__train.train__split_fields, Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}
  writes {Trains__train.train__split_fields, Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}

end

(* Module for declaring a program function (and possibly an axiom) for "removingcarriage" defined at trains.ads:71, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__removingcarriage___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__carriages as Trains__carriages
 use        Trains__carriages__rep as Trains__carriages__rep
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system

 val removingcarriage 
   (__void_param : unit) : unit
  requires {  ( ( [@GP_Pretty_Ada:4035] ((Trains__carriages__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages) > (0 : int)) ) /\ ( [@GP_Pretty_Ada:4043] ((Trains__carriages__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages) < (10 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:44316] ((Trains__carriages__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages) = ((Trains__carriages__rep.to_rep (old { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages )) - (1 : int))) ) /\ (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True True True True) ) }
  reads {Trains__train.train__split_fields, Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}
  writes {Trains__train.train__split_fields, Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}

end

(* Module for declaring a program function (and possibly an axiom) for "increasecoolant" defined at trains.ads:76, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__increasecoolant___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__watersupply as Trains__watersupply
 use        Trains__watersupply__rep as Trains__watersupply__rep
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system

 val increasecoolant 
   (__void_param : unit) : unit
  requires {  ( ( [@GP_Pretty_Ada:4091] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) > (1 : int)) ) /\ ( [@GP_Pretty_Ada:4101] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) < (10 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:44391] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) = ((Trains__watersupply__rep.to_rep (old { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater )) + (1 : int))) ) /\ (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True True True True) ) }
  reads {Trains__train.train__split_fields, Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}
  writes {Trains__train.train__split_fields, Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}

end

(* Module for declaring a program function (and possibly an axiom) for "decreasecoolant" defined at trains.ads:81, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__decreasecoolant___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__watersupply as Trains__watersupply
 use        Trains__watersupply__rep as Trains__watersupply__rep
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system

 val decreasecoolant 
   (__void_param : unit) : unit
  requires {  ( ( [@GP_Pretty_Ada:4153] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) > (1 : int)) ) /\ ( [@GP_Pretty_Ada:4163] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) < (10 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:44466] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) = ((Trains__watersupply__rep.to_rep (old { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater )) - (1 : int))) ) /\ (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True True True True) ) }
  reads {Trains__train.train__split_fields, Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}
  writes {Trains__train.train__split_fields, Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}

end

(* Module for declaring a program function (and possibly an axiom) for "increasetemp" defined at trains.ads:86, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__increasetemp___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__temp as Trains__temp
 use        Trains__temp__rep as Trains__temp__rep
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system

 val increasetemp 
   (__void_param : unit) : unit
  requires {  ( ( ( [@GP_Pretty_Ada:4215] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) > (0 : int)) ) /\ ( [@GP_Pretty_Ada:4225] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) < (100 : int)) ) ) /\ ( [@GP_Pretty_Ada:4235] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) < (91 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:44549] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) = ((Trains__temp__rep.to_rep (old { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp )) + (10 : int))) ) /\ (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True True True True) ) }
  reads {Trains__train.train__split_fields, Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}
  writes {Trains__train.train__split_fields, Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}

end

(* Module for declaring a program function (and possibly an axiom) for "warninglight" defined at trains.ads:92, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__warninglight___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep
 use        Trains__lights as Trains__lights
 use        Trains__lights__rep as Trains__lights__rep

 val warninglight 
   (__void_param : unit) : unit
  requires {  ( [@GP_Pretty_Ada:44587] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (0 : int)) ) }
  ensures {  ( ( [@GP_Pretty_Ada:44617] ( ( ((Trains__lights__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate) = (0 : int)) \/ ((Trains__lights__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate) = (1 : int)) ) \/ ((Trains__lights__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate) = (2 : int)) ) ) /\ (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True True True True) ) }
  reads {Trains__train.train__split_fields}
  writes {Trains__train.train__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "emergencystop" defined at trains.ads:98, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__emergencystop___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__reactoremer as Trains__reactoremer
 use        Trains__temp as Trains__temp
 use        Trains__temp__rep as Trains__temp__rep
 use        Trains__controlrods as Trains__controlrods
 use        Trains__controlrods__rep as Trains__controlrods__rep
 use        Trains__watersupply as Trains__watersupply
 use        Trains__watersupply__rep as Trains__watersupply__rep
 use        Trains__powersupply as Trains__powersupply
 use        Trains__powersupply__rep as Trains__powersupply__rep
 use        Trains__velocity as Trains__velocity
 use        Trains__velocity__rep as Trains__velocity__rep
 use        Trains__lights as Trains__lights
 use        Trains__lights__rep as Trains__lights__rep

 val emergencystop 
   (__void_param : unit) : unit
  requires {  ( ( [@GP_Pretty_Ada:4332] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) >= (95 : int)) ) /\ ( [@GP_Pretty_Ada:4340] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) < (100 : int)) ) ) }
  ensures {  ( ( ( ( ( ( ( [@GP_Pretty_Ada:4352] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) = (0 : int)) ) /\ ( [@GP_Pretty_Ada:4360] ((Trains__lights__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4368] ((Trains__powersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4376] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) = (5 : int)) ) ) /\ ( [@GP_Pretty_Ada:4384] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) = (10 : int)) ) ) /\ ( [@GP_Pretty_Ada:4390] ((Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed) = (0 : int)) ) ) /\ (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True True True True) ) }
  reads {Trains__train.train__split_fields, Trains__reactoremer.reactoremer}
  writes {Trains__reactoremer.reactoremer, Trains__train.train__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "manualshutdown" defined at trains.ads:105, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__manualshutdown___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__reactorshutdown as Trains__reactorshutdown
 use        Trains__reactorneedscontrol as Trains__reactorneedscontrol
 use        Trains__reactorneedscoolant as Trains__reactorneedscoolant
 use        Trains__trainstart2 as Trains__trainstart2
 use        Trains__temp as Trains__temp
 use        Trains__temp__rep as Trains__temp__rep
 use        Trains__controlrods as Trains__controlrods
 use        Trains__controlrods__rep as Trains__controlrods__rep
 use        Trains__watersupply as Trains__watersupply
 use        Trains__watersupply__rep as Trains__watersupply__rep
 use        Trains__powersupply as Trains__powersupply
 use        Trains__powersupply__rep as Trains__powersupply__rep
 use        Trains__velocity as Trains__velocity
 use        Trains__velocity__rep as Trains__velocity__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep
 use        Trains__lights as Trains__lights
 use        Trains__lights__rep as Trains__lights__rep

 val manualshutdown 
   (__void_param : unit) : unit
  requires {  ( ( [@GP_Pretty_Ada:4421] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) >= (3 : int)) ) /\ ( [@GP_Pretty_Ada:4429] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) >= (2 : int)) ) ) }
  ensures {  ( ( ( ( ( ( [@GP_Pretty_Ada:4439] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (1 : int)) ) /\ ( [@GP_Pretty_Ada:4447] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4455] ((Trains__lights__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4463] ((Trains__powersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4469] ((Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed) = (0 : int)) ) ) /\ (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True True True True) ) }
  reads {Trains__train.train__split_fields, Trains__reactorshutdown.reactorshutdown, Trains__reactorneedscontrol.reactorneedscontrol, Trains__trainstart2.trainstart2, Trains__reactorneedscoolant.reactorneedscoolant}
  writes {Trains__train.train__split_fields, Trains__reactorshutdown.reactorshutdown, Trains__reactorneedscontrol.reactorneedscontrol, Trains__trainstart2.trainstart2, Trains__reactorneedscoolant.reactorneedscoolant}

end

(* Module for declaring a program function (and possibly an axiom) for "startupthereactor" defined at trains.ads:112, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__startupthereactor___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__controlrods as Trains__controlrods
 use        Trains__controlrods__rep as Trains__controlrods__rep
 use        Trains__watersupply as Trains__watersupply
 use        Trains__watersupply__rep as Trains__watersupply__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep

 val startupthereactor 
   (__void_param : unit) : unit
  requires {  ( ( ( [@GP_Pretty_Ada:4495] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (1 : int)) ) /\ ( [@GP_Pretty_Ada:4503] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) = (3 : int)) ) ) /\ ( [@GP_Pretty_Ada:4511] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) = (2 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:44881] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (0 : int)) ) /\ (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True True True True) ) }
  reads {Trains__train.train__split_fields}
  writes {Trains__train.train__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "trainstart" defined at trains.ads:118, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__trainstart___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__trainstart1 as Trains__trainstart1
 use        Trains__trainstart2 as Trains__trainstart2
 use        Trains__trainneedsreactor as Trains__trainneedsreactor
 use        Trains__velocity as Trains__velocity
 use        Trains__velocity__rep as Trains__velocity__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep

 val trainstart 
   (__void_param : unit) : unit
  requires {  ( ( [@GP_Pretty_Ada:4551] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (0 : int)) ) /\ ( [@GP_Pretty_Ada:4557] ((Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed) = (0 : int)) ) ) }
  ensures {  ( ( [@GP_Pretty_Ada:44946] ((Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed) = ((Trains__velocity__rep.to_rep (old { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed )) + (10 : int))) ) /\ (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True True True True) ) }
  reads {Trains__trainneedsreactor.trainneedsreactor, Trains__train.train__split_fields, Trains__trainstart1.trainstart1, Trains__trainstart2.trainstart2}
  writes {Trains__trainneedsreactor.trainneedsreactor, Trains__train.train__split_fields, Trains__trainstart1.trainstart1, Trains__trainstart2.trainstart2}

end

(* Module for declaring a program function (and possibly an axiom) for "calculatepower" defined at trains.ads:123, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__calculatepower___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__powersupply as Trains__powersupply
 use        Trains__powersupply__rep as Trains__powersupply__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep

 val calculatepower 
   (__void_param : unit) : unit
  requires {  ( ( ( [@GP_Pretty_Ada:4597] ((Trains__powersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower) > (0 : int)) ) /\ ( [@GP_Pretty_Ada:4607] ((Trains__powersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower) < (10 : int)) ) ) /\ ( [@GP_Pretty_Ada:4617] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (0 : int)) ) ) }
  ensures {  ( ( ( [@GP_Pretty_Ada:4627] ((Trains__powersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower) >= (0 : int)) ) /\ ( [@GP_Pretty_Ada:4637] ((Trains__powersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower) <= (10 : int)) ) ) /\ (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True True True True) ) }
  reads {Trains__train.train__split_fields}
  writes {Trains__train.train__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "calculatespeed" defined at trains.ads:130, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__calculatespeed___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__trainstart2 as Trains__trainstart2
 use        Trains__velocity as Trains__velocity
 use        Trains__velocity__rep as Trains__velocity__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep

 val calculatespeed 
   (__void_param : unit) : unit
  requires {  ( ( ( [@GP_Pretty_Ada:4666] ((Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed) > (0 : int)) ) /\ ( [@GP_Pretty_Ada:4674] ((Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed) < (100 : int)) ) ) /\ ( [@GP_Pretty_Ada:4684] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (0 : int)) ) ) }
  ensures {  ( ( ( [@GP_Pretty_Ada:4692] ((Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed) >= (0 : int)) ) /\ ( [@GP_Pretty_Ada:4700] ((Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed) <= (100 : int)) ) ) /\ (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True True True True) ) }
  reads {Trains__train.train__split_fields, Trains__trainstart2.trainstart2}
  writes {Trains__train.train__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "calculatetemperature" defined at trains.ads:137, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__calculatetemperature___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__temp as Trains__temp
 use        Trains__temp__rep as Trains__temp__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep

 val calculatetemperature 
   (__void_param : unit) : unit
  requires {  ( ( ( [@GP_Pretty_Ada:4728] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) > (0 : int)) ) /\ ( [@GP_Pretty_Ada:4738] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) < (100 : int)) ) ) /\ ( [@GP_Pretty_Ada:4748] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (0 : int)) ) ) }
  ensures {  ( ( ( [@GP_Pretty_Ada:4758] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) >= (0 : int)) ) /\ ( [@GP_Pretty_Ada:4768] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) <= (100 : int)) ) ) /\ (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True True True True) ) }
  reads {Trains__train.train__split_fields}
  writes {Trains__train.train__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "displayall" defined at trains.ads:143, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__displayall___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        Trains__train as Trains__train
 use        Trains__reactorshutdown as Trains__reactorshutdown
 use        Trains__reactorneedscontrol as Trains__reactorneedscontrol
 use        Trains__reactorneedscoolant as Trains__reactorneedscoolant
 use        Trains__reactoremer as Trains__reactoremer
 use        Trains__reactormaintenance as Trains__reactormaintenance
 use        Trains__reactornotoff as Trains__reactornotoff
 use        Trains__trainstart1 as Trains__trainstart1
 use        Trains__trainneedsreactor as Trains__trainneedsreactor
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__real_time__clock_time as Ada__real_time__clock_time

 val displayall 
   (__void_param : unit) : unit
  requires {  true }
  ensures {  true }
  reads {Trains__trainneedsreactor.trainneedsreactor, Trains__train.train__split_fields, Trains__reactoremer.reactoremer, Trains__reactormaintenance.reactormaintenance, Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Trains__reactornotoff.reactornotoff, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Trains__reactorshutdown.reactorshutdown, Trains__trainstart1.trainstart1, Trains__reactorneedscontrol.reactorneedscontrol, Trains__reactorneedscoolant.reactorneedscoolant, Ada__text_io__file_system.file_system, Ada__real_time__clock_time.clock_time}
  writes {Trains__trainneedsreactor.trainneedsreactor, Trains__reactoremer.reactoremer, Trains__reactormaintenance.reactormaintenance, Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Trains__reactornotoff.reactornotoff, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Trains__reactorshutdown.reactorshutdown, Trains__trainstart1.trainstart1, Trains__reactorneedscontrol.reactorneedscontrol, Trains__reactorneedscoolant.reactorneedscoolant, Ada__text_io__file_system.file_system}

end

(* Module for declaring a program function (and possibly an axiom) for "restart" defined at trains.ads:148, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__restart___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__controlrods as Trains__controlrods
 use        Trains__controlrods__rep as Trains__controlrods__rep
 use        Trains__watersupply as Trains__watersupply
 use        Trains__watersupply__rep as Trains__watersupply__rep

 val restart 
   (__void_param : unit) : unit
  requires {  true }
  ensures {  ( ( ( [@GP_Pretty_Ada:4835] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) = (3 : int)) ) /\ ( [@GP_Pretty_Ada:4843] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) = (2 : int)) ) ) /\ (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True True True True) ) }
  reads {Trains__train.train__split_fields}
  writes {Trains__train.train__split_fields}

end

(* Module for declaring a program function (and possibly an axiom) for "maintenance" defined at trains.ads:152, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Trains__maintenance___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__reactormaintenance as Trains__reactormaintenance
 use        Trains__reactornotoff as Trains__reactornotoff
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep

 val maintenance 
   (__void_param : unit) : unit
  requires {  ( [@GP_Pretty_Ada:45295] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (1 : int)) ) }
  ensures {  true }
  reads {Trains__train.train__split_fields, Trains__reactormaintenance.reactormaintenance, Trains__reactornotoff.reactornotoff}
  writes {Trains__reactormaintenance.reactormaintenance, Trains__reactornotoff.reactornotoff}

end

(* Module for declaring a program function (and possibly an axiom) for "put_line__2" defined at a-textio.ads:508, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put_line__2___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        Standard__string as Standard__string
 use        Ada__text_io__line_length__2 as Ada__text_io__line_length__2
 use        Ada__text_io__page_length__2 as Ada__text_io__page_length__2
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system

 val put_line__2 
   (item : Standard__string.string) : unit
  requires {  true }
  ensures {  ( ( [@GP_Pretty_Ada:8242] ((old (Ada__text_io__line_length__2.line_length__2 Ada__text_io__standard_in.standard_in.Main.__private__content Ada__text_io__standard_out.standard_out.Main.__private__content Ada__text_io__standard_err.standard_err.Main.__private__content Ada__text_io__current_in.current_in.Main.__private__content Ada__text_io__current_out.current_out.Main.__private__content Ada__text_io__current_err.current_err.Main.__private__content Ada__text_io__file_system.file_system.Main.__private__content) ) = (Ada__text_io__line_length__2.line_length__2 Ada__text_io__standard_in.standard_in.Main.__private__content Ada__text_io__standard_out.standard_out.Main.__private__content Ada__text_io__standard_err.standard_err.Main.__private__content Ada__text_io__current_in.current_in.Main.__private__content Ada__text_io__current_out.current_out.Main.__private__content Ada__text_io__current_err.current_err.Main.__private__content Ada__text_io__file_system.file_system.Main.__private__content)) ) /\ ( [@GP_Pretty_Ada:8248] ((old (Ada__text_io__page_length__2.page_length__2 Ada__text_io__standard_in.standard_in.Main.__private__content Ada__text_io__standard_out.standard_out.Main.__private__content Ada__text_io__standard_err.standard_err.Main.__private__content Ada__text_io__current_in.current_in.Main.__private__content Ada__text_io__current_out.current_out.Main.__private__content Ada__text_io__current_err.current_err.Main.__private__content Ada__text_io__file_system.file_system.Main.__private__content) ) = (Ada__text_io__page_length__2.page_length__2 Ada__text_io__standard_in.standard_in.Main.__private__content Ada__text_io__standard_out.standard_out.Main.__private__content Ada__text_io__standard_err.standard_err.Main.__private__content Ada__text_io__current_in.current_in.Main.__private__content Ada__text_io__current_out.current_out.Main.__private__content Ada__text_io__current_err.current_err.Main.__private__content Ada__text_io__file_system.file_system.Main.__private__content)) ) ) }
  reads {Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}
  writes {Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}

end

(* Module for declaring a program function (and possibly an axiom) for "put__4" defined at a-textio.ads:465, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Ada__text_io__put__4___axiom
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        Standard__string as Standard__string
 use        Ada__text_io__line_length__2 as Ada__text_io__line_length__2
 use        Ada__text_io__page_length__2 as Ada__text_io__page_length__2
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system

 val put__4 
   (item : Standard__string.string) : unit
  requires {  true }
  ensures {  ( ( [@GP_Pretty_Ada:7930] ((old (Ada__text_io__line_length__2.line_length__2 Ada__text_io__standard_in.standard_in.Main.__private__content Ada__text_io__standard_out.standard_out.Main.__private__content Ada__text_io__standard_err.standard_err.Main.__private__content Ada__text_io__current_in.current_in.Main.__private__content Ada__text_io__current_out.current_out.Main.__private__content Ada__text_io__current_err.current_err.Main.__private__content Ada__text_io__file_system.file_system.Main.__private__content) ) = (Ada__text_io__line_length__2.line_length__2 Ada__text_io__standard_in.standard_in.Main.__private__content Ada__text_io__standard_out.standard_out.Main.__private__content Ada__text_io__standard_err.standard_err.Main.__private__content Ada__text_io__current_in.current_in.Main.__private__content Ada__text_io__current_out.current_out.Main.__private__content Ada__text_io__current_err.current_err.Main.__private__content Ada__text_io__file_system.file_system.Main.__private__content)) ) /\ ( [@GP_Pretty_Ada:7936] ((old (Ada__text_io__page_length__2.page_length__2 Ada__text_io__standard_in.standard_in.Main.__private__content Ada__text_io__standard_out.standard_out.Main.__private__content Ada__text_io__standard_err.standard_err.Main.__private__content Ada__text_io__current_in.current_in.Main.__private__content Ada__text_io__current_out.current_out.Main.__private__content Ada__text_io__current_err.current_err.Main.__private__content Ada__text_io__file_system.file_system.Main.__private__content) ) = (Ada__text_io__page_length__2.page_length__2 Ada__text_io__standard_in.standard_in.Main.__private__content Ada__text_io__standard_out.standard_out.Main.__private__content Ada__text_io__standard_err.standard_err.Main.__private__content Ada__text_io__current_in.current_in.Main.__private__content Ada__text_io__current_out.current_out.Main.__private__content Ada__text_io__current_err.current_err.Main.__private__content Ada__text_io__file_system.file_system.Main.__private__content)) ) ) }
  reads {Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}
  writes {Ada__text_io__standard_in.standard_in, Ada__text_io__standard_out.standard_out, Ada__text_io__standard_err.standard_err, Ada__text_io__current_in.current_in, Ada__text_io__current_out.current_out, Ada__text_io__current_err.current_err, Ada__text_io__file_system.file_system}

end

(* Module for checking absence of run-time errors and package initial condition on package elaboration of "trains" defined at trains.ads:4, created in Gnat2Why.Subprograms.Generate_VCs_For_Package_Elaboration *)
module Trains__package_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Ada__text_io__line_length__2 as Ada__text_io__line_length__2
 use        Ada__text_io__page_length__2 as Ada__text_io__page_length__2
 use        Trains__reactor as Trains__reactor
 use        Trains__reactors as Trains__reactors
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__reactorshutdown as Trains__reactorshutdown
 use        Trains__reactorneedscontrol as Trains__reactorneedscontrol
 use        Trains__reactorneedscoolant as Trains__reactorneedscoolant
 use        Trains__reactoremer as Trains__reactoremer
 use        Trains__reactormaintenance as Trains__reactormaintenance
 use        Trains__reactornotoff as Trains__reactornotoff
 use        Trains__trainstart1 as Trains__trainstart1
 use        Trains__trainstart2 as Trains__trainstart2
 use        Trains__trainneedsreactor as Trains__trainneedsreactor
 use        Trains__temp as Trains__temp
 use        Trains__controlrods as Trains__controlrods
 use        Trains__watersupply as Trains__watersupply
 use        Trains__powersupply as Trains__powersupply
 use        Trains__carriages as Trains__carriages
 use        Trains__velocity as Trains__velocity
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep
 use        Trains__lights as Trains__lights
 use        Trains__lights__rep as Trains__lights__rep
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Ada__text_io__standard_in as Ada__text_io__standard_in
 use        Ada__text_io__standard_out as Ada__text_io__standard_out
 use        Ada__text_io__standard_err as Ada__text_io__standard_err
 use        Ada__text_io__current_in as Ada__text_io__current_in
 use        Ada__text_io__current_out as Ada__text_io__current_out
 use        Ada__text_io__current_err as Ada__text_io__current_err
 use        Ada__text_io__file_system as Ada__text_io__file_system
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__reactor___axiom as Trains__reactor___axiom
 use        Trains__train___axiom as Trains__train___axiom
 use        Trains__reactorshutdown___axiom as Trains__reactorshutdown___axiom
 use        Trains__reactorneedscontrol___axiom as Trains__reactorneedscontrol___axiom
 use        Trains__reactorneedscoolant___axiom as Trains__reactorneedscoolant___axiom
 use        Trains__reactoremer___axiom as Trains__reactoremer___axiom
 use        Trains__reactormaintenance___axiom as Trains__reactormaintenance___axiom
 use        Trains__reactornotoff___axiom as Trains__reactornotoff___axiom
 use        Trains__trainstart1___axiom as Trains__trainstart1___axiom
 use        Trains__trainstart2___axiom as Trains__trainstart2___axiom
 use        Trains__trainneedsreactor___axiom as Trains__trainneedsreactor___axiom
 use        Ada__text_io__count___axiom as Ada__text_io__count___axiom
 use        Ada__text_io__line_length__2___axiom as Ada__text_io__line_length__2___axiom
 use        Ada__text_io__page_length__2___axiom as Ada__text_io__page_length__2___axiom

 let def [#"trains.ads" 4 0 0][@GP_Subp:trains.ads:4] 
   (__void_param : unit)
  requires { [#"trains.ads" 4 0 0] true }
   = [@vc:divergent]
  ( [#"trains.ads" 4 0 0] assume { [#"trains.ads" 4 0 0] ( ((Ada__text_io__line_length__2.line_length__2 Ada__text_io__standard_in.standard_in.Main.__private__content Ada__text_io__standard_out.standard_out.Main.__private__content Ada__text_io__standard_err.standard_err.Main.__private__content Ada__text_io__current_in.current_in.Main.__private__content Ada__text_io__current_out.current_out.Main.__private__content Ada__text_io__current_err.current_err.Main.__private__content Ada__text_io__file_system.file_system.Main.__private__content) = (0 : int)) /\ ((Ada__text_io__page_length__2.page_length__2 Ada__text_io__standard_in.standard_in.Main.__private__content Ada__text_io__standard_out.standard_out.Main.__private__content Ada__text_io__standard_err.standard_err.Main.__private__content Ada__text_io__current_in.current_in.Main.__private__content Ada__text_io__current_out.current_out.Main.__private__content Ada__text_io__current_err.current_err.Main.__private__content Ada__text_io__file_system.file_system.Main.__private__content) = (0 : int)) ) };
  ();
  ([#"trains.ads" 4 0 0] ());
  ([#"trains.ads" 7 0 0] ());
  ([#"trains.ads" 8 0 0] ());
  ([#"trains.ads" 9 0 0] ());
  ([#"trains.ads" 10 0 0] ());
  ([#"trains.ads" 11 0 0] ());
  ([#"trains.ads" 12 0 0] ());
  ([#"trains.ads" 13 0 0] ());
  ([#"trains.ads" 14 0 0] ());
  ([#"trains.ads" 17 0 0] ());
  ([#"trains.ads" 26 0 0] ());
  ([#"trains.ads" 33 0 0] ());
  ([#"trains.ads" 33 0 0] ());
  ([#"trains.ads" 33 0 0] ());
  ([#"trains.ads" 33 0 0] ());
  ([#"trains.ads" 33 0 0] ());
  ([#"trains.ads" 33 0 0] ());
  ([#"trains.ads" 33 0 0] ());
  ([#"trains.ads" 33 0 0] ());
  ([#"trains.ads" 33 0 0] ());
  ([#"trains.ads" 33 0 0] ());
  ([#"trains.ads" 33 0 0] ());
  ([#"trains.ads" 33 0 0] ( (let trains__reactor__assume = { Trains__reactors.__split_fields = { Trains__reactors.rec__trains__reactors__lightstate = (Trains__lights__rep.of_rep((0 : int))); Trains__reactors.rec__trains__reactors__currenttemp = ( 0 : Trains__temp.temp ); Trains__reactors.rec__trains__reactors__nocontrolrods = ( 3 : Trains__controlrods.controlrods ); Trains__reactors.rec__trains__reactors__amountofwater = ( 2 : Trains__watersupply.watersupply ); Trains__reactors.rec__trains__reactors__currentreactorstate = (Trains__reactorstate__rep.of_rep((1 : int))); Trains__reactors.rec__trains__reactors__amountofpower = ( 0 : Trains__powersupply.powersupply ) } } in (
   [#"trains.ads" 33 0 0] (Trains__reactor.reactor__split_fields.Trains__reactors.__split_fields__content <- ( trains__reactor__assume.Trains__reactors.__split_fields ))))
  ;
  [#"trains.ads" 33 0 0] assume { [#"trains.ads" 33 0 0] (Trains__reactors___axiom.dynamic_invariant { Trains__reactors.__split_fields = Trains__reactor.reactor__split_fields.Trains__reactors.__split_fields__content } True False True True) } ));
  ([#"trains.ads" 41 0 0] ());
  ([#"trains.ads" 41 0 0] ());
  ([#"trains.ads" 41 0 0] ());
  ([#"trains.ads" 41 0 0] ());
  ([#"trains.ads" 41 0 0] ());
  ([#"trains.ads" 41 0 0] ());
  ([#"trains.ads" 41 0 0] ( (let trains__train__assume = { Trains__trains.__split_fields = { Trains__trains.rec__trains__trains__nocarriages = ( 0 : Trains__carriages.carriages ); Trains__trains.rec__trains__trains__currentspeed = ( 0 : Trains__velocity.velocity ); Trains__trains.rec__trains__trains__trainreactors = { Trains__reactors.__split_fields = Trains__reactor.reactor__split_fields.Trains__reactors.__split_fields__content } } } in (
   [#"trains.ads" 41 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( trains__train__assume.Trains__trains.__split_fields ))))
  ;
  [#"trains.ads" 41 0 0] assume { [#"trains.ads" 41 0 0] (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) } ));
  ([#"trains.ads" 46 0 0] [#"trains.ads" 46 0 0] (Trains__reactorshutdown.reactorshutdown.bool__content <- ( (Boolean.of_int((0 : int))) )));
  ([#"trains.ads" 47 0 0] [#"trains.ads" 47 0 0] (Trains__reactorneedscontrol.reactorneedscontrol.bool__content <- ( (Boolean.of_int((0 : int))) )));
  ([#"trains.ads" 48 0 0] [#"trains.ads" 48 0 0] (Trains__reactorneedscoolant.reactorneedscoolant.bool__content <- ( (Boolean.of_int((0 : int))) )));
  ([#"trains.ads" 49 0 0] [#"trains.ads" 49 0 0] (Trains__reactoremer.reactoremer.bool__content <- ( (Boolean.of_int((0 : int))) )));
  ([#"trains.ads" 50 0 0] [#"trains.ads" 50 0 0] (Trains__reactormaintenance.reactormaintenance.bool__content <- ( (Boolean.of_int((0 : int))) )));
  ([#"trains.ads" 51 0 0] [#"trains.ads" 51 0 0] (Trains__reactornotoff.reactornotoff.bool__content <- ( (Boolean.of_int((0 : int))) )));
  ([#"trains.ads" 52 0 0] [#"trains.ads" 52 0 0] (Trains__trainstart1.trainstart1.bool__content <- ( (Boolean.of_int((0 : int))) )));
  ([#"trains.ads" 53 0 0] [#"trains.ads" 53 0 0] (Trains__trainstart2.trainstart2.bool__content <- ( (Boolean.of_int((0 : int))) )));
  ([#"trains.ads" 54 0 0] [#"trains.ads" 54 0 0] (Trains__trainneedsreactor.trainneedsreactor.bool__content <- ( (Boolean.of_int((0 : int))) )));
  ([#"trains.ads" 56 0 0] ());
  ([#"trains.ads" 59 0 0] ());
  ([#"trains.ads" 58 0 0] ());
  ([#"trains.ads" 57 0 0] ());
  ([#"trains.ads" 61 0 0] ());
  ([#"trains.ads" 64 0 0] ());
  ([#"trains.ads" 63 0 0] ());
  ([#"trains.ads" 62 0 0] ());
  ([#"trains.ads" 66 0 0] ());
  ([#"trains.ads" 69 0 0] ());
  ([#"trains.ads" 68 0 0] ());
  ([#"trains.ads" 67 0 0] ());
  ([#"trains.ads" 71 0 0] ());
  ([#"trains.ads" 74 0 0] ());
  ([#"trains.ads" 73 0 0] ());
  ([#"trains.ads" 72 0 0] ());
  ([#"trains.ads" 76 0 0] ());
  ([#"trains.ads" 79 0 0] ());
  ([#"trains.ads" 78 0 0] ());
  ([#"trains.ads" 77 0 0] ());
  ([#"trains.ads" 81 0 0] ());
  ([#"trains.ads" 84 0 0] ());
  ([#"trains.ads" 83 0 0] ());
  ([#"trains.ads" 82 0 0] ());
  ([#"trains.ads" 86 0 0] ());
  ([#"trains.ads" 90 0 0] ());
  ([#"trains.ads" 88 0 0] ());
  ([#"trains.ads" 87 0 0] ());
  ([#"trains.ads" 92 0 0] ());
  ([#"trains.ads" 95 0 0] ());
  ([#"trains.ads" 94 0 0] ());
  ([#"trains.ads" 93 0 0] ());
  ([#"trains.ads" 98 0 0] ());
  ([#"trains.ads" 101 0 0] ());
  ([#"trains.ads" 100 0 0] ());
  ([#"trains.ads" 99 0 0] ());
  ([#"trains.ads" 105 0 0] ());
  ([#"trains.ads" 108 0 0] ());
  ([#"trains.ads" 107 0 0] ());
  ([#"trains.ads" 106 0 0] ());
  ([#"trains.ads" 112 0 0] ());
  ([#"trains.ads" 116 0 0] ());
  ([#"trains.ads" 114 0 0] ());
  ([#"trains.ads" 113 0 0] ());
  ([#"trains.ads" 118 0 0] ());
  ([#"trains.ads" 121 0 0] ());
  ([#"trains.ads" 120 0 0] ());
  ([#"trains.ads" 119 0 0] ());
  ([#"trains.ads" 123 0 0] ());
  ([#"trains.ads" 127 0 0] ());
  ([#"trains.ads" 125 0 0] ());
  ([#"trains.ads" 124 0 0] ());
  ([#"trains.ads" 130 0 0] ());
  ([#"trains.ads" 135 0 0] ());
  ([#"trains.ads" 133 0 0] ());
  ([#"trains.ads" 131 0 0] ());
  ([#"trains.ads" 137 0 0] ());
  ([#"trains.ads" 141 0 0] ());
  ([#"trains.ads" 139 0 0] ());
  ([#"trains.ads" 138 0 0] ());
  ([#"trains.ads" 143 0 0] ());
  ([#"trains.ads" 144 0 0] ());
  ([#"trains.ads" 148 0 0] ());
  ([#"trains.ads" 150 0 0] ());
  ([#"trains.ads" 149 0 0] ());
  ([#"trains.ads" 152 0 0] ());
  ([#"trains.ads" 155 0 0] ());
  ([#"trains.ads" 153 0 0] ());
   assume {  ( ((Ada__text_io__line_length__2.line_length__2 Ada__text_io__standard_in.standard_in.Main.__private__content Ada__text_io__standard_out.standard_out.Main.__private__content Ada__text_io__standard_err.standard_err.Main.__private__content Ada__text_io__current_in.current_in.Main.__private__content Ada__text_io__current_out.current_out.Main.__private__content Ada__text_io__current_err.current_err.Main.__private__content Ada__text_io__file_system.file_system.Main.__private__content) = (0 : int)) /\ ((Ada__text_io__page_length__2.page_length__2 Ada__text_io__standard_in.standard_in.Main.__private__content Ada__text_io__standard_out.standard_out.Main.__private__content Ada__text_io__standard_err.standard_err.Main.__private__content Ada__text_io__current_in.current_in.Main.__private__content Ada__text_io__current_out.current_out.Main.__private__content Ada__text_io__current_err.current_err.Main.__private__content Ada__text_io__file_system.file_system.Main.__private__content) = (0 : int)) ) };
  ();
  ([#"trains.adb" 4 0 0] ());
  ([#"trains.adb" 7 0 0] ());
  ([#"trains.adb" 15 0 0] ());
  ([#"trains.adb" 24 0 0] ());
  ([#"trains.adb" 32 0 0] ());
  ([#"trains.adb" 40 0 0] ());
  ([#"trains.adb" 49 0 0] ());
  ([#"trains.adb" 57 0 0] ());
  ([#"trains.adb" 67 0 0] ());
  ([#"trains.adb" 78 0 0] ());
  ([#"trains.adb" 91 0 0] ());
  ([#"trains.adb" 111 0 0] ());
  ([#"trains.adb" 119 0 0] ());
  ([#"trains.adb" 132 0 0] ());
  ([#"trains.adb" 141 0 0] ());
  ([#"trains.adb" 160 0 0] ());
  ([#"trains.adb" 172 0 0] ());
  ([#"trains.adb" 178 0 0] ());
  ([#"trains.adb" 187 0 0] ());
  ();
  ( [@GP_Sloc:trains.adb:251:1] ([#"trains.adb" 251 0 0] ()) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "addcontrolrod" defined at trains.ads:56, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__addcontrolrod__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Integer as Integer
 use        "_gnatprove_standard".Boolean as Boolean
 use        Standard_String__Img as Standard_String__Img
 use        Standard__positive as Standard__positive
 use        Array__Int__Standard__character__Concat as Array__Int__Standard__character__Concat
 use        Standard__string as Standard__string
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Ada__text_io__put_line__2___axiom as Ada__text_io__put_line__2___axiom
 use        Trains__controlrods as Trains__controlrods
 use        Trains__controlrods__rep as Trains__controlrods__rep
 use        Temp___String_Literal_253 as Temp___String_Literal_253
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Standard__positive___axiom as Standard__positive___axiom
 use        Standard__character___axiom as Standard__character___axiom
 use        Standard__string___axiom as Standard__string___axiom
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom
 use        Ada__text_io__count___axiom as Ada__text_io__count___axiom
 use        Ada__text_io__line_length__2___axiom as Ada__text_io__line_length__2___axiom
 use        Ada__text_io__page_length__2___axiom as Ada__text_io__page_length__2___axiom
 use        Ada__text_io__put_line__2___axiom as Ada__text_io__put_line__2___axiom

 let def [#"trains.ads" 56 0 0][@GP_Subp:trains.ads:56] 
   (__void_param : unit)
  requires { [#"trains.ads" 56 0 0] true }
  ensures { [#"trains.ads" 56 0 0] ([#"trains.ads" 59 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Shape:pragargs__cmp] [@comment:     Post => train.trainReactors.noControlRods = train.trainReactors.noControlRods'Old + 1;              ^ trains.ads:59:14:VC_POSTCONDITION] [@model_vc_post] [@GP_Id:2] [@GP_Sloc:trains.ads:59:14] ( [@GP_Pretty_Ada:44107] [@GP_Sloc:trains.ads:59:14] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) = ((Trains__controlrods__rep.to_rep (old { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods )) + (1 : int))) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:56 *)
  ;
   assume {  (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:56 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:56 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) > (1 : int))) (((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) < (5 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:56 *)
  ;
   assume {  ( ( [@GP_Pretty_Ada:3859] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) > (1 : int)) ) /\ ( [@GP_Pretty_Ada:3869] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) < (5 : int)) ) ) };
   begin ensures {true} let _ = (let _ = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods in (
   ()))
   in () end ;
  (let temp___old_256 [@mlw:proxy_symbol] [@introduced] =  (val _f : int
  ensures { (result = (Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods))} 
  in _f) in (
   (  try
    ( ();
    ( [@GP_Sloc:trains.adb:9:11] ([#"trains.adb" 9 0 0] ()) );
    ( [@GP_Sloc:trains.adb:9:7] ([#"trains.adb" 9 0 0] (if (( ([#"trains.adb" 9 0 0] [#"trains.adb" 9 0 0] (([@branch_id=2332] Main.spark__branch).bool__content <- ( ((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) < (5 : int)) )));
    ( [@branch_id=2332] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:trains.adb:10:13] ([#"trains.adb" 10 0 0] ()) );
     ( [@GP_Sloc:trains.adb:10:50] ([#"trains.adb" 10 0 0] ()) );
     ( [@GP_Sloc:trains.adb:10:47] ([#"trains.adb" 10 0 0] (let temp___252 [@mlw:proxy_symbol] [@introduced] = (let temp___251 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
      ( [#"trains.adb" 10 0 0] begin ensures {true} let _ = (let _ = temp___251.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
       ()))
       in () end ;
      { ( temp___251 ) with Trains__trains.__split_fields = { ( temp___251.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___250 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
       ( [#"trains.adb" 10 0 0] begin ensures {true} let _ = (let _ = temp___250.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods in (
        ()))
        in () end ;
       { ( temp___250 ) with Trains__reactors.__split_fields = { ( temp___250.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__nocontrolrods = (Trains__controlrods__rep.of_rep(([#"trains.adb" 10 0 0] ( [@GP_Shape:if__train_assign__add] [@GP_Sloc:trains.adb:10:84] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Id:0] [@comment:      then  Train.trainReactors.noControlRods := Train.trainReactors.noControlRods + 1;                                                                                    ^ trains.adb:10:84:VC_RANGE_CHECK] (Trains__controlrods.range_check_(((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) + (1 : int)))) )))) } } )))
       } } )))
      in (
       (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___252.Trains__trains.__split_fields ))))
     ) ) )) else (
     ()))) );
    ( [@GP_Sloc:trains.adb:12:7] ([#"trains.adb" 12 0 0] ()) );
    ( [@GP_Sloc:trains.adb:12:7] ([#"trains.adb" 12 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((let temp___255 [@mlw:proxy_symbol] [@introduced] = (Standard_String__Img.to_string((Trains__controlrods.attr__ATTRIBUTE_IMAGE((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods))))) ((5 : int))) in (
    (let temp___254 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_253.temp___String_Literal_253(())) in (
     (Standard__string.of_array((Array__Int__Standard__character__Concat.concat(temp___254) ((1 : int)) ((25 : int)) ((Standard__string.to_array(temp___255))) ((Standard__string.first(temp___255))) ((Standard__string.last(temp___255))))) ((1 : int)) (([#"trains.adb" 12 0 0] ( [@GP_Sloc:trains.adb:12:44] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Id:1] [@GP_Shape:call_put_line__2__concat] [@comment:      Put_Line("Number of Control Rods is" & Train.trainReactors.noControlRods'Image);                                            ^ trains.adb:12:44:VC_RANGE_CHECK] (Standard__positive.range_check_((((1 : int) + ((Integer.length((1 : int)) ((25 : int))) + (Integer.length((Standard__string.first(temp___255))) ((Standard__string.last(temp___255)))))) - (1 : int)))) ))))))
    ))
    )) )) );
     raise Return__exc )
   with
    Return__exc -> ()
   end;
    begin ensures {true} let _ = (let _ = ((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) = (temp___old_256 + (1 : int))) in (
    ()))
    in () end  )))
   )
end

(* Module for checking contracts and absence of run-time errors in subprogram "removingcontrolrod" defined at trains.ads:61, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__removingcontrolrod__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Integer as Integer
 use        "_gnatprove_standard".Boolean as Boolean
 use        Standard_String__Img as Standard_String__Img
 use        Standard__positive as Standard__positive
 use        Array__Int__Standard__character__Concat as Array__Int__Standard__character__Concat
 use        Standard__string as Standard__string
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Ada__text_io__put_line__2___axiom as Ada__text_io__put_line__2___axiom
 use        Trains__controlrods as Trains__controlrods
 use        Trains__controlrods__rep as Trains__controlrods__rep
 use        Temp___String_Literal_260 as Temp___String_Literal_260
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Standard__positive___axiom as Standard__positive___axiom
 use        Standard__character___axiom as Standard__character___axiom
 use        Standard__string___axiom as Standard__string___axiom
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom
 use        Ada__text_io__count___axiom as Ada__text_io__count___axiom
 use        Ada__text_io__line_length__2___axiom as Ada__text_io__line_length__2___axiom
 use        Ada__text_io__page_length__2___axiom as Ada__text_io__page_length__2___axiom
 use        Ada__text_io__put_line__2___axiom as Ada__text_io__put_line__2___axiom

 let def [#"trains.ads" 61 0 0][@GP_Subp:trains.ads:61] 
   (__void_param : unit)
  requires { [#"trains.ads" 61 0 0] true }
  ensures { [#"trains.ads" 61 0 0] ([#"trains.ads" 64 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Shape:pragargs__cmp] [@model_vc_post] [@comment:     Post => train.trainReactors.noControlRods = train.trainReactors.noControlRods'Old - 1;              ^ trains.ads:64:14:VC_POSTCONDITION] [@GP_Sloc:trains.ads:64:14] [@GP_Id:5] ( [@GP_Sloc:trains.ads:64:14] [@GP_Pretty_Ada:44182] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) = ((Trains__controlrods__rep.to_rep (old { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods )) - (1 : int))) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:61 *)
  ;
   assume {  (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:61 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:61 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) > (1 : int))) (((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) < (5 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:61 *)
  ;
   assume {  ( ( [@GP_Pretty_Ada:3921] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) > (1 : int)) ) /\ ( [@GP_Pretty_Ada:3931] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) < (5 : int)) ) ) };
   begin ensures {true} let _ = (let _ = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods in (
   ()))
   in () end ;
  (let temp___old_263 [@mlw:proxy_symbol] [@introduced] =  (val _f : int
  ensures { (result = (Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods))} 
  in _f) in (
   (  try
    ( ();
    ( [@GP_Sloc:trains.adb:17:11] ([#"trains.adb" 17 0 0] ()) );
    ( [@GP_Sloc:trains.adb:17:7] ([#"trains.adb" 17 0 0] (if (( ([#"trains.adb" 17 0 0] [#"trains.adb" 17 0 0] (([@branch_id=2375] Main.spark__branch).bool__content <- ( ((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) > (1 : int)) )));
    ( [@branch_id=2375] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:trains.adb:18:12] ([#"trains.adb" 18 0 0] ()) );
     ( [@GP_Sloc:trains.adb:18:49] ([#"trains.adb" 18 0 0] ()) );
     ( [@GP_Sloc:trains.adb:18:46] ([#"trains.adb" 18 0 0] (let temp___259 [@mlw:proxy_symbol] [@introduced] = (let temp___258 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
      ( [#"trains.adb" 18 0 0] begin ensures {true} let _ = (let _ = temp___258.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
       ()))
       in () end ;
      { ( temp___258 ) with Trains__trains.__split_fields = { ( temp___258.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___257 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
       ( [#"trains.adb" 18 0 0] begin ensures {true} let _ = (let _ = temp___257.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods in (
        ()))
        in () end ;
       { ( temp___257 ) with Trains__reactors.__split_fields = { ( temp___257.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__nocontrolrods = (Trains__controlrods__rep.of_rep(([#"trains.adb" 18 0 0] ( [@comment:      then Train.trainReactors.noControlRods := Train.trainReactors.noControlRods - 1;                                                                                   ^ trains.adb:18:83:VC_RANGE_CHECK] [@GP_Sloc:trains.adb:18:83] [@vc:annotation] [@GP_Shape:if__train_assign__sub] [@GP_Reason:VC_RANGE_CHECK] [@GP_Id:3] (Trains__controlrods.range_check_(((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) - (1 : int)))) )))) } } )))
       } } )))
      in (
       (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___259.Trains__trains.__split_fields ))))
     ) ) )) else (
     ()))) );
    ( [@GP_Sloc:trains.adb:20:7] ([#"trains.adb" 20 0 0] ()) );
    ( [@GP_Sloc:trains.adb:20:7] ([#"trains.adb" 20 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((let temp___262 [@mlw:proxy_symbol] [@introduced] = (Standard_String__Img.to_string((Trains__controlrods.attr__ATTRIBUTE_IMAGE((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods))))) ((5 : int))) in (
    (let temp___261 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_260.temp___String_Literal_260(())) in (
     (Standard__string.of_array((Array__Int__Standard__character__Concat.concat(temp___261) ((1 : int)) ((25 : int)) ((Standard__string.to_array(temp___262))) ((Standard__string.first(temp___262))) ((Standard__string.last(temp___262))))) ((1 : int)) (([#"trains.adb" 20 0 0] ( [@comment:      Put_Line("Number of Control Rods is" & Train.trainReactors.noControlRods'Image);                                            ^ trains.adb:20:44:VC_RANGE_CHECK] [@vc:annotation] [@GP_Sloc:trains.adb:20:44] [@GP_Reason:VC_RANGE_CHECK] [@GP_Id:4] [@GP_Shape:call_put_line__2__concat] (Standard__positive.range_check_((((1 : int) + ((Integer.length((1 : int)) ((25 : int))) + (Integer.length((Standard__string.first(temp___262))) ((Standard__string.last(temp___262)))))) - (1 : int)))) ))))))
    ))
    )) )) );
     raise Return__exc )
   with
    Return__exc -> ()
   end;
    begin ensures {true} let _ = (let _ = ((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) = (temp___old_263 - (1 : int))) in (
    ()))
    in () end  )))
   )
end

(* Module for checking contracts and absence of run-time errors in subprogram "addcarriage" defined at trains.ads:66, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__addcarriage__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Integer as Integer
 use        "_gnatprove_standard".Boolean as Boolean
 use        Standard_String__Img as Standard_String__Img
 use        Standard__positive as Standard__positive
 use        Array__Int__Standard__character__Concat as Array__Int__Standard__character__Concat
 use        Standard__string as Standard__string
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Ada__text_io__put_line__2___axiom as Ada__text_io__put_line__2___axiom
 use        Trains__carriages as Trains__carriages
 use        Trains__carriages__rep as Trains__carriages__rep
 use        Trains__velocity as Trains__velocity
 use        Trains__velocity__rep as Trains__velocity__rep
 use        Temp___String_Literal_266 as Temp___String_Literal_266
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Standard__positive___axiom as Standard__positive___axiom
 use        Standard__character___axiom as Standard__character___axiom
 use        Standard__string___axiom as Standard__string___axiom
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom
 use        Ada__text_io__count___axiom as Ada__text_io__count___axiom
 use        Ada__text_io__line_length__2___axiom as Ada__text_io__line_length__2___axiom
 use        Ada__text_io__page_length__2___axiom as Ada__text_io__page_length__2___axiom
 use        Ada__text_io__put_line__2___axiom as Ada__text_io__put_line__2___axiom

 let def [#"trains.ads" 66 0 0][@GP_Subp:trains.ads:66] 
   (__void_param : unit)
  requires { [#"trains.ads" 66 0 0] true }
  ensures { [#"trains.ads" 66 0 0] ([#"trains.ads" 69 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@comment:     Post => train.noCarriages <= train.noCarriages'OLd + 1;              ^ trains.ads:69:14:VC_POSTCONDITION] [@GP_Shape:pragargs__cmp] [@model_vc_post] [@GP_Sloc:trains.ads:69:14] [@GP_Id:8] ( [@GP_Pretty_Ada:44249] [@GP_Sloc:trains.ads:69:14] ((Trains__carriages__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages) <= ((Trains__carriages__rep.to_rep (old { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages )) + (1 : int))) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:66 *)
  ;
   assume {  (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:66 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:66 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Trains__carriages__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages)) > (0 : int))) (((Trains__carriages__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages)) < (10 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:66 *)
  ;
   assume {  ( ( [@GP_Pretty_Ada:3981] ((Trains__carriages__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages) > (0 : int)) ) /\ ( [@GP_Pretty_Ada:3989] ((Trains__carriages__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages) < (10 : int)) ) ) };
   begin ensures {true} let _ = (let _ = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages in (
   ()))
   in () end ;
  (let temp___old_269 [@mlw:proxy_symbol] [@introduced] =  (val _f : int
  ensures { (result = (Trains__carriages__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages))} 
  in _f) in (
   (  try
    ( ();
    ( [@GP_Sloc:trains.adb:26:11] ([#"trains.adb" 26 0 0] ()) );
    ( [@GP_Sloc:trains.adb:26:39] ([#"trains.adb" 26 0 0] ()) );
    ( [@GP_Sloc:trains.adb:26:7] ([#"trains.adb" 26 0 0] (if (( ([#"trains.adb" 26 0 0] [#"trains.adb" 26 0 0] (([@branch_id=2418] Main.spark__branch).bool__content <- ( (Boolean.andb(((Trains__carriages__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages)) < (10 : int))) (((Trains__velocity__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed)) = (0 : int)))) )));
    ( [@branch_id=2418] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:trains.adb:27:12] ([#"trains.adb" 27 0 0] ()) );
     ( [@GP_Sloc:trains.adb:27:33] ([#"trains.adb" 27 0 0] ()) );
     ( [@GP_Sloc:trains.adb:27:30] ([#"trains.adb" 27 0 0] (let temp___265 [@mlw:proxy_symbol] [@introduced] = (let temp___264 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
      ( [#"trains.adb" 27 0 0] begin ensures {true} let _ = (let _ = temp___264.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages in (
       ()))
       in () end ;
      { ( temp___264 ) with Trains__trains.__split_fields = { ( temp___264.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__nocarriages = (Trains__carriages__rep.of_rep(([#"trains.adb" 27 0 0] ( [@GP_Shape:if__train_assign__add] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Sloc:trains.adb:27:51] [@comment:      then Train.noCarriages := Train.noCarriages + 1;                                                   ^ trains.adb:27:51:VC_RANGE_CHECK] [@GP_Id:6] (Trains__carriages.range_check_(((Trains__carriages__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages)) + (1 : int)))) )))) } } )))
      in (
       (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___265.Trains__trains.__split_fields ))))
     ) ) )) else (
     ()))) );
    ( [@GP_Sloc:trains.adb:29:7] ([#"trains.adb" 29 0 0] ()) );
    ( [@GP_Sloc:trains.adb:29:7] ([#"trains.adb" 29 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((let temp___268 [@mlw:proxy_symbol] [@introduced] = (Standard_String__Img.to_string((Trains__carriages.attr__ATTRIBUTE_IMAGE((Trains__carriages__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages))))) ((5 : int))) in (
    (let temp___267 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_266.temp___String_Literal_266(())) in (
     (Standard__string.of_array((Array__Int__Standard__character__Concat.concat(temp___267) ((1 : int)) ((19 : int)) ((Standard__string.to_array(temp___268))) ((Standard__string.first(temp___268))) ((Standard__string.last(temp___268))))) ((1 : int)) (([#"trains.adb" 29 0 0] ( [@vc:annotation] [@GP_Sloc:trains.adb:29:38] [@GP_Reason:VC_RANGE_CHECK] [@GP_Id:7] [@GP_Shape:call_put_line__2__concat] [@comment:      Put_Line("Number of Carriages" & Train.noCarriages'Image);                                      ^ trains.adb:29:38:VC_RANGE_CHECK] (Standard__positive.range_check_((((1 : int) + ((Integer.length((1 : int)) ((19 : int))) + (Integer.length((Standard__string.first(temp___268))) ((Standard__string.last(temp___268)))))) - (1 : int)))) ))))))
    ))
    )) )) );
     raise Return__exc )
   with
    Return__exc -> ()
   end;
    begin ensures {true} let _ = (let _ = ((Trains__carriages__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages)) <= (temp___old_269 + (1 : int))) in (
    ()))
    in () end  )))
   )
end

(* Module for checking contracts and absence of run-time errors in subprogram "removingcarriage" defined at trains.ads:71, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__removingcarriage__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Integer as Integer
 use        "_gnatprove_standard".Boolean as Boolean
 use        Standard_String__Img as Standard_String__Img
 use        Standard__positive as Standard__positive
 use        Array__Int__Standard__character__Concat as Array__Int__Standard__character__Concat
 use        Standard__string as Standard__string
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Ada__text_io__put_line__2___axiom as Ada__text_io__put_line__2___axiom
 use        Trains__carriages as Trains__carriages
 use        Trains__carriages__rep as Trains__carriages__rep
 use        Temp___String_Literal_272 as Temp___String_Literal_272
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Standard__positive___axiom as Standard__positive___axiom
 use        Standard__character___axiom as Standard__character___axiom
 use        Standard__string___axiom as Standard__string___axiom
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom
 use        Ada__text_io__count___axiom as Ada__text_io__count___axiom
 use        Ada__text_io__line_length__2___axiom as Ada__text_io__line_length__2___axiom
 use        Ada__text_io__page_length__2___axiom as Ada__text_io__page_length__2___axiom
 use        Ada__text_io__put_line__2___axiom as Ada__text_io__put_line__2___axiom

 let def [#"trains.ads" 71 0 0][@GP_Subp:trains.ads:71] 
   (__void_param : unit)
  requires { [#"trains.ads" 71 0 0] true }
  ensures { [#"trains.ads" 71 0 0] ([#"trains.ads" 74 0 0] ( [@GP_Id:11] [@GP_Reason:VC_POSTCONDITION] [@GP_Shape:pragargs__cmp] [@model_vc_post] [@comment:     Post => train.noCarriages = train.noCarriages'Old - 1;              ^ trains.ads:74:14:VC_POSTCONDITION] [@GP_Sloc:trains.ads:74:14] ( [@GP_Pretty_Ada:44316] [@GP_Sloc:trains.ads:74:14] ((Trains__carriages__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages) = ((Trains__carriages__rep.to_rep (old { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages )) - (1 : int))) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:71 *)
  ;
   assume {  (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:71 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:71 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Trains__carriages__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages)) > (0 : int))) (((Trains__carriages__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages)) < (10 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:71 *)
  ;
   assume {  ( ( [@GP_Pretty_Ada:4035] ((Trains__carriages__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages) > (0 : int)) ) /\ ( [@GP_Pretty_Ada:4043] ((Trains__carriages__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages) < (10 : int)) ) ) };
   begin ensures {true} let _ = (let _ = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages in (
   ()))
   in () end ;
  (let temp___old_275 [@mlw:proxy_symbol] [@introduced] =  (val _f : int
  ensures { (result = (Trains__carriages__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages))} 
  in _f) in (
   (  try
    ( ();
    ( [@GP_Sloc:trains.adb:34:11] ([#"trains.adb" 34 0 0] ()) );
    ( [@GP_Sloc:trains.adb:34:7] ([#"trains.adb" 34 0 0] (if (( ([#"trains.adb" 34 0 0] [#"trains.adb" 34 0 0] (([@branch_id=2459] Main.spark__branch).bool__content <- ( ((Trains__carriages__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages)) > (0 : int)) )));
    ( [@branch_id=2459] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:trains.adb:35:12] ([#"trains.adb" 35 0 0] ()) );
     ( [@GP_Sloc:trains.adb:35:33] ([#"trains.adb" 35 0 0] ()) );
     ( [@GP_Sloc:trains.adb:35:30] ([#"trains.adb" 35 0 0] (let temp___271 [@mlw:proxy_symbol] [@introduced] = (let temp___270 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
      ( [#"trains.adb" 35 0 0] begin ensures {true} let _ = (let _ = temp___270.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages in (
       ()))
       in () end ;
      { ( temp___270 ) with Trains__trains.__split_fields = { ( temp___270.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__nocarriages = (Trains__carriages__rep.of_rep(([#"trains.adb" 35 0 0] ( [@GP_Sloc:trains.adb:35:51] [@vc:annotation] [@GP_Shape:if__train_assign__sub] [@GP_Reason:VC_RANGE_CHECK] [@comment:      then Train.noCarriages := Train.noCarriages - 1;                                                   ^ trains.adb:35:51:VC_RANGE_CHECK] [@GP_Id:9] (Trains__carriages.range_check_(((Trains__carriages__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages)) - (1 : int)))) )))) } } )))
      in (
       (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___271.Trains__trains.__split_fields ))))
     ) ) )) else (
     ()))) );
    ( [@GP_Sloc:trains.adb:37:7] ([#"trains.adb" 37 0 0] ()) );
    ( [@GP_Sloc:trains.adb:37:7] ([#"trains.adb" 37 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((let temp___274 [@mlw:proxy_symbol] [@introduced] = (Standard_String__Img.to_string((Trains__carriages.attr__ATTRIBUTE_IMAGE((Trains__carriages__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages))))) ((5 : int))) in (
    (let temp___273 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_272.temp___String_Literal_272(())) in (
     (Standard__string.of_array((Array__Int__Standard__character__Concat.concat(temp___273) ((1 : int)) ((19 : int)) ((Standard__string.to_array(temp___274))) ((Standard__string.first(temp___274))) ((Standard__string.last(temp___274))))) ((1 : int)) (([#"trains.adb" 37 0 0] ( [@GP_Id:10] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Sloc:trains.adb:37:38] [@comment:      Put_Line("Number of Carriages" & Train.noCarriages'Image);                                      ^ trains.adb:37:38:VC_RANGE_CHECK] [@GP_Shape:call_put_line__2__concat] (Standard__positive.range_check_((((1 : int) + ((Integer.length((1 : int)) ((19 : int))) + (Integer.length((Standard__string.first(temp___274))) ((Standard__string.last(temp___274)))))) - (1 : int)))) ))))))
    ))
    )) )) );
     raise Return__exc )
   with
    Return__exc -> ()
   end;
    begin ensures {true} let _ = (let _ = ((Trains__carriages__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages)) = (temp___old_275 - (1 : int))) in (
    ()))
    in () end  )))
   )
end

(* Module for checking contracts and absence of run-time errors in subprogram "increasecoolant" defined at trains.ads:76, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__increasecoolant__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Integer as Integer
 use        "_gnatprove_standard".Boolean as Boolean
 use        Standard_String__Img as Standard_String__Img
 use        Standard__positive as Standard__positive
 use        Array__Int__Standard__character__Concat as Array__Int__Standard__character__Concat
 use        Standard__string as Standard__string
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Ada__text_io__put_line__2___axiom as Ada__text_io__put_line__2___axiom
 use        Trains__watersupply as Trains__watersupply
 use        Trains__watersupply__rep as Trains__watersupply__rep
 use        Temp___String_Literal_279 as Temp___String_Literal_279
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Standard__positive___axiom as Standard__positive___axiom
 use        Standard__character___axiom as Standard__character___axiom
 use        Standard__string___axiom as Standard__string___axiom
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom
 use        Ada__text_io__count___axiom as Ada__text_io__count___axiom
 use        Ada__text_io__line_length__2___axiom as Ada__text_io__line_length__2___axiom
 use        Ada__text_io__page_length__2___axiom as Ada__text_io__page_length__2___axiom
 use        Ada__text_io__put_line__2___axiom as Ada__text_io__put_line__2___axiom

 let def [#"trains.ads" 76 0 0][@GP_Subp:trains.ads:76] 
   (__void_param : unit)
  requires { [#"trains.ads" 76 0 0] true }
  ensures { [#"trains.ads" 76 0 0] ([#"trains.ads" 79 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@comment:     Post => train.trainReactors.amountOfWater = train.trainReactors.amountOfWater'Old + 1;              ^ trains.ads:79:14:VC_POSTCONDITION] [@GP_Id:14] [@GP_Shape:pragargs__cmp] [@model_vc_post] [@GP_Sloc:trains.ads:79:14] ( [@GP_Pretty_Ada:44391] [@GP_Sloc:trains.ads:79:14] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) = ((Trains__watersupply__rep.to_rep (old { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater )) + (1 : int))) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:76 *)
  ;
   assume {  (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:76 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:76 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) > (1 : int))) (((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) < (10 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:76 *)
  ;
   assume {  ( ( [@GP_Pretty_Ada:4091] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) > (1 : int)) ) /\ ( [@GP_Pretty_Ada:4101] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) < (10 : int)) ) ) };
   begin ensures {true} let _ = (let _ = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater in (
   ()))
   in () end ;
  (let temp___old_282 [@mlw:proxy_symbol] [@introduced] =  (val _f : int
  ensures { (result = (Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater))} 
  in _f) in (
   (  try
    ( ();
    ( [@GP_Sloc:trains.adb:42:11] ([#"trains.adb" 42 0 0] ()) );
    ( [@GP_Sloc:trains.adb:42:7] ([#"trains.adb" 42 0 0] (if (( ([#"trains.adb" 42 0 0] [#"trains.adb" 42 0 0] (([@branch_id=2494] Main.spark__branch).bool__content <- ( ((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) < (10 : int)) )));
    ( [@branch_id=2494] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:trains.adb:43:12] ([#"trains.adb" 43 0 0] ()) );
     ( [@GP_Sloc:trains.adb:43:49] ([#"trains.adb" 43 0 0] ()) );
     ( [@GP_Sloc:trains.adb:43:46] ([#"trains.adb" 43 0 0] (let temp___278 [@mlw:proxy_symbol] [@introduced] = (let temp___277 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
      ( [#"trains.adb" 43 0 0] begin ensures {true} let _ = (let _ = temp___277.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
       ()))
       in () end ;
      { ( temp___277 ) with Trains__trains.__split_fields = { ( temp___277.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___276 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
       ( [#"trains.adb" 43 0 0] begin ensures {true} let _ = (let _ = temp___276.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater in (
        ()))
        in () end ;
       { ( temp___276 ) with Trains__reactors.__split_fields = { ( temp___276.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__amountofwater = (Trains__watersupply__rep.of_rep(([#"trains.adb" 43 0 0] ( [@GP_Id:12] [@GP_Shape:if__train_assign__add] [@vc:annotation] [@comment:      then Train.trainReactors.amountOfWater := Train.trainReactors.amountOfWater + 1;                                                                                   ^ trains.adb:43:83:VC_RANGE_CHECK] [@GP_Sloc:trains.adb:43:83] [@GP_Reason:VC_RANGE_CHECK] (Trains__watersupply.range_check_(((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) + (1 : int)))) )))) } } )))
       } } )))
      in (
       (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___278.Trains__trains.__split_fields ))))
     ) ) )) else (
     ()))) );
    ( [@GP_Sloc:trains.adb:45:7] ([#"trains.adb" 45 0 0] ()) );
    ( [@GP_Sloc:trains.adb:45:7] ([#"trains.adb" 45 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((let temp___281 [@mlw:proxy_symbol] [@introduced] = (Standard_String__Img.to_string((Trains__watersupply.attr__ATTRIBUTE_IMAGE((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater))))) ((5 : int))) in (
    (let temp___280 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_279.temp___String_Literal_279(())) in (
     (Standard__string.of_array((Array__Int__Standard__character__Concat.concat(temp___280) ((1 : int)) ((15 : int)) ((Standard__string.to_array(temp___281))) ((Standard__string.first(temp___281))) ((Standard__string.last(temp___281))))) ((1 : int)) (([#"trains.adb" 45 0 0] ( [@GP_Id:13] [@comment:      Put_Line("Amount of Water" & Train.trainReactors.amountOfWater'Image);                                  ^ trains.adb:45:34:VC_RANGE_CHECK] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Sloc:trains.adb:45:34] [@GP_Shape:call_put_line__2__concat] (Standard__positive.range_check_((((1 : int) + ((Integer.length((1 : int)) ((15 : int))) + (Integer.length((Standard__string.first(temp___281))) ((Standard__string.last(temp___281)))))) - (1 : int)))) ))))))
    ))
    )) )) );
     raise Return__exc )
   with
    Return__exc -> ()
   end;
    begin ensures {true} let _ = (let _ = ((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) = (temp___old_282 + (1 : int))) in (
    ()))
    in () end  )))
   )
end

(* Module for checking contracts and absence of run-time errors in subprogram "decreasecoolant" defined at trains.ads:81, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__decreasecoolant__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Integer as Integer
 use        "_gnatprove_standard".Boolean as Boolean
 use        Standard_String__Img as Standard_String__Img
 use        Standard__positive as Standard__positive
 use        Array__Int__Standard__character__Concat as Array__Int__Standard__character__Concat
 use        Standard__string as Standard__string
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Ada__text_io__put_line__2___axiom as Ada__text_io__put_line__2___axiom
 use        Trains__watersupply as Trains__watersupply
 use        Trains__watersupply__rep as Trains__watersupply__rep
 use        Temp___String_Literal_286 as Temp___String_Literal_286
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Standard__positive___axiom as Standard__positive___axiom
 use        Standard__character___axiom as Standard__character___axiom
 use        Standard__string___axiom as Standard__string___axiom
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom
 use        Ada__text_io__count___axiom as Ada__text_io__count___axiom
 use        Ada__text_io__line_length__2___axiom as Ada__text_io__line_length__2___axiom
 use        Ada__text_io__page_length__2___axiom as Ada__text_io__page_length__2___axiom
 use        Ada__text_io__put_line__2___axiom as Ada__text_io__put_line__2___axiom

 let def [#"trains.ads" 81 0 0][@GP_Subp:trains.ads:81] 
   (__void_param : unit)
  requires { [#"trains.ads" 81 0 0] true }
  ensures { [#"trains.ads" 81 0 0] ([#"trains.ads" 84 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Sloc:trains.ads:84:14] [@GP_Id:17] [@GP_Shape:pragargs__cmp] [@model_vc_post] [@comment:     Post => train.trainReactors.amountOfWater = train.trainReactors.amountOfWater'Old - 1;              ^ trains.ads:84:14:VC_POSTCONDITION] ( [@GP_Sloc:trains.ads:84:14] [@GP_Pretty_Ada:44466] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) = ((Trains__watersupply__rep.to_rep (old { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater )) - (1 : int))) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:81 *)
  ;
   assume {  (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:81 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:81 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) > (1 : int))) (((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) < (10 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:81 *)
  ;
   assume {  ( ( [@GP_Pretty_Ada:4153] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) > (1 : int)) ) /\ ( [@GP_Pretty_Ada:4163] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) < (10 : int)) ) ) };
   begin ensures {true} let _ = (let _ = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater in (
   ()))
   in () end ;
  (let temp___old_289 [@mlw:proxy_symbol] [@introduced] =  (val _f : int
  ensures { (result = (Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater))} 
  in _f) in (
   (  try
    ( ();
    ( [@GP_Sloc:trains.adb:51:11] ([#"trains.adb" 51 0 0] ()) );
    ( [@GP_Sloc:trains.adb:51:7] ([#"trains.adb" 51 0 0] (if (( ([#"trains.adb" 51 0 0] [#"trains.adb" 51 0 0] (([@branch_id=2537] Main.spark__branch).bool__content <- ( ((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) > (1 : int)) )));
    ( [@branch_id=2537] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:trains.adb:52:12] ([#"trains.adb" 52 0 0] ()) );
     ( [@GP_Sloc:trains.adb:52:49] ([#"trains.adb" 52 0 0] ()) );
     ( [@GP_Sloc:trains.adb:52:46] ([#"trains.adb" 52 0 0] (let temp___285 [@mlw:proxy_symbol] [@introduced] = (let temp___284 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
      ( [#"trains.adb" 52 0 0] begin ensures {true} let _ = (let _ = temp___284.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
       ()))
       in () end ;
      { ( temp___284 ) with Trains__trains.__split_fields = { ( temp___284.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___283 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
       ( [#"trains.adb" 52 0 0] begin ensures {true} let _ = (let _ = temp___283.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater in (
        ()))
        in () end ;
       { ( temp___283 ) with Trains__reactors.__split_fields = { ( temp___283.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__amountofwater = (Trains__watersupply__rep.of_rep(([#"trains.adb" 52 0 0] ( [@GP_Id:15] [@GP_Sloc:trains.adb:52:83] [@vc:annotation] [@GP_Shape:if__train_assign__sub] [@comment:      then Train.trainReactors.amountOfWater := Train.trainReactors.amountOfWater - 1;                                                                                   ^ trains.adb:52:83:VC_RANGE_CHECK] [@GP_Reason:VC_RANGE_CHECK] (Trains__watersupply.range_check_(((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) - (1 : int)))) )))) } } )))
       } } )))
      in (
       (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___285.Trains__trains.__split_fields ))))
     ) ) )) else (
     ()))) );
    ( [@GP_Sloc:trains.adb:54:7] ([#"trains.adb" 54 0 0] ()) );
    ( [@GP_Sloc:trains.adb:54:7] ([#"trains.adb" 54 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((let temp___288 [@mlw:proxy_symbol] [@introduced] = (Standard_String__Img.to_string((Trains__watersupply.attr__ATTRIBUTE_IMAGE((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater))))) ((5 : int))) in (
    (let temp___287 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_286.temp___String_Literal_286(())) in (
     (Standard__string.of_array((Array__Int__Standard__character__Concat.concat(temp___287) ((1 : int)) ((15 : int)) ((Standard__string.to_array(temp___288))) ((Standard__string.first(temp___288))) ((Standard__string.last(temp___288))))) ((1 : int)) (([#"trains.adb" 54 0 0] ( [@GP_Id:16] [@comment:      Put_Line("Amount of Water" & Train.trainReactors.amountOfWater'Image);                                  ^ trains.adb:54:34:VC_RANGE_CHECK] [@vc:annotation] [@GP_Sloc:trains.adb:54:34] [@GP_Reason:VC_RANGE_CHECK] [@GP_Shape:call_put_line__2__concat] (Standard__positive.range_check_((((1 : int) + ((Integer.length((1 : int)) ((15 : int))) + (Integer.length((Standard__string.first(temp___288))) ((Standard__string.last(temp___288)))))) - (1 : int)))) ))))))
    ))
    )) )) );
     raise Return__exc )
   with
    Return__exc -> ()
   end;
    begin ensures {true} let _ = (let _ = ((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) = (temp___old_289 - (1 : int))) in (
    ()))
    in () end  )))
   )
end

(* Module for checking contracts and absence of run-time errors in subprogram "increasetemp" defined at trains.ads:86, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__increasetemp__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Integer as Integer
 use        "_gnatprove_standard".Boolean as Boolean
 use        Standard_String__Img as Standard_String__Img
 use        Standard__positive as Standard__positive
 use        Array__Int__Standard__character__Concat as Array__Int__Standard__character__Concat
 use        Standard__string as Standard__string
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Ada__text_io__put_line__2___axiom as Ada__text_io__put_line__2___axiom
 use        Trains__temp as Trains__temp
 use        Trains__temp__rep as Trains__temp__rep
 use        Temp___String_Literal_293 as Temp___String_Literal_293
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Standard__positive___axiom as Standard__positive___axiom
 use        Standard__character___axiom as Standard__character___axiom
 use        Standard__string___axiom as Standard__string___axiom
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom
 use        Ada__text_io__count___axiom as Ada__text_io__count___axiom
 use        Ada__text_io__line_length__2___axiom as Ada__text_io__line_length__2___axiom
 use        Ada__text_io__page_length__2___axiom as Ada__text_io__page_length__2___axiom
 use        Ada__text_io__put_line__2___axiom as Ada__text_io__put_line__2___axiom

 let def [#"trains.ads" 86 0 0][@GP_Subp:trains.ads:86] 
   (__void_param : unit)
  requires { [#"trains.ads" 86 0 0] true }
  ensures { [#"trains.ads" 86 0 0] ([#"trains.ads" 90 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Shape:pragargs__cmp] [@GP_Sloc:trains.ads:90:14] [@comment:     Post => train.trainReactors.currentTemp = train.trainReactors.currentTemp'Old + 10;              ^ trains.ads:90:14:VC_POSTCONDITION] [@model_vc_post] [@GP_Id:20] ( [@GP_Sloc:trains.ads:90:14] [@GP_Pretty_Ada:44549] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) = ((Trains__temp__rep.to_rep (old { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp )) + (10 : int))) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:86 *)
  ;
   assume {  (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:86 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:86 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb(((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) > (0 : int))) (((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) < (100 : int))))) (((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) < (91 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:86 *)
  ;
   assume {  ( ( ( [@GP_Pretty_Ada:4215] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) > (0 : int)) ) /\ ( [@GP_Pretty_Ada:4225] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) < (100 : int)) ) ) /\ ( [@GP_Pretty_Ada:4235] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) < (91 : int)) ) ) };
   begin ensures {true} let _ = (let _ = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp in (
   ()))
   in () end ;
  (let temp___old_296 [@mlw:proxy_symbol] [@introduced] =  (val _f : int
  ensures { (result = (Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp))} 
  in _f) in (
   (  try
    ( ();
    ( [@GP_Sloc:trains.adb:59:11] ([#"trains.adb" 59 0 0] ()) );
    ( [@GP_Sloc:trains.adb:59:7] ([#"trains.adb" 59 0 0] (if (( ([#"trains.adb" 59 0 0] [#"trains.adb" 59 0 0] (([@branch_id=2580] Main.spark__branch).bool__content <- ( ((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) < (100 : int)) )));
    ( [@branch_id=2580] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:trains.adb:60:12] ([#"trains.adb" 60 0 0] ()) );
     ( [@GP_Sloc:trains.adb:60:47] ([#"trains.adb" 60 0 0] ()) );
     ( [@GP_Sloc:trains.adb:60:44] ([#"trains.adb" 60 0 0] (let temp___292 [@mlw:proxy_symbol] [@introduced] = (let temp___291 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
      ( [#"trains.adb" 60 0 0] begin ensures {true} let _ = (let _ = temp___291.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
       ()))
       in () end ;
      { ( temp___291 ) with Trains__trains.__split_fields = { ( temp___291.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___290 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
       ( [#"trains.adb" 60 0 0] begin ensures {true} let _ = (let _ = temp___290.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp in (
        ()))
        in () end ;
       { ( temp___290 ) with Trains__reactors.__split_fields = { ( temp___290.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__currenttemp = (Trains__temp__rep.of_rep(([#"trains.adb" 60 0 0] ( [@GP_Shape:if__train_assign__add] [@GP_Id:18] [@vc:annotation] [@comment:      then Train.trainReactors.currentTemp := Train.trainReactors.currentTemp + 10;                                                                               ^ trains.adb:60:79:VC_RANGE_CHECK] [@GP_Reason:VC_RANGE_CHECK] [@GP_Sloc:trains.adb:60:79] (Trains__temp.range_check_(((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) + (10 : int)))) )))) } } )))
       } } )))
      in (
       (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___292.Trains__trains.__split_fields ))))
     ) ) )) else (
     ()))) );
    ( [@GP_Sloc:trains.adb:62:7] ([#"trains.adb" 62 0 0] ()) );
    ( [@GP_Sloc:trains.adb:62:7] ([#"trains.adb" 62 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((let temp___295 [@mlw:proxy_symbol] [@introduced] = (Standard_String__Img.to_string((Trains__temp.attr__ATTRIBUTE_IMAGE((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp))))) ((5 : int))) in (
    (let temp___294 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_293.temp___String_Literal_293(())) in (
     (Standard__string.of_array((Array__Int__Standard__character__Concat.concat(temp___294) ((1 : int)) ((19 : int)) ((Standard__string.to_array(temp___295))) ((Standard__string.first(temp___295))) ((Standard__string.last(temp___295))))) ((1 : int)) (([#"trains.adb" 62 0 0] ( [@comment:      Put_Line("Current Temperature" & train.trainReactors.currentTemp'Image);                                      ^ trains.adb:62:38:VC_RANGE_CHECK] [@GP_Id:19] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Sloc:trains.adb:62:38] [@GP_Shape:call_put_line__2__concat] (Standard__positive.range_check_((((1 : int) + ((Integer.length((1 : int)) ((19 : int))) + (Integer.length((Standard__string.first(temp___295))) ((Standard__string.last(temp___295)))))) - (1 : int)))) ))))))
    ))
    )) )) );
     raise Return__exc )
   with
    Return__exc -> ()
   end;
    begin ensures {true} let _ = (let _ = ((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) = (temp___old_296 + (10 : int))) in (
    ()))
    in () end  )))
   )
end

(* Module for checking contracts and absence of run-time errors in subprogram "warninglight" defined at trains.ads:92, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__warninglight__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__temp as Trains__temp
 use        Trains__temp__rep as Trains__temp__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep
 use        Trains__lights as Trains__lights
 use        Trains__lights__rep as Trains__lights__rep
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom

 let def [#"trains.ads" 92 0 0][@GP_Subp:trains.ads:92] 
   (__void_param : unit)
  requires { [#"trains.ads" 92 0 0] true }
  ensures { [#"trains.ads" 92 0 0] ([#"trains.ads" 95 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Shape:pragargs__or] [@GP_Sloc:trains.ads:95:14] [@model_vc_post] [@GP_Id:21] [@comment:     Post => Train.trainReactors.lightState = GREEN or Train.trainReactors.lightState = AMBER or              ^ trains.ads:95:14:VC_POSTCONDITION] ( [@GP_Pretty_Ada:44617] [@GP_Sloc:trains.ads:95:14] ( ( ((Trains__lights__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate) = (0 : int)) \/ ((Trains__lights__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate) = (1 : int)) ) \/ ((Trains__lights__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate) = (2 : int)) ) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:92 *)
  ;
   assume {  (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:92 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:92 *)
  ;
   begin ensures {true} let _ = (let _ = ((Trains__reactorstate__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate)) = (0 : int)) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:92 *)
  ;
   assume {  ( [@GP_Pretty_Ada:44587] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (0 : int)) ) };
   try
   ( ();
   ( [@GP_Sloc:trains.adb:69:11] ([#"trains.adb" 69 0 0] ()) );
   ( [@GP_Sloc:trains.adb:69:53] ([#"trains.adb" 69 0 0] ()) );
   ( [@GP_Sloc:trains.adb:69:7] ([#"trains.adb" 69 0 0] (if (( ([#"trains.adb" 69 0 0] [#"trains.adb" 69 0 0] (([@branch_id=2623] Main.spark__branch).bool__content <- ( (Boolean.andb(((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) >= (60 : int))) (((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) < (80 : int)))) )));
   ( [@branch_id=2623] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:trains.adb:70:12] ([#"trains.adb" 70 0 0] ()) );
    ( [@GP_Sloc:trains.adb:70:43] ([#"trains.adb" 70 0 0] (let temp___299 [@mlw:proxy_symbol] [@introduced] = (let temp___298 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
     ( [#"trains.adb" 70 0 0] begin ensures {true} let _ = (let _ = temp___298.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ()))
      in () end ;
     { ( temp___298 ) with Trains__trains.__split_fields = { ( temp___298.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___297 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ( [#"trains.adb" 70 0 0] begin ensures {true} let _ = (let _ = temp___297.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate in (
       ()))
       in () end ;
      { ( temp___297 ) with Trains__reactors.__split_fields = { ( temp___297.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__lightstate = (Trains__lights__rep.of_rep((1 : int))) } } )))
      } } )))
     in (
     [#"trains.adb" 70 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___299.Trains__trains.__split_fields ))))
    ) ) )) else (
    ( ();
    ( [@GP_Sloc:trains.adb:72:14] ([#"trains.adb" 72 0 0] ()) );
    ( [@GP_Sloc:trains.adb:72:10] ([#"trains.adb" 72 0 0] (if (( ([#"trains.adb" 72 0 0] [#"trains.adb" 72 0 0] (([@branch_id=2646] Main.spark__branch).bool__content <- ( ((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) >= (80 : int)) )));
    ( [@branch_id=2646] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:trains.adb:73:15] ([#"trains.adb" 73 0 0] ()) );
     ( [@GP_Sloc:trains.adb:73:46] ([#"trains.adb" 73 0 0] (let temp___302 [@mlw:proxy_symbol] [@introduced] = (let temp___301 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
      ( [#"trains.adb" 73 0 0] begin ensures {true} let _ = (let _ = temp___301.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
       ()))
       in () end ;
      { ( temp___301 ) with Trains__trains.__split_fields = { ( temp___301.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___300 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
       ( [#"trains.adb" 73 0 0] begin ensures {true} let _ = (let _ = temp___300.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate in (
        ()))
        in () end ;
       { ( temp___300 ) with Trains__reactors.__split_fields = { ( temp___300.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__lightstate = (Trains__lights__rep.of_rep((2 : int))) } } )))
       } } )))
      in (
      [#"trains.adb" 73 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___302.Trains__trains.__split_fields ))))
     ) ) )) else (
     ()))) ) )))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = (Boolean.orb((Boolean.orb(((Trains__lights__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate)) = (0 : int))) (((Trains__lights__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate)) = (1 : int))))) (((Trains__lights__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate)) = (2 : int)))) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "emergencystop" defined at trains.ads:98, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__emergencystop__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__reactoremer as Trains__reactoremer
 use        Trains__temp as Trains__temp
 use        Trains__temp__rep as Trains__temp__rep
 use        Trains__controlrods as Trains__controlrods
 use        Trains__controlrods__rep as Trains__controlrods__rep
 use        Trains__watersupply as Trains__watersupply
 use        Trains__watersupply__rep as Trains__watersupply__rep
 use        Trains__powersupply as Trains__powersupply
 use        Trains__powersupply__rep as Trains__powersupply__rep
 use        Trains__velocity as Trains__velocity
 use        Trains__velocity__rep as Trains__velocity__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep
 use        Trains__lights as Trains__lights
 use        Trains__lights__rep as Trains__lights__rep
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom
 use        Trains__reactoremer___axiom as Trains__reactoremer___axiom

 let def [#"trains.ads" 98 0 0][@GP_Subp:trains.ads:98] 
   (__void_param : unit)
  requires { [#"trains.ads" 98 0 0] true }
  ensures { [#"trains.ads" 98 0 0] ([#"trains.ads" 101 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@comment:     Post => train.trainReactors.currentTemp = 0 and Train.trainReactors.lightState = GREEN and              ^ trains.ads:101:14:VC_POSTCONDITION] [@GP_Sloc:trains.ads:101:14] [@model_vc_post] [@GP_Id:22] [@GP_Shape:pragargs__and] ( ( ( ( ( ( [@GP_Pretty_Ada:4352] [@GP_Sloc:trains.ads:101:14] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) = (0 : int)) ) /\ ( [@GP_Sloc:trains.ads:101:54] [@GP_Pretty_Ada:4360] ((Trains__lights__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4368] [@GP_Sloc:trains.ads:102:14] ((Trains__powersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4376] [@GP_Sloc:trains.ads:102:56] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) = (5 : int)) ) ) /\ ( [@GP_Sloc:trains.ads:103:14] [@GP_Pretty_Ada:4384] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) = (10 : int)) ) ) /\ ( [@GP_Pretty_Ada:4390] [@GP_Sloc:trains.ads:103:57] ((Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed) = (0 : int)) ) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:98 *)
  ;
   assume {  (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:98 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:98 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) >= (95 : int))) (((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) < (100 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:98 *)
  ;
   assume {  ( ( [@GP_Pretty_Ada:4332] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) >= (95 : int)) ) /\ ( [@GP_Pretty_Ada:4340] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) < (100 : int)) ) ) };
   try
   ( ();
   ( [@GP_Sloc:trains.adb:80:11] ([#"trains.adb" 80 0 0] ()) );
   ( [@GP_Sloc:trains.adb:80:7] ([#"trains.adb" 80 0 0] (if (( ([#"trains.adb" 80 0 0] [#"trains.adb" 80 0 0] (([@branch_id=2672] Main.spark__branch).bool__content <- ( ((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) >= (95 : int)) )));
   ( [@branch_id=2672] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:trains.adb:81:12] ([#"trains.adb" 81 0 0] ()) );
    ( [@GP_Sloc:trains.adb:81:52] ([#"trains.adb" 81 0 0] (let temp___305 [@mlw:proxy_symbol] [@introduced] = (let temp___304 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
     ( [#"trains.adb" 81 0 0] begin ensures {true} let _ = (let _ = temp___304.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ()))
      in () end ;
     { ( temp___304 ) with Trains__trains.__split_fields = { ( temp___304.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___303 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ( [#"trains.adb" 81 0 0] begin ensures {true} let _ = (let _ = temp___303.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate in (
       ()))
       in () end ;
      { ( temp___303 ) with Trains__reactors.__split_fields = { ( temp___303.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__currentreactorstate = (Trains__reactorstate__rep.of_rep((1 : int))) } } )))
      } } )))
     in (
     [#"trains.adb" 81 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___305.Trains__trains.__split_fields ))))
    ) );
    ( [@GP_Sloc:trains.adb:81:60] ([#"trains.adb" 81 0 0] ()) );
    ( [@GP_Sloc:trains.adb:81:94] ([#"trains.adb" 81 0 0] (let temp___308 [@mlw:proxy_symbol] [@introduced] = (let temp___307 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
     ( [#"trains.adb" 81 0 0] begin ensures {true} let _ = (let _ = temp___307.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ()))
      in () end ;
     { ( temp___307 ) with Trains__trains.__split_fields = { ( temp___307.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___306 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ( [#"trains.adb" 81 0 0] begin ensures {true} let _ = (let _ = temp___306.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods in (
       ()))
       in () end ;
      { ( temp___306 ) with Trains__reactors.__split_fields = { ( temp___306.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__nocontrolrods = ( 5 : Trains__controlrods.controlrods ) } } )))
      } } )))
     in (
     [#"trains.adb" 81 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___308.Trains__trains.__split_fields ))))
    ) );
    ( [@GP_Sloc:trains.adb:81:100] ([#"trains.adb" 81 0 0] ()) );
    ( [@GP_Sloc:trains.adb:81:134] ([#"trains.adb" 81 0 0] (let temp___311 [@mlw:proxy_symbol] [@introduced] = (let temp___310 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
     ( [#"trains.adb" 81 0 0] begin ensures {true} let _ = (let _ = temp___310.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ()))
      in () end ;
     { ( temp___310 ) with Trains__trains.__split_fields = { ( temp___310.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___309 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ( [#"trains.adb" 81 0 0] begin ensures {true} let _ = (let _ = temp___309.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater in (
       ()))
       in () end ;
      { ( temp___309 ) with Trains__reactors.__split_fields = { ( temp___309.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__amountofwater = ( 10 : Trains__watersupply.watersupply ) } } )))
      } } )))
     in (
     [#"trains.adb" 81 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___311.Trains__trains.__split_fields ))))
    ) );
    ( [@GP_Sloc:trains.adb:81:141] ([#"trains.adb" 81 0 0] ()) );
    ( [@GP_Sloc:trains.adb:81:160] ([#"trains.adb" 81 0 0] (let temp___313 [@mlw:proxy_symbol] [@introduced] = (let temp___312 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
     ( [#"trains.adb" 81 0 0] begin ensures {true} let _ = (let _ = temp___312.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed in (
      ()))
      in () end ;
     { ( temp___312 ) with Trains__trains.__split_fields = { ( temp___312.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__currentspeed = ( 0 : Trains__velocity.velocity ) } } )))
     in (
     [#"trains.adb" 81 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___313.Trains__trains.__split_fields ))))
    ) );
    ( [@GP_Sloc:trains.adb:82:10] ([#"trains.adb" 82 0 0] ()) );
    ( [@GP_Sloc:trains.adb:82:42] ([#"trains.adb" 82 0 0] (let temp___316 [@mlw:proxy_symbol] [@introduced] = (let temp___315 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
     ( [#"trains.adb" 82 0 0] begin ensures {true} let _ = (let _ = temp___315.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ()))
      in () end ;
     { ( temp___315 ) with Trains__trains.__split_fields = { ( temp___315.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___314 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ( [#"trains.adb" 82 0 0] begin ensures {true} let _ = (let _ = temp___314.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp in (
       ()))
       in () end ;
      { ( temp___314 ) with Trains__reactors.__split_fields = { ( temp___314.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__currenttemp = ( 0 : Trains__temp.temp ) } } )))
      } } )))
     in (
     [#"trains.adb" 82 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___316.Trains__trains.__split_fields ))))
    ) );
    ( [@GP_Sloc:trains.adb:83:10] ([#"trains.adb" 83 0 0] ()) );
    ( [@GP_Sloc:trains.adb:83:41] ([#"trains.adb" 83 0 0] (let temp___319 [@mlw:proxy_symbol] [@introduced] = (let temp___318 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
     ( [#"trains.adb" 83 0 0] begin ensures {true} let _ = (let _ = temp___318.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ()))
      in () end ;
     { ( temp___318 ) with Trains__trains.__split_fields = { ( temp___318.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___317 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ( [#"trains.adb" 83 0 0] begin ensures {true} let _ = (let _ = temp___317.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate in (
       ()))
       in () end ;
      { ( temp___317 ) with Trains__reactors.__split_fields = { ( temp___317.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__lightstate = (Trains__lights__rep.of_rep((0 : int))) } } )))
      } } )))
     in (
     [#"trains.adb" 83 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___319.Trains__trains.__split_fields ))))
    ) );
    ( [@GP_Sloc:trains.adb:84:10] ([#"trains.adb" 84 0 0] ()) );
    ( [@GP_Sloc:trains.adb:84:44] ([#"trains.adb" 84 0 0] (let temp___322 [@mlw:proxy_symbol] [@introduced] = (let temp___321 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
     ( [#"trains.adb" 84 0 0] begin ensures {true} let _ = (let _ = temp___321.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ()))
      in () end ;
     { ( temp___321 ) with Trains__trains.__split_fields = { ( temp___321.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___320 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ( [#"trains.adb" 84 0 0] begin ensures {true} let _ = (let _ = temp___320.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower in (
       ()))
       in () end ;
      { ( temp___320 ) with Trains__reactors.__split_fields = { ( temp___320.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__amountofpower = ( 0 : Trains__powersupply.powersupply ) } } )))
      } } )))
     in (
     [#"trains.adb" 84 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___322.Trains__trains.__split_fields ))))
    ) );
    ( [@GP_Sloc:trains.adb:85:10] ([#"trains.adb" 85 0 0] ()) );
    ( [@GP_Sloc:trains.adb:85:22] ([#"trains.adb" 85 0 0] [#"trains.adb" 85 0 0] (Trains__reactoremer.reactoremer.bool__content <- ( (Boolean.of_int((1 : int))) ))) ) )) else (
    ()))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb(((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) = (0 : int))) (((Trains__lights__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate)) = (0 : int))))) (((Trains__powersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower)) = (0 : int))))) (((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) = (5 : int))))) (((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) = (10 : int))))) (((Trains__velocity__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed)) = (0 : int)))) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "manualshutdown" defined at trains.ads:105, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__manualshutdown__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__reactorshutdown as Trains__reactorshutdown
 use        Trains__reactorneedscontrol as Trains__reactorneedscontrol
 use        Trains__reactorneedscoolant as Trains__reactorneedscoolant
 use        Trains__trainstart2 as Trains__trainstart2
 use        Trains__temp as Trains__temp
 use        Trains__temp__rep as Trains__temp__rep
 use        Trains__controlrods as Trains__controlrods
 use        Trains__controlrods__rep as Trains__controlrods__rep
 use        Trains__watersupply as Trains__watersupply
 use        Trains__watersupply__rep as Trains__watersupply__rep
 use        Trains__powersupply as Trains__powersupply
 use        Trains__powersupply__rep as Trains__powersupply__rep
 use        Trains__velocity as Trains__velocity
 use        Trains__velocity__rep as Trains__velocity__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep
 use        Trains__lights as Trains__lights
 use        Trains__lights__rep as Trains__lights__rep
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom
 use        Trains__reactorshutdown___axiom as Trains__reactorshutdown___axiom
 use        Trains__reactorneedscontrol___axiom as Trains__reactorneedscontrol___axiom
 use        Trains__reactorneedscoolant___axiom as Trains__reactorneedscoolant___axiom
 use        Trains__trainstart2___axiom as Trains__trainstart2___axiom

 let def [#"trains.ads" 105 0 0][@GP_Subp:trains.ads:105] 
   (__void_param : unit)
  requires { [#"trains.ads" 105 0 0] true }
  ensures { [#"trains.ads" 105 0 0] ([#"trains.ads" 108 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Sloc:trains.ads:108:14] [@model_vc_post] [@GP_Id:23] [@GP_Shape:pragargs__and] [@comment:     Post => train.trainReactors.currentReactorState = off and train.trainReactors.currentTemp = 0 and              ^ trains.ads:108:14:VC_POSTCONDITION] ( ( ( ( ( [@GP_Sloc:trains.ads:108:14] [@GP_Pretty_Ada:4439] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (1 : int)) ) /\ ( [@GP_Pretty_Ada:4447] [@GP_Sloc:trains.ads:108:64] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4455] [@GP_Sloc:trains.ads:109:14] ((Trains__lights__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate) = (0 : int)) ) ) /\ ( [@GP_Pretty_Ada:4463] [@GP_Sloc:trains.ads:109:57] ((Trains__powersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower) = (0 : int)) ) ) /\ ( [@GP_Sloc:trains.ads:110:14] [@GP_Pretty_Ada:4469] ((Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed) = (0 : int)) ) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:105 *)
  ;
   assume {  (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:105 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:105 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) >= (3 : int))) (((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) >= (2 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:105 *)
  ;
   assume {  ( ( [@GP_Pretty_Ada:4421] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) >= (3 : int)) ) /\ ( [@GP_Pretty_Ada:4429] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) >= (2 : int)) ) ) };
   try
   ( ();
   ( [@GP_Sloc:trains.adb:93:11] ([#"trains.adb" 93 0 0] ()) );
   ( [@GP_Sloc:trains.adb:93:54] ([#"trains.adb" 93 0 0] ()) );
   ( [@GP_Sloc:trains.adb:93:7] ([#"trains.adb" 93 0 0] (if (( ([#"trains.adb" 93 0 0] [#"trains.adb" 93 0 0] (([@branch_id=2741] Main.spark__branch).bool__content <- ( (Boolean.andb(((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) >= (3 : int))) (((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) >= (2 : int)))) )));
   ( [@branch_id=2741] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:trains.adb:94:12] ([#"trains.adb" 94 0 0] ()) );
    ( [@GP_Sloc:trains.adb:94:52] ([#"trains.adb" 94 0 0] (let temp___325 [@mlw:proxy_symbol] [@introduced] = (let temp___324 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
     ( [#"trains.adb" 94 0 0] begin ensures {true} let _ = (let _ = temp___324.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ()))
      in () end ;
     { ( temp___324 ) with Trains__trains.__split_fields = { ( temp___324.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___323 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ( [#"trains.adb" 94 0 0] begin ensures {true} let _ = (let _ = temp___323.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate in (
       ()))
       in () end ;
      { ( temp___323 ) with Trains__reactors.__split_fields = { ( temp___323.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__currentreactorstate = (Trains__reactorstate__rep.of_rep((1 : int))) } } )))
      } } )))
     in (
     [#"trains.adb" 94 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___325.Trains__trains.__split_fields ))))
    ) );
    ( [@GP_Sloc:trains.adb:95:10] ([#"trains.adb" 95 0 0] ()) );
    ( [@GP_Sloc:trains.adb:95:42] ([#"trains.adb" 95 0 0] (let temp___328 [@mlw:proxy_symbol] [@introduced] = (let temp___327 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
     ( [#"trains.adb" 95 0 0] begin ensures {true} let _ = (let _ = temp___327.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ()))
      in () end ;
     { ( temp___327 ) with Trains__trains.__split_fields = { ( temp___327.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___326 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ( [#"trains.adb" 95 0 0] begin ensures {true} let _ = (let _ = temp___326.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp in (
       ()))
       in () end ;
      { ( temp___326 ) with Trains__reactors.__split_fields = { ( temp___326.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__currenttemp = ( 0 : Trains__temp.temp ) } } )))
      } } )))
     in (
     [#"trains.adb" 95 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___328.Trains__trains.__split_fields ))))
    ) );
    ( [@GP_Sloc:trains.adb:96:10] ([#"trains.adb" 96 0 0] ()) );
    ( [@GP_Sloc:trains.adb:96:41] ([#"trains.adb" 96 0 0] (let temp___331 [@mlw:proxy_symbol] [@introduced] = (let temp___330 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
     ( [#"trains.adb" 96 0 0] begin ensures {true} let _ = (let _ = temp___330.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ()))
      in () end ;
     { ( temp___330 ) with Trains__trains.__split_fields = { ( temp___330.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___329 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ( [#"trains.adb" 96 0 0] begin ensures {true} let _ = (let _ = temp___329.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate in (
       ()))
       in () end ;
      { ( temp___329 ) with Trains__reactors.__split_fields = { ( temp___329.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__lightstate = (Trains__lights__rep.of_rep((0 : int))) } } )))
      } } )))
     in (
     [#"trains.adb" 96 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___331.Trains__trains.__split_fields ))))
    ) );
    ( [@GP_Sloc:trains.adb:97:10] ([#"trains.adb" 97 0 0] ()) );
    ( [@GP_Sloc:trains.adb:97:44] ([#"trains.adb" 97 0 0] (let temp___334 [@mlw:proxy_symbol] [@introduced] = (let temp___333 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
     ( [#"trains.adb" 97 0 0] begin ensures {true} let _ = (let _ = temp___333.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ()))
      in () end ;
     { ( temp___333 ) with Trains__trains.__split_fields = { ( temp___333.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___332 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ( [#"trains.adb" 97 0 0] begin ensures {true} let _ = (let _ = temp___332.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower in (
       ()))
       in () end ;
      { ( temp___332 ) with Trains__reactors.__split_fields = { ( temp___332.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__amountofpower = ( 0 : Trains__powersupply.powersupply ) } } )))
      } } )))
     in (
     [#"trains.adb" 97 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___334.Trains__trains.__split_fields ))))
    ) );
    ( [@GP_Sloc:trains.adb:98:10] ([#"trains.adb" 98 0 0] ()) );
    ( [@GP_Sloc:trains.adb:98:29] ([#"trains.adb" 98 0 0] (let temp___336 [@mlw:proxy_symbol] [@introduced] = (let temp___335 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
     ( [#"trains.adb" 98 0 0] begin ensures {true} let _ = (let _ = temp___335.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed in (
      ()))
      in () end ;
     { ( temp___335 ) with Trains__trains.__split_fields = { ( temp___335.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__currentspeed = ( 0 : Trains__velocity.velocity ) } } )))
     in (
     [#"trains.adb" 98 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___336.Trains__trains.__split_fields ))))
    ) );
    ( [@GP_Sloc:trains.adb:99:10] ([#"trains.adb" 99 0 0] ()) );
    ( [@GP_Sloc:trains.adb:99:26] ([#"trains.adb" 99 0 0] [#"trains.adb" 99 0 0] (Trains__reactorshutdown.reactorshutdown.bool__content <- ( (Boolean.of_int((1 : int))) ))) );
    ( [@GP_Sloc:trains.adb:100:10] ([#"trains.adb" 100 0 0] ()) );
    ( [@GP_Sloc:trains.adb:100:22] ([#"trains.adb" 100 0 0] [#"trains.adb" 100 0 0] (Trains__trainstart2.trainstart2.bool__content <- ( (Boolean.of_int((0 : int))) ))) ) )) else (
    ( ();
    ( [@GP_Sloc:trains.adb:101:15] ([#"trains.adb" 101 0 0] ()) );
    ( [@GP_Sloc:trains.adb:101:12] ([#"trains.adb" 101 0 0] (if (( ([#"trains.adb" 101 0 0] [#"trains.adb" 101 0 0] (([@branch_id=2796] Main.spark__branch).bool__content <- ( ((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) < (3 : int)) )));
    ( [@branch_id=2796] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:trains.adb:102:17] ([#"trains.adb" 102 0 0] ()) );
     ( [@GP_Sloc:trains.adb:102:37] ([#"trains.adb" 102 0 0] [#"trains.adb" 102 0 0] (Trains__reactorneedscontrol.reactorneedscontrol.bool__content <- ( (Boolean.of_int((1 : int))) ))) ) )) else (
     ( ();
     ( [@GP_Sloc:trains.adb:103:18] ([#"trains.adb" 103 0 0] ()) );
     ( [@GP_Sloc:trains.adb:103:15] ([#"trains.adb" 103 0 0] (if (( ([#"trains.adb" 103 0 0] [#"trains.adb" 103 0 0] (([@branch_id=2807] Main.spark__branch).bool__content <- ( ((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) < (2 : int)) )));
     ( [@branch_id=2807] Main.spark__branch ).bool__content )) then (
      ( ();
      ( [@GP_Sloc:trains.adb:105:16] ([#"trains.adb" 105 0 0] ()) );
      ( [@GP_Sloc:trains.adb:105:36] ([#"trains.adb" 105 0 0] [#"trains.adb" 105 0 0] (Trains__reactorneedscoolant.reactorneedscoolant.bool__content <- ( (Boolean.of_int((1 : int))) ))) ) )) else (
      ()))) ) )))) ) )))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb(((Trains__reactorstate__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate)) = (1 : int))) (((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) = (0 : int))))) (((Trains__lights__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate)) = (0 : int))))) (((Trains__powersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower)) = (0 : int))))) (((Trains__velocity__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed)) = (0 : int)))) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "startupthereactor" defined at trains.ads:112, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__startupthereactor__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__controlrods as Trains__controlrods
 use        Trains__controlrods__rep as Trains__controlrods__rep
 use        Trains__watersupply as Trains__watersupply
 use        Trains__watersupply__rep as Trains__watersupply__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom

 let def [#"trains.ads" 112 0 0][@GP_Subp:trains.ads:112] 
   (__void_param : unit)
  requires { [#"trains.ads" 112 0 0] true }
  ensures { [#"trains.ads" 112 0 0] ([#"trains.ads" 116 0 0] ( [@comment:     Post => train.trainReactors.currentReactorState = on;              ^ trains.ads:116:14:VC_POSTCONDITION] [@GP_Reason:VC_POSTCONDITION] [@GP_Shape:pragargs__cmp] [@GP_Sloc:trains.ads:116:14] [@model_vc_post] [@GP_Id:24] ( [@GP_Pretty_Ada:44881] [@GP_Sloc:trains.ads:116:14] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (0 : int)) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:112 *)
  ;
   assume {  (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:112 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:112 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb(((Trains__reactorstate__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate)) = (1 : int))) (((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) = (3 : int))))) (((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) = (2 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:112 *)
  ;
   assume {  ( ( ( [@GP_Pretty_Ada:4495] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (1 : int)) ) /\ ( [@GP_Pretty_Ada:4503] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) = (3 : int)) ) ) /\ ( [@GP_Pretty_Ada:4511] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) = (2 : int)) ) ) };
   try
   ( ();
   ( [@GP_Sloc:trains.adb:113:11] ([#"trains.adb" 113 0 0] ()) );
   ( [@GP_Sloc:trains.adb:113:61] ([#"trains.adb" 113 0 0] ()) );
   ( [@GP_Sloc:trains.adb:113:103] ([#"trains.adb" 113 0 0] ()) );
   ( [@GP_Sloc:trains.adb:113:7] ([#"trains.adb" 113 0 0] (if (( ([#"trains.adb" 113 0 0] [#"trains.adb" 113 0 0] (([@branch_id=2829] Main.spark__branch).bool__content <- ( (Boolean.andb((Boolean.andb(((Trains__reactorstate__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate)) = (1 : int))) (((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) = (3 : int))))) (((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) = (2 : int)))) )));
   ( [@branch_id=2829] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:trains.adb:114:12] ([#"trains.adb" 114 0 0] ()) );
    ( [@GP_Sloc:trains.adb:114:52] ([#"trains.adb" 114 0 0] (let temp___339 [@mlw:proxy_symbol] [@introduced] = (let temp___338 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
     ( [#"trains.adb" 114 0 0] begin ensures {true} let _ = (let _ = temp___338.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ()))
      in () end ;
     { ( temp___338 ) with Trains__trains.__split_fields = { ( temp___338.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___337 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ( [#"trains.adb" 114 0 0] begin ensures {true} let _ = (let _ = temp___337.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate in (
       ()))
       in () end ;
      { ( temp___337 ) with Trains__reactors.__split_fields = { ( temp___337.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__currentreactorstate = (Trains__reactorstate__rep.of_rep((0 : int))) } } )))
      } } )))
     in (
     [#"trains.adb" 114 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___339.Trains__trains.__split_fields ))))
    ) ) )) else (
    ()))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = ((Trains__reactorstate__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate)) = (0 : int)) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "trainstart" defined at trains.ads:118, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__trainstart__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__trainstart1 as Trains__trainstart1
 use        Trains__trainstart2 as Trains__trainstart2
 use        Trains__trainneedsreactor as Trains__trainneedsreactor
 use        Trains__velocity as Trains__velocity
 use        Trains__velocity__rep as Trains__velocity__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom
 use        Trains__trainstart1___axiom as Trains__trainstart1___axiom
 use        Trains__trainstart2___axiom as Trains__trainstart2___axiom
 use        Trains__trainneedsreactor___axiom as Trains__trainneedsreactor___axiom

 let def [#"trains.ads" 118 0 0][@GP_Subp:trains.ads:118] 
   (__void_param : unit)
  requires { [#"trains.ads" 118 0 0] true }
  ensures { [#"trains.ads" 118 0 0] ([#"trains.ads" 121 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Shape:pragargs__cmp] [@comment:     Post => train.currentSpeed = train.currentSpeed'Old + 10;              ^ trains.ads:121:14:VC_POSTCONDITION] [@GP_Sloc:trains.ads:121:14] [@model_vc_post] [@GP_Id:26] ( [@GP_Sloc:trains.ads:121:14] [@GP_Pretty_Ada:44946] ((Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed) = ((Trains__velocity__rep.to_rep (old { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed )) + (10 : int))) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:118 *)
  ;
   assume {  (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:118 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:118 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Trains__reactorstate__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate)) = (0 : int))) (((Trains__velocity__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed)) = (0 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:118 *)
  ;
   assume {  ( ( [@GP_Pretty_Ada:4551] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (0 : int)) ) /\ ( [@GP_Pretty_Ada:4557] ((Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed) = (0 : int)) ) ) };
   begin ensures {true} let _ = (let _ = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed in (
   ()))
   in () end ;
  (let temp___old_342 [@mlw:proxy_symbol] [@introduced] =  (val _f : int
  ensures { (result = (Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed))} 
  in _f) in (
   (  try
    ( ();
    ( [@GP_Sloc:trains.adb:121:11] ([#"trains.adb" 121 0 0] ()) );
    ( [@GP_Sloc:trains.adb:121:38] ([#"trains.adb" 121 0 0] ()) );
    ( [@GP_Sloc:trains.adb:121:7] ([#"trains.adb" 121 0 0] (if (( ([#"trains.adb" 121 0 0] [#"trains.adb" 121 0 0] (([@branch_id=2871] Main.spark__branch).bool__content <- ( (Boolean.andb(((Trains__velocity__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed)) = (0 : int))) (((Trains__reactorstate__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate)) = (0 : int)))) )));
    ( [@branch_id=2871] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:trains.adb:122:12] ([#"trains.adb" 122 0 0] ()) );
     ( [@GP_Sloc:trains.adb:122:34] ([#"trains.adb" 122 0 0] ()) );
     ( [@GP_Sloc:trains.adb:122:31] ([#"trains.adb" 122 0 0] (let temp___341 [@mlw:proxy_symbol] [@introduced] = (let temp___340 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
      ( [#"trains.adb" 122 0 0] begin ensures {true} let _ = (let _ = temp___340.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed in (
       ()))
       in () end ;
      { ( temp___340 ) with Trains__trains.__split_fields = { ( temp___340.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__currentspeed = (Trains__velocity__rep.of_rep(([#"trains.adb" 122 0 0] ( [@comment:      then Train.currentSpeed := Train.currentSpeed + 10;                                                     ^ trains.adb:122:53:VC_RANGE_CHECK] [@GP_Shape:if__train_assign__add] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Id:25] [@GP_Sloc:trains.adb:122:53] (Trains__velocity.range_check_(((Trains__velocity__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed)) + (10 : int)))) )))) } } )))
      in (
       (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___341.Trains__trains.__split_fields ))))
     ) );
     ( [@GP_Sloc:trains.adb:123:10] ([#"trains.adb" 123 0 0] ()) );
     ( [@GP_Sloc:trains.adb:123:22] ([#"trains.adb" 123 0 0] [#"trains.adb" 123 0 0] (Trains__trainstart1.trainstart1.bool__content <- ( (Boolean.of_int((1 : int))) ))) );
     ( [@GP_Sloc:trains.adb:124:10] ([#"trains.adb" 124 0 0] ()) );
     ( [@GP_Sloc:trains.adb:124:22] ([#"trains.adb" 124 0 0] [#"trains.adb" 124 0 0] (Trains__trainstart2.trainstart2.bool__content <- ( (Boolean.of_int((1 : int))) ))) ) )) else (
     ( ();
     ( [@GP_Sloc:trains.adb:126:10] ([#"trains.adb" 126 0 0] ()) );
     ( [@GP_Sloc:trains.adb:126:28] ([#"trains.adb" 126 0 0] [#"trains.adb" 126 0 0] (Trains__trainneedsreactor.trainneedsreactor.bool__content <- ( (Boolean.of_int((1 : int))) ))) ) )))) );
     raise Return__exc )
   with
    Return__exc -> ()
   end;
    begin ensures {true} let _ = (let _ = ((Trains__velocity__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed)) = (temp___old_342 + (10 : int))) in (
    ()))
    in () end  )))
   )
end

(* Module for checking contracts and absence of run-time errors in subprogram "calculatepower" defined at trains.ads:123, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__calculatepower__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Boolean as Boolean
 use        Standard__integer as Standard__integer
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__calculatepower__power as Trains__calculatepower__power
 use        Trains__TcontrolrodsB as Trains__TcontrolrodsB
 use        Trains__controlrods as Trains__controlrods
 use        Trains__controlrods__rep as Trains__controlrods__rep
 use        Trains__powersupply as Trains__powersupply
 use        Trains__powersupply__rep as Trains__powersupply__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Trains__calculatepower__power___axiom as Trains__calculatepower__power___axiom
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom
 use        Trains__TcontrolrodsB___axiom as Trains__TcontrolrodsB___axiom

 let def [#"trains.ads" 123 0 0][@GP_Subp:trains.ads:123] 
   (__void_param : unit)
  requires { [#"trains.ads" 123 0 0] true }
  ensures { [#"trains.ads" 123 0 0] ([#"trains.ads" 127 0 0] ( [@GP_Sloc:trains.ads:127:14] [@GP_Reason:VC_POSTCONDITION] [@GP_Id:30] [@model_vc_post] [@GP_Shape:pragargs__and] [@comment:     Post => train.trainReactors.amountOfPower >= PowerSupply'First and              ^ trains.ads:127:14:VC_POSTCONDITION] ( ( [@GP_Sloc:trains.ads:127:14] [@GP_Pretty_Ada:4627] ((Trains__powersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower) >= (0 : int)) ) /\ ( [@GP_Pretty_Ada:4637] [@GP_Sloc:trains.ads:128:14] ((Trains__powersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower) <= (10 : int)) ) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:123 *)
  ;
   assume {  (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:123 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:123 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb(((Trains__powersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower)) > (0 : int))) (((Trains__powersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower)) < (10 : int))))) (((Trains__reactorstate__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate)) = (0 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:123 *)
  ;
   assume {  ( ( ( [@GP_Pretty_Ada:4597] ((Trains__powersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower) > (0 : int)) ) /\ ( [@GP_Pretty_Ada:4607] ((Trains__powersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower) < (10 : int)) ) ) /\ ( [@GP_Pretty_Ada:4617] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (0 : int)) ) ) };
   try
   ( ();
   ([#"trains.adb" 133 0 0] ( [#"trains.adb" 133 0 0] (Trains__calculatepower__power.power.int__content <- ( (10 : int) ));
   [#"trains.adb" 133 0 0] assume { [#"trains.adb" 133 0 0] (Standard__integer___axiom.dynamic_invariant Trains__calculatepower__power.power.int__content True False True True) } ));
   ();
   ( [@GP_Sloc:trains.adb:135:7] ([#"trains.adb" 135 0 0] ()) );
   ( [@GP_Sloc:trains.adb:135:17] ([#"trains.adb" 135 0 0] ()) );
   ( [@GP_Sloc:trains.adb:135:34] ([#"trains.adb" 135 0 0] ()) );
   ( [@GP_Sloc:trains.adb:135:13] ([#"trains.adb" 135 0 0] [#"trains.adb" 135 0 0] (Trains__calculatepower__power.power.int__content <- ( ([#"trains.adb" 135 0 0] ( [@GP_Sloc:trains.adb:135:23] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@GP_Shape:power_assign__sub] [@comment:      power :=  power - Integer((Train.trainReactors.noControlRods * 2));                       ^ trains.adb:135:23:VC_OVERFLOW_CHECK] [@GP_Id:28] (Standard__integer.range_check_((Trains__calculatepower__power.power.int__content - ([#"trains.adb" 135 0 0] ( [@GP_Sloc:trains.adb:135:68] [@vc:annotation] [@GP_Shape:power_assign__sub__typeconv__mult] [@GP_Reason:VC_OVERFLOW_CHECK] [@comment:      power :=  power - Integer((Train.trainReactors.noControlRods * 2));                                                                    ^ trains.adb:135:68:VC_OVERFLOW_CHECK] [@GP_Id:27] (Trains__TcontrolrodsB.range_check_(((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) * (2 : int)))) ))))) )) ))) );
   ( [@GP_Sloc:trains.adb:136:7] ([#"trains.adb" 136 0 0] ()) );
   ( [@GP_Sloc:trains.adb:136:56] ([#"trains.adb" 136 0 0] ()) );
   ( [@GP_Sloc:trains.adb:136:41] ([#"trains.adb" 136 0 0] (let temp___345 [@mlw:proxy_symbol] [@introduced] = (let temp___344 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
    ( [#"trains.adb" 136 0 0] begin ensures {true} let _ = (let _ = temp___344.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
     ()))
     in () end ;
    { ( temp___344 ) with Trains__trains.__split_fields = { ( temp___344.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___343 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
     ( [#"trains.adb" 136 0 0] begin ensures {true} let _ = (let _ = temp___343.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower in (
      ()))
      in () end ;
     { ( temp___343 ) with Trains__reactors.__split_fields = { ( temp___343.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__amountofpower = (Trains__powersupply__rep.of_rep(([#"trains.adb" 136 0 0] ( [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Shape:train_assign__typeconv] [@GP_Sloc:trains.adb:136:56] [@comment:      Train.trainReactors.amountOfPower := PowerSupply(power);                                                        ^ trains.adb:136:56:VC_RANGE_CHECK] [@GP_Id:29] (Trains__powersupply.range_check_(Trains__calculatepower__power.power.int__content)) )))) } } )))
     } } )))
    in (
     (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___345.Trains__trains.__split_fields ))))
   ) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Trains__powersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower)) >= (0 : int))) (((Trains__powersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower)) <= (10 : int)))) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "calculatespeed" defined at trains.ads:130, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__calculatespeed__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Standard__integer as Standard__integer
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__trainstart2 as Trains__trainstart2
 use        Trains__calculatespeed__speed as Trains__calculatespeed__speed
 use        Trains__TpowersupplyB as Trains__TpowersupplyB
 use        Trains__powersupply as Trains__powersupply
 use        Trains__powersupply__rep as Trains__powersupply__rep
 use        Trains__TcarriagesB as Trains__TcarriagesB
 use        Trains__carriages as Trains__carriages
 use        Trains__carriages__rep as Trains__carriages__rep
 use        Trains__velocity as Trains__velocity
 use        Trains__velocity__rep as Trains__velocity__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Trains__calculatespeed__speed___axiom as Trains__calculatespeed__speed___axiom
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom
 use        Trains__trainstart2___axiom as Trains__trainstart2___axiom
 use        Trains__TpowersupplyB___axiom as Trains__TpowersupplyB___axiom
 use        Trains__TcarriagesB___axiom as Trains__TcarriagesB___axiom

 let def [#"trains.ads" 130 0 0][@GP_Subp:trains.ads:130] 
   (__void_param : unit)
  requires { [#"trains.ads" 130 0 0] true }
  ensures { [#"trains.ads" 130 0 0] ([#"trains.ads" 135 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@comment:     Post => Train.currentSpeed >= Velocity'First and Train.currentSpeed <= Velocity'Last;              ^ trains.ads:135:14:VC_POSTCONDITION] [@GP_Sloc:trains.ads:135:14] [@GP_Id:36] [@model_vc_post] [@GP_Shape:pragargs__and] ( ( [@GP_Sloc:trains.ads:135:14] [@GP_Pretty_Ada:4692] ((Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed) >= (0 : int)) ) /\ ( [@GP_Sloc:trains.ads:135:55] [@GP_Pretty_Ada:4700] ((Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed) <= (100 : int)) ) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:130 *)
  ;
   assume {  (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:130 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:130 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb(((Trains__velocity__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed)) > (0 : int))) (((Trains__velocity__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed)) < (100 : int))))) (((Trains__reactorstate__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate)) = (0 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:130 *)
  ;
   assume {  ( ( ( [@GP_Pretty_Ada:4666] ((Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed) > (0 : int)) ) /\ ( [@GP_Pretty_Ada:4674] ((Trains__velocity__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed) < (100 : int)) ) ) /\ ( [@GP_Pretty_Ada:4684] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (0 : int)) ) ) };
   try
   ( ();
   ([#"trains.adb" 142 0 0] ( [#"trains.adb" 142 0 0] (Trains__calculatespeed__speed.speed.int__content <- ( (0 : int) ));
   [#"trains.adb" 142 0 0] assume { [#"trains.adb" 142 0 0] (Standard__integer___axiom.dynamic_invariant Trains__calculatespeed__speed.speed.int__content True False True True) } ));
   ();
   ( [@GP_Sloc:trains.adb:144:11] ([#"trains.adb" 144 0 0] ()) );
   ( [@GP_Sloc:trains.adb:144:60] ([#"trains.adb" 144 0 0] ()) );
   ( [@GP_Sloc:trains.adb:144:7] ([#"trains.adb" 144 0 0] (if (( ([#"trains.adb" 144 0 0] [#"trains.adb" 144 0 0] (([@branch_id=2971] Main.spark__branch).bool__content <- ( (Boolean.orb(((Trains__reactorstate__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate)) = (1 : int))) (((Boolean.to_int(Trains__trainstart2.trainstart2.bool__content)) = (Boolean.to_int((Boolean.of_int((0 : int)))))))) )));
   ( [@branch_id=2971] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:trains.adb:145:12] ([#"trains.adb" 145 0 0] ()) );
    ( [@GP_Sloc:trains.adb:145:18] ([#"trains.adb" 145 0 0] [#"trains.adb" 145 0 0] (Trains__calculatespeed__speed.speed.int__content <- ( (0 : int) ))) );
    ( [@GP_Sloc:trains.adb:146:10] ([#"trains.adb" 146 0 0] ()) );
    ( [@GP_Sloc:trains.adb:146:41] ([#"trains.adb" 146 0 0] ()) );
    ( [@GP_Sloc:trains.adb:146:29] ([#"trains.adb" 146 0 0] (let temp___347 [@mlw:proxy_symbol] [@introduced] = (let temp___346 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
     ( [#"trains.adb" 146 0 0] begin ensures {true} let _ = (let _ = temp___346.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed in (
      ()))
      in () end ;
     { ( temp___346 ) with Trains__trains.__split_fields = { ( temp___346.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__currentspeed = (Trains__velocity__rep.of_rep(([#"trains.adb" 146 0 0] ( [@GP_Shape:if__train_assign__typeconv] [@vc:annotation] [@GP_Id:31] [@GP_Reason:VC_RANGE_CHECK] [@comment:         Train.currentSpeed := Velocity(speed);                                         ^ trains.adb:146:41:VC_RANGE_CHECK] [@GP_Sloc:trains.adb:146:41] (Trains__velocity.range_check_(Trains__calculatespeed__speed.speed.int__content)) )))) } } )))
     in (
      (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___347.Trains__trains.__split_fields ))))
    ) ) )) else (
    ( ();
    ( [@GP_Sloc:trains.adb:147:15] ([#"trains.adb" 147 0 0] ()) );
    ( [@GP_Sloc:trains.adb:147:12] ([#"trains.adb" 147 0 0] (if (( ([#"trains.adb" 147 0 0] [#"trains.adb" 147 0 0] (([@branch_id=2993] Main.spark__branch).bool__content <- ( ((Trains__reactorstate__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate)) = (0 : int)) )));
    ( [@branch_id=2993] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:trains.adb:148:16] ([#"trains.adb" 148 0 0] ()) );
     ( [@GP_Sloc:trains.adb:148:25] ([#"trains.adb" 148 0 0] ()) );
     ( [@GP_Sloc:trains.adb:148:43] ([#"trains.adb" 148 0 0] ()) );
     ( [@GP_Sloc:trains.adb:148:94] ([#"trains.adb" 148 0 0] ()) );
     ( [@GP_Sloc:trains.adb:148:22] ([#"trains.adb" 148 0 0] [#"trains.adb" 148 0 0] (Trains__calculatespeed__speed.speed.int__content <- ( ([#"trains.adb" 148 0 0] ( [@GP_Sloc:trains.adb:148:31] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@comment:         then  speed := speed + (Integer((Train.trainReactors.amountOfPower * 10)) - Integer(Train.noCarriages * 5));                               ^ trains.adb:148:31:VC_OVERFLOW_CHECK] [@GP_Id:34] [@GP_Shape:if__if__speed_assign__add] (Standard__integer.range_check_((Trains__calculatespeed__speed.speed.int__content + (([#"trains.adb" 148 0 0] ( [@GP_Sloc:trains.adb:148:77] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@GP_Id:32] [@comment:         then  speed := speed + (Integer((Train.trainReactors.amountOfPower * 10)) - Integer(Train.noCarriages * 5));                                                                             ^ trains.adb:148:77:VC_OVERFLOW_CHECK] [@GP_Shape:if__if__speed_assign__add__sub__typeconv__mult] (Trains__TpowersupplyB.range_check_(((Trains__powersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower)) * (10 : int)))) )) - ([#"trains.adb" 148 0 0] ( [@comment:         then  speed := speed + (Integer((Train.trainReactors.amountOfPower * 10)) - Integer(Train.noCarriages * 5));                                                                                                                ^ trains.adb:148:112:VC_OVERFLOW_CHECK] [@GP_Sloc:trains.adb:148:112] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@GP_Id:33] [@GP_Shape:if__if__speed_assign__add__sub__typeconv__mult] (Trains__TcarriagesB.range_check_(((Trains__carriages__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages)) * (5 : int)))) )))))) )) ))) );
     ( [@GP_Sloc:trains.adb:149:17] ([#"trains.adb" 149 0 0] ()) );
     ( [@GP_Sloc:trains.adb:149:13] ([#"trains.adb" 149 0 0] (if (( ([#"trains.adb" 149 0 0] [#"trains.adb" 149 0 0] (([@branch_id=3022] Main.spark__branch).bool__content <- ( (Trains__calculatespeed__speed.speed.int__content < (0 : int)) )));
     ( [@branch_id=3022] Main.spark__branch ).bool__content )) then (
      ( ();
      ( [@GP_Sloc:trains.adb:150:18] ([#"trains.adb" 150 0 0] ()) );
      ( [@GP_Sloc:trains.adb:150:37] ([#"trains.adb" 150 0 0] (let temp___349 [@mlw:proxy_symbol] [@introduced] = (let temp___348 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
       ( [#"trains.adb" 150 0 0] begin ensures {true} let _ = (let _ = temp___348.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed in (
        ()))
        in () end ;
       { ( temp___348 ) with Trains__trains.__split_fields = { ( temp___348.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__currentspeed = ( 0 : Trains__velocity.velocity ) } } )))
       in (
       [#"trains.adb" 150 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___349.Trains__trains.__split_fields ))))
      ) ) )) else (
      ( ();
      ( [@GP_Sloc:trains.adb:151:22] ([#"trains.adb" 151 0 0] ()) );
      ( [@GP_Sloc:trains.adb:151:18] ([#"trains.adb" 151 0 0] (if (( ([#"trains.adb" 151 0 0] [#"trains.adb" 151 0 0] (([@branch_id=3033] Main.spark__branch).bool__content <- ( (Boolean.of_int((1 : int))) )));
      ( [@branch_id=3033] Main.spark__branch ).bool__content )) then (
       ( ();
       ( [@GP_Sloc:trains.adb:152:18] ([#"trains.adb" 152 0 0] ()) );
       ( [@GP_Sloc:trains.adb:152:49] ([#"trains.adb" 152 0 0] ()) );
       ( [@GP_Sloc:trains.adb:152:37] ([#"trains.adb" 152 0 0] (let temp___351 [@mlw:proxy_symbol] [@introduced] = (let temp___350 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
        ( [#"trains.adb" 152 0 0] begin ensures {true} let _ = (let _ = temp___350.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed in (
         ()))
         in () end ;
        { ( temp___350 ) with Trains__trains.__split_fields = { ( temp___350.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__currentspeed = (Trains__velocity__rep.of_rep(([#"trains.adb" 152 0 0] ( [@vc:annotation] [@comment:            then Train.currentSpeed := Velocity(speed);                                                 ^ trains.adb:152:49:VC_RANGE_CHECK] [@GP_Sloc:trains.adb:152:49] [@GP_Id:35] [@GP_Reason:VC_RANGE_CHECK] [@GP_Shape:if__if__if__if__train_assign__typeconv] (Trains__velocity.range_check_(Trains__calculatespeed__speed.speed.int__content)) )))) } } )))
        in (
         (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___351.Trains__trains.__split_fields ))))
       ) ) )) else (
       ()))) ) )))) ) )) else (
     ()))) ) )))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Trains__velocity__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed)) >= (0 : int))) (((Trains__velocity__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed)) <= (100 : int)))) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "calculatetemperature" defined at trains.ads:137, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__calculatetemperature__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Standard__integer as Standard__integer
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__calculatetemperature__temperature as Trains__calculatetemperature__temperature
 use        Trains__temp as Trains__temp
 use        Trains__temp__rep as Trains__temp__rep
 use        Trains__TcontrolrodsB as Trains__TcontrolrodsB
 use        Trains__controlrods as Trains__controlrods
 use        Trains__controlrods__rep as Trains__controlrods__rep
 use        Trains__TwatersupplyB as Trains__TwatersupplyB
 use        Trains__watersupply as Trains__watersupply
 use        Trains__watersupply__rep as Trains__watersupply__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Trains__calculatetemperature__temperature___axiom as Trains__calculatetemperature__temperature___axiom
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom
 use        Trains__TcontrolrodsB___axiom as Trains__TcontrolrodsB___axiom
 use        Trains__TwatersupplyB___axiom as Trains__TwatersupplyB___axiom

 let def [#"trains.ads" 137 0 0][@GP_Subp:trains.ads:137] 
   (__void_param : unit)
  requires { [#"trains.ads" 137 0 0] true }
  ensures { [#"trains.ads" 137 0 0] ([#"trains.ads" 141 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Id:42] [@GP_Sloc:trains.ads:141:14] [@model_vc_post] [@comment:     Post => train.trainReactors.currentTemp >= Temp'First and train.trainReactors.currentTemp <= Temp'last;              ^ trains.ads:141:14:VC_POSTCONDITION] [@GP_Shape:pragargs__and] ( ( [@GP_Pretty_Ada:4758] [@GP_Sloc:trains.ads:141:14] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) >= (0 : int)) ) /\ ( [@GP_Sloc:trains.ads:141:64] [@GP_Pretty_Ada:4768] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) <= (100 : int)) ) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:137 *)
  ;
   assume {  (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:137 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:137 *)
  ;
   begin ensures {true} let _ = (let _ = (Boolean.andb((Boolean.andb(((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) > (0 : int))) (((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) < (100 : int))))) (((Trains__reactorstate__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate)) = (0 : int)))) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:137 *)
  ;
   assume {  ( ( ( [@GP_Pretty_Ada:4728] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) > (0 : int)) ) /\ ( [@GP_Pretty_Ada:4738] ((Trains__temp__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp) < (100 : int)) ) ) /\ ( [@GP_Pretty_Ada:4748] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (0 : int)) ) ) };
   try
   ( ();
   ([#"trains.adb" 161 0 0] ( [#"trains.adb" 161 0 0] (Trains__calculatetemperature__temperature.temperature.int__content <- ( (100 : int) ));
   [#"trains.adb" 161 0 0] assume { [#"trains.adb" 161 0 0] (Standard__integer___axiom.dynamic_invariant Trains__calculatetemperature__temperature.temperature.int__content True False True True) } ));
   ();
   ( [@GP_Sloc:trains.adb:163:7] ([#"trains.adb" 163 0 0] ()) );
   ( [@GP_Sloc:trains.adb:163:22] ([#"trains.adb" 163 0 0] ()) );
   ( [@GP_Sloc:trains.adb:163:45] ([#"trains.adb" 163 0 0] ()) );
   ( [@GP_Sloc:trains.adb:163:95] ([#"trains.adb" 163 0 0] ()) );
   ( [@GP_Sloc:trains.adb:163:19] ([#"trains.adb" 163 0 0] [#"trains.adb" 163 0 0] (Trains__calculatetemperature__temperature.temperature.int__content <- ( ([#"trains.adb" 163 0 0] ( [@GP_Id:40] [@GP_Shape:temperature_assign__sub] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@comment:      temperature := temperature - Integer((Train.trainReactors.noControlRods * 5)) - Integer(Train.trainReactors.amountOfWater * 10);                                                                                     ^ trains.adb:163:85:VC_OVERFLOW_CHECK] [@GP_Sloc:trains.adb:163:85] (Standard__integer.range_check_((([#"trains.adb" 163 0 0] ( [@GP_Sloc:trains.adb:163:34] [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@GP_Shape:temperature_assign__sub__sub] [@GP_Id:38] [@comment:      temperature := temperature - Integer((Train.trainReactors.noControlRods * 5)) - Integer(Train.trainReactors.amountOfWater * 10);                                  ^ trains.adb:163:34:VC_OVERFLOW_CHECK] (Standard__integer.range_check_((Trains__calculatetemperature__temperature.temperature.int__content - ([#"trains.adb" 163 0 0] ( [@GP_Sloc:trains.adb:163:79] [@vc:annotation] [@GP_Shape:temperature_assign__sub__sub__typeconv__mult] [@comment:      temperature := temperature - Integer((Train.trainReactors.noControlRods * 5)) - Integer(Train.trainReactors.amountOfWater * 10);                                                                               ^ trains.adb:163:79:VC_OVERFLOW_CHECK] [@GP_Reason:VC_OVERFLOW_CHECK] [@GP_Id:37] (Trains__TcontrolrodsB.range_check_(((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) * (5 : int)))) ))))) )) - ([#"trains.adb" 163 0 0] ( [@vc:annotation] [@GP_Reason:VC_OVERFLOW_CHECK] [@comment:      temperature := temperature - Integer((Train.trainReactors.noControlRods * 5)) - Integer(Train.trainReactors.amountOfWater * 10);                                                                                                                                 ^ trains.adb:163:129:VC_OVERFLOW_CHECK] [@GP_Id:39] [@GP_Sloc:trains.adb:163:129] [@GP_Shape:temperature_assign__sub__typeconv__mult] (Trains__TwatersupplyB.range_check_(((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) * (10 : int)))) ))))) )) ))) );
   ( [@GP_Sloc:trains.adb:164:11] ([#"trains.adb" 164 0 0] ()) );
   ( [@GP_Sloc:trains.adb:164:7] ([#"trains.adb" 164 0 0] (if (( ([#"trains.adb" 164 0 0] [#"trains.adb" 164 0 0] (([@branch_id=3090] Main.spark__branch).bool__content <- ( (Trains__calculatetemperature__temperature.temperature.int__content < (0 : int)) )));
   ( [@branch_id=3090] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:trains.adb:165:12] ([#"trains.adb" 165 0 0] ()) );
    ( [@GP_Sloc:trains.adb:165:44] ([#"trains.adb" 165 0 0] (let temp___354 [@mlw:proxy_symbol] [@introduced] = (let temp___353 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
     ( [#"trains.adb" 165 0 0] begin ensures {true} let _ = (let _ = temp___353.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ()))
      in () end ;
     { ( temp___353 ) with Trains__trains.__split_fields = { ( temp___353.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___352 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
      ( [#"trains.adb" 165 0 0] begin ensures {true} let _ = (let _ = temp___352.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp in (
       ()))
       in () end ;
      { ( temp___352 ) with Trains__reactors.__split_fields = { ( temp___352.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__currenttemp = ( 0 : Trains__temp.temp ) } } )))
      } } )))
     in (
     [#"trains.adb" 165 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___354.Trains__trains.__split_fields ))))
    ) ) )) else (
    ( ();
    ( [@GP_Sloc:trains.adb:166:16] ([#"trains.adb" 166 0 0] ()) );
    ( [@GP_Sloc:trains.adb:166:12] ([#"trains.adb" 166 0 0] (if (( ([#"trains.adb" 166 0 0] [#"trains.adb" 166 0 0] (([@branch_id=3103] Main.spark__branch).bool__content <- ( (Boolean.of_int((1 : int))) )));
    ( [@branch_id=3103] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:trains.adb:167:15] ([#"trains.adb" 167 0 0] ()) );
     ( [@GP_Sloc:trains.adb:167:55] ([#"trains.adb" 167 0 0] ()) );
     ( [@GP_Sloc:trains.adb:167:47] ([#"trains.adb" 167 0 0] (let temp___357 [@mlw:proxy_symbol] [@introduced] = (let temp___356 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
      ( [#"trains.adb" 167 0 0] begin ensures {true} let _ = (let _ = temp___356.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
       ()))
       in () end ;
      { ( temp___356 ) with Trains__trains.__split_fields = { ( temp___356.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___355 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
       ( [#"trains.adb" 167 0 0] begin ensures {true} let _ = (let _ = temp___355.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp in (
        ()))
        in () end ;
       { ( temp___355 ) with Trains__reactors.__split_fields = { ( temp___355.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__currenttemp = (Trains__temp__rep.of_rep(([#"trains.adb" 167 0 0] ( [@GP_Sloc:trains.adb:167:55] [@GP_Id:41] [@vc:annotation] [@comment:         then Train.trainReactors.currentTemp := Temp(temperature);                                                       ^ trains.adb:167:55:VC_RANGE_CHECK] [@GP_Reason:VC_RANGE_CHECK] [@GP_Shape:if__if__train_assign__typeconv] (Trains__temp.range_check_(Trains__calculatetemperature__temperature.temperature.int__content)) )))) } } )))
       } } )))
      in (
       (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___357.Trains__trains.__split_fields ))))
     ) ) )) else (
     ()))) ) )))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) >= (0 : int))) (((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp)) <= (100 : int)))) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "displayall" defined at trains.ads:143, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__displayall__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Integer as Integer
 use        "_gnatprove_standard".Boolean as Boolean
 use        Standard_String__Img as Standard_String__Img
 use        Standard__positive as Standard__positive
 use        Array__Int__Standard__character__Concat as Array__Int__Standard__character__Concat
 use        Standard__string as Standard__string
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__reactorshutdown as Trains__reactorshutdown
 use        Trains__reactorneedscontrol as Trains__reactorneedscontrol
 use        Trains__reactorneedscoolant as Trains__reactorneedscoolant
 use        Trains__reactoremer as Trains__reactoremer
 use        Trains__reactormaintenance as Trains__reactormaintenance
 use        Trains__reactornotoff as Trains__reactornotoff
 use        Trains__trainstart1 as Trains__trainstart1
 use        Trains__trainneedsreactor as Trains__trainneedsreactor
 use        Ada__text_io__put_line__2___axiom as Ada__text_io__put_line__2___axiom
 use        Ada__text_io__put__4___axiom as Ada__text_io__put__4___axiom
 use        Trains__temp as Trains__temp
 use        Trains__temp__rep as Trains__temp__rep
 use        Trains__controlrods as Trains__controlrods
 use        Trains__controlrods__rep as Trains__controlrods__rep
 use        Trains__watersupply as Trains__watersupply
 use        Trains__watersupply__rep as Trains__watersupply__rep
 use        Trains__powersupply as Trains__powersupply
 use        Trains__powersupply__rep as Trains__powersupply__rep
 use        Trains__carriages as Trains__carriages
 use        Trains__carriages__rep as Trains__carriages__rep
 use        Trains__velocity as Trains__velocity
 use        Trains__velocity__rep as Trains__velocity__rep
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep
 use        Trains__lights as Trains__lights
 use        Trains__lights__rep as Trains__lights__rep
 use        Temp___String_Literal_358 as Temp___String_Literal_358
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_359 as Temp___String_Literal_359
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_360 as Temp___String_Literal_360
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_361 as Temp___String_Literal_361
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_362 as Temp___String_Literal_362
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_363 as Temp___String_Literal_363
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_368 as Temp___String_Literal_368
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_369 as Temp___String_Literal_369
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_374 as Temp___String_Literal_374
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_375 as Temp___String_Literal_375
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_376 as Temp___String_Literal_376
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_377 as Temp___String_Literal_377
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_382 as Temp___String_Literal_382
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_383 as Temp___String_Literal_383
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_388 as Temp___String_Literal_388
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_389 as Temp___String_Literal_389
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_394 as Temp___String_Literal_394
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_395 as Temp___String_Literal_395
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_400 as Temp___String_Literal_400
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_401 as Temp___String_Literal_401
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_406 as Temp___String_Literal_406
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_407 as Temp___String_Literal_407
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_412 as Temp___String_Literal_412
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_413 as Temp___String_Literal_413
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_414 as Temp___String_Literal_414
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_415 as Temp___String_Literal_415
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_416 as Temp___String_Literal_416
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_417 as Temp___String_Literal_417
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_418 as Temp___String_Literal_418
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_419 as Temp___String_Literal_419
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_420 as Temp___String_Literal_420
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_421 as Temp___String_Literal_421
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Temp___String_Literal_422 as Temp___String_Literal_422
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Array__Int__Standard__character as Array__Int__Standard__character
 use        Standard__positive___axiom as Standard__positive___axiom
 use        Standard__character___axiom as Standard__character___axiom
 use        Standard__string___axiom as Standard__string___axiom
 use        Standard__integer___axiom as Standard__integer___axiom
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom
 use        Trains__reactorshutdown___axiom as Trains__reactorshutdown___axiom
 use        Trains__reactorneedscontrol___axiom as Trains__reactorneedscontrol___axiom
 use        Trains__reactorneedscoolant___axiom as Trains__reactorneedscoolant___axiom
 use        Trains__reactoremer___axiom as Trains__reactoremer___axiom
 use        Trains__reactormaintenance___axiom as Trains__reactormaintenance___axiom
 use        Trains__reactornotoff___axiom as Trains__reactornotoff___axiom
 use        Trains__trainstart1___axiom as Trains__trainstart1___axiom
 use        Trains__trainneedsreactor___axiom as Trains__trainneedsreactor___axiom
 use        Ada__text_io__count___axiom as Ada__text_io__count___axiom
 use        Ada__text_io__line_length__2___axiom as Ada__text_io__line_length__2___axiom
 use        Ada__text_io__page_length__2___axiom as Ada__text_io__page_length__2___axiom
 use        Ada__text_io__put__4___axiom as Ada__text_io__put__4___axiom
 use        Ada__text_io__put_line__2___axiom as Ada__text_io__put_line__2___axiom

 let def [#"trains.ads" 143 0 0][@GP_Subp:trains.ads:143] 
   (__void_param : unit)
  requires { [#"trains.ads" 143 0 0] true }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:143 *)
  ;
  [#"trains.ads" 143 0 0] assume { [#"trains.ads" 143 0 0] (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:143 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:143 *)
  ;
  [#"trains.ads" 143 0 0] begin ensures {true} let _ = (let _ = True in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:143 *)
  ;
  [#"trains.ads" 143 0 0] try
   ( ();
   ( [@GP_Sloc:trains.adb:189:18] ([#"trains.adb" 189 0 0] ()) );
   ( [@GP_Sloc:trains.adb:189:18] ([#"trains.adb" 189 0 0] ( (Ada__text_io__put__4___axiom.put__4((Standard__string.of_array((Temp___String_Literal_358.temp___String_Literal_358(()))) ((1 : int)) ((4 : int))))) )) );
   ( [@GP_Sloc:trains.adb:190:7] ([#"trains.adb" 190 0 0] ()) );
   ( [@GP_Sloc:trains.adb:190:7] ([#"trains.adb" 190 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((Standard__string.of_array((Temp___String_Literal_359.temp___String_Literal_359(()))) ((1 : int)) ((81 : int))))) )) );
   ( [@GP_Sloc:trains.adb:191:7] ([#"trains.adb" 191 0 0] ()) );
   ( [@GP_Sloc:trains.adb:191:7] ([#"trains.adb" 191 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((Standard__string.of_array((Temp___String_Literal_360.temp___String_Literal_360(()))) ((1 : int)) ((90 : int))))) )) );
   ( [@GP_Sloc:trains.adb:192:7] ([#"trains.adb" 192 0 0] ()) );
   ( [@GP_Sloc:trains.adb:192:7] ([#"trains.adb" 192 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((Standard__string.of_array((Temp___String_Literal_361.temp___String_Literal_361(()))) ((1 : int)) ((86 : int))))) )) );
   ( [@GP_Sloc:trains.adb:193:7] ([#"trains.adb" 193 0 0] ()) );
   ( [@GP_Sloc:trains.adb:193:7] ([#"trains.adb" 193 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((let temp___367 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_362.temp___String_Literal_362(())) in (
   (let temp___366 [@mlw:proxy_symbol] [@introduced] = (let temp___365 [@mlw:proxy_symbol] [@introduced] = (Standard_String__Img.to_string((Trains__velocity.attr__ATTRIBUTE_IMAGE((Trains__velocity__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__currentspeed))))) ((5 : int))) in (
   (let temp___364 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_363.temp___String_Literal_363(())) in (
    (Standard__string.of_array((Array__Int__Standard__character__Concat.concat(temp___364) ((1 : int)) ((15 : int)) ((Standard__string.to_array(temp___365))) ((Standard__string.first(temp___365))) ((Standard__string.last(temp___365))))) ((1 : int)) (([#"trains.adb" 193 0 0] ( [@GP_Id:43] [@GP_Sloc:trains.adb:193:34] [@vc:annotation] [@comment:      Put_Line ("Current Speed: "&Train.currentSpeed'Image & " mph                                              3. Train Start");                                  ^ trains.adb:193:34:VC_RANGE_CHECK] [@GP_Reason:VC_RANGE_CHECK] [@GP_Shape:call_put_line__2__concat__concat] (Standard__positive.range_check_((((1 : int) + ((Integer.length((1 : int)) ((15 : int))) + (Integer.length((Standard__string.first(temp___365))) ((Standard__string.last(temp___365)))))) - (1 : int)))) ))))))
   ))
    in (
    (if (((Standard__string.length(temp___366)) = (0 : int))) then (
     (Standard__string.of_array(temp___367) ((1 : int)) ((64 : int)))) else (
     (Standard__string.of_array((Array__Int__Standard__character__Concat.concat((Standard__string.to_array(temp___366))) ((Standard__string.first(temp___366))) ((Standard__string.last(temp___366))) (temp___367) ((1 : int)) ((64 : int)))) ((Standard__string.first(temp___366))) (([#"trains.adb" 193 0 0] ( [@comment:      Put_Line ("Current Speed: "&Train.currentSpeed'Image & " mph                                              3. Train Start");                                                            ^ trains.adb:193:60:VC_RANGE_CHECK] [@GP_Id:44] [@vc:annotation] [@GP_Sloc:trains.adb:193:60] [@GP_Reason:VC_RANGE_CHECK] [@GP_Shape:call_put_line__2__concat] (Standard__positive.range_check_((((Standard__string.first(temp___366)) + ((Integer.length((Standard__string.first(temp___366))) ((Standard__string.last(temp___366)))) + (Integer.length((1 : int)) ((64 : int))))) - (1 : int)))) ))))))))
   ))
   )) )) );
   ( [@GP_Sloc:trains.adb:194:7] ([#"trains.adb" 194 0 0] ()) );
   ( [@GP_Sloc:trains.adb:194:7] ([#"trains.adb" 194 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((let temp___373 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_368.temp___String_Literal_368(())) in (
   (let temp___372 [@mlw:proxy_symbol] [@introduced] = (let temp___371 [@mlw:proxy_symbol] [@introduced] = (Standard_String__Img.to_string((Trains__carriages.attr__ATTRIBUTE_IMAGE((Trains__carriages__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__nocarriages))))) ((5 : int))) in (
   (let temp___370 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_369.temp___String_Literal_369(())) in (
    (Standard__string.of_array((Array__Int__Standard__character__Concat.concat(temp___370) ((1 : int)) ((21 : int)) ((Standard__string.to_array(temp___371))) ((Standard__string.first(temp___371))) ((Standard__string.last(temp___371))))) ((1 : int)) (([#"trains.adb" 194 0 0] ( [@GP_Id:45] [@GP_Sloc:trains.adb:194:40] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@comment:      Put_Line ("Number of Carriages: "&Train.noCarriages'Image &"                                            4. Add Carriage");                                        ^ trains.adb:194:40:VC_RANGE_CHECK] [@GP_Shape:call_put_line__2__concat__concat] (Standard__positive.range_check_((((1 : int) + ((Integer.length((1 : int)) ((21 : int))) + (Integer.length((Standard__string.first(temp___371))) ((Standard__string.last(temp___371)))))) - (1 : int)))) ))))))
   ))
    in (
    (if (((Standard__string.length(temp___372)) = (0 : int))) then (
     (Standard__string.of_array(temp___373) ((1 : int)) ((59 : int)))) else (
     (Standard__string.of_array((Array__Int__Standard__character__Concat.concat((Standard__string.to_array(temp___372))) ((Standard__string.first(temp___372))) ((Standard__string.last(temp___372))) (temp___373) ((1 : int)) ((59 : int)))) ((Standard__string.first(temp___372))) (([#"trains.adb" 194 0 0] ( [@GP_Id:46] [@vc:annotation] [@comment:      Put_Line ("Number of Carriages: "&Train.noCarriages'Image &"                                            4. Add Carriage");                                                                 ^ trains.adb:194:65:VC_RANGE_CHECK] [@GP_Reason:VC_RANGE_CHECK] [@GP_Sloc:trains.adb:194:65] [@GP_Shape:call_put_line__2__concat] (Standard__positive.range_check_((((Standard__string.first(temp___372)) + ((Integer.length((Standard__string.first(temp___372))) ((Standard__string.last(temp___372)))) + (Integer.length((1 : int)) ((59 : int))))) - (1 : int)))) ))))))))
   ))
   )) )) );
   ( [@GP_Sloc:trains.adb:195:7] ([#"trains.adb" 195 0 0] ()) );
   ( [@GP_Sloc:trains.adb:195:7] ([#"trains.adb" 195 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((Standard__string.of_array((Temp___String_Literal_374.temp___String_Literal_374(()))) ((1 : int)) ((85 : int))))) )) );
   ( [@GP_Sloc:trains.adb:196:7] ([#"trains.adb" 196 0 0] ()) );
   ( [@GP_Sloc:trains.adb:196:7] ([#"trains.adb" 196 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((Standard__string.of_array((Temp___String_Literal_375.temp___String_Literal_375(()))) ((1 : int)) ((85 : int))))) )) );
   ( [@GP_Sloc:trains.adb:197:7] ([#"trains.adb" 197 0 0] ()) );
   ( [@GP_Sloc:trains.adb:197:7] ([#"trains.adb" 197 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((let temp___381 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_376.temp___String_Literal_376(())) in (
   (let temp___380 [@mlw:proxy_symbol] [@introduced] = (let temp___379 [@mlw:proxy_symbol] [@introduced] = (Standard_String__Img.to_string((Trains__reactorstate.attr__ATTRIBUTE_IMAGE((Trains__reactorstate__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate))))) ((2040 : int))) in (
   (let temp___378 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_377.temp___String_Literal_377(())) in (
    (Standard__string.of_array((Array__Int__Standard__character__Concat.concat(temp___378) ((1 : int)) ((15 : int)) ((Standard__string.to_array(temp___379))) ((Standard__string.first(temp___379))) ((Standard__string.last(temp___379))))) ((1 : int)) (([#"trains.adb" 197 0 0] ( [@GP_Id:47] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Shape:call_put_line__2__concat__concat] [@GP_Sloc:trains.adb:197:34] [@comment:      Put_Line("Reactor State: " &Train.trainReactors.currentReactorState'Image & "                                                 7. Remove Control Rod");                                  ^ trains.adb:197:34:VC_RANGE_CHECK] (Standard__positive.range_check_((((1 : int) + ((Integer.length((1 : int)) ((15 : int))) + (Integer.length((Standard__string.first(temp___379))) ((Standard__string.last(temp___379)))))) - (1 : int)))) ))))))
   ))
    in (
    (if (((Standard__string.length(temp___380)) = (0 : int))) then (
     (Standard__string.of_array(temp___381) ((1 : int)) ((70 : int)))) else (
     (Standard__string.of_array((Array__Int__Standard__character__Concat.concat((Standard__string.to_array(temp___380))) ((Standard__string.first(temp___380))) ((Standard__string.last(temp___380))) (temp___381) ((1 : int)) ((70 : int)))) ((Standard__string.first(temp___380))) (([#"trains.adb" 197 0 0] ( [@GP_Id:48] [@vc:annotation] [@GP_Sloc:trains.adb:197:81] [@GP_Reason:VC_RANGE_CHECK] [@comment:      Put_Line("Reactor State: " &Train.trainReactors.currentReactorState'Image & "                                                 7. Remove Control Rod");                                                                                 ^ trains.adb:197:81:VC_RANGE_CHECK] [@GP_Shape:call_put_line__2__concat] (Standard__positive.range_check_((((Standard__string.first(temp___380)) + ((Integer.length((Standard__string.first(temp___380))) ((Standard__string.last(temp___380)))) + (Integer.length((1 : int)) ((70 : int))))) - (1 : int)))) ))))))))
   ))
   )) )) );
   ( [@GP_Sloc:trains.adb:198:7] ([#"trains.adb" 198 0 0] ()) );
   ( [@GP_Sloc:trains.adb:198:7] ([#"trains.adb" 198 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((let temp___387 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_382.temp___String_Literal_382(())) in (
   (let temp___386 [@mlw:proxy_symbol] [@introduced] = (let temp___385 [@mlw:proxy_symbol] [@introduced] = (Standard_String__Img.to_string((Trains__lights.attr__ATTRIBUTE_IMAGE((Trains__lights__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__lightstate))))) ((2040 : int))) in (
   (let temp___384 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_383.temp___String_Literal_383(())) in (
    (Standard__string.of_array((Array__Int__Standard__character__Concat.concat(temp___384) ((1 : int)) ((13 : int)) ((Standard__string.to_array(temp___385))) ((Standard__string.first(temp___385))) ((Standard__string.last(temp___385))))) ((1 : int)) (([#"trains.adb" 198 0 0] ( [@GP_Sloc:trains.adb:198:31] [@comment:      Put_Line("Light State: "&Train.trainReactors.lightState'Image & "                                                 8. Increase Coolant");                               ^ trains.adb:198:31:VC_RANGE_CHECK] [@vc:annotation] [@GP_Id:49] [@GP_Reason:VC_RANGE_CHECK] [@GP_Shape:call_put_line__2__concat__concat] (Standard__positive.range_check_((((1 : int) + ((Integer.length((1 : int)) ((13 : int))) + (Integer.length((Standard__string.first(temp___385))) ((Standard__string.last(temp___385)))))) - (1 : int)))) ))))))
   ))
    in (
    (if (((Standard__string.length(temp___386)) = (0 : int))) then (
     (Standard__string.of_array(temp___387) ((1 : int)) ((68 : int)))) else (
     (Standard__string.of_array((Array__Int__Standard__character__Concat.concat((Standard__string.to_array(temp___386))) ((Standard__string.first(temp___386))) ((Standard__string.last(temp___386))) (temp___387) ((1 : int)) ((68 : int)))) ((Standard__string.first(temp___386))) (([#"trains.adb" 198 0 0] ( [@vc:annotation] [@GP_Sloc:trains.adb:198:69] [@GP_Reason:VC_RANGE_CHECK] [@comment:      Put_Line("Light State: "&Train.trainReactors.lightState'Image & "                                                 8. Increase Coolant");                                                                     ^ trains.adb:198:69:VC_RANGE_CHECK] [@GP_Id:50] [@GP_Shape:call_put_line__2__concat] (Standard__positive.range_check_((((Standard__string.first(temp___386)) + ((Integer.length((Standard__string.first(temp___386))) ((Standard__string.last(temp___386)))) + (Integer.length((1 : int)) ((68 : int))))) - (1 : int)))) ))))))))
   ))
   )) )) );
   ( [@GP_Sloc:trains.adb:199:7] ([#"trains.adb" 199 0 0] ()) );
   ( [@GP_Sloc:trains.adb:199:7] ([#"trains.adb" 199 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((let temp___393 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_388.temp___String_Literal_388(())) in (
   (let temp___392 [@mlw:proxy_symbol] [@introduced] = (let temp___391 [@mlw:proxy_symbol] [@introduced] = (Standard_String__Img.to_string((Trains__controlrods.attr__ATTRIBUTE_IMAGE((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods))))) ((5 : int))) in (
   (let temp___390 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_389.temp___String_Literal_389(())) in (
    (Standard__string.of_array((Array__Int__Standard__character__Concat.concat(temp___390) ((1 : int)) ((33 : int)) ((Standard__string.to_array(temp___391))) ((Standard__string.first(temp___391))) ((Standard__string.last(temp___391))))) ((1 : int)) (([#"trains.adb" 199 0 0] ( [@GP_Sloc:trains.adb:199:51] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Shape:call_put_line__2__concat__concat] [@comment:      Put_Line("Number of Control Rods Inserted: "&Train.trainReactors.noControlRods'Image & "                                9. Remove Coolant");                                                   ^ trains.adb:199:51:VC_RANGE_CHECK] [@GP_Id:51] (Standard__positive.range_check_((((1 : int) + ((Integer.length((1 : int)) ((33 : int))) + (Integer.length((Standard__string.first(temp___391))) ((Standard__string.last(temp___391)))))) - (1 : int)))) ))))))
   ))
    in (
    (if (((Standard__string.length(temp___392)) = (0 : int))) then (
     (Standard__string.of_array(temp___393) ((1 : int)) ((49 : int)))) else (
     (Standard__string.of_array((Array__Int__Standard__character__Concat.concat((Standard__string.to_array(temp___392))) ((Standard__string.first(temp___392))) ((Standard__string.last(temp___392))) (temp___393) ((1 : int)) ((49 : int)))) ((Standard__string.first(temp___392))) (([#"trains.adb" 199 0 0] ( [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@comment:      Put_Line("Number of Control Rods Inserted: "&Train.trainReactors.noControlRods'Image & "                                9. Remove Coolant");                                                                                            ^ trains.adb:199:92:VC_RANGE_CHECK] [@GP_Shape:call_put_line__2__concat] [@GP_Sloc:trains.adb:199:92] [@GP_Id:52] (Standard__positive.range_check_((((Standard__string.first(temp___392)) + ((Integer.length((Standard__string.first(temp___392))) ((Standard__string.last(temp___392)))) + (Integer.length((1 : int)) ((49 : int))))) - (1 : int)))) ))))))))
   ))
   )) )) );
   ( [@GP_Sloc:trains.adb:200:7] ([#"trains.adb" 200 0 0] ()) );
   ( [@GP_Sloc:trains.adb:200:7] ([#"trains.adb" 200 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((let temp___399 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_394.temp___String_Literal_394(())) in (
   (let temp___398 [@mlw:proxy_symbol] [@introduced] = (let temp___397 [@mlw:proxy_symbol] [@introduced] = (Standard_String__Img.to_string((Trains__watersupply.attr__ATTRIBUTE_IMAGE((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater))))) ((5 : int))) in (
   (let temp___396 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_395.temp___String_Literal_395(())) in (
    (Standard__string.of_array((Array__Int__Standard__character__Concat.concat(temp___396) ((1 : int)) ((30 : int)) ((Standard__string.to_array(temp___397))) ((Standard__string.first(temp___397))) ((Standard__string.last(temp___397))))) ((1 : int)) (([#"trains.adb" 200 0 0] ( [@comment:      Put_Line("Amount of Coolant In Reactor: " &Train.trainReactors.amountOfWater'Image & "                                   m. Reactor Maintenance");                                                 ^ trains.adb:200:49:VC_RANGE_CHECK] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Sloc:trains.adb:200:49] [@GP_Shape:call_put_line__2__concat__concat] [@GP_Id:53] (Standard__positive.range_check_((((1 : int) + ((Integer.length((1 : int)) ((30 : int))) + (Integer.length((Standard__string.first(temp___397))) ((Standard__string.last(temp___397)))))) - (1 : int)))) ))))))
   ))
    in (
    (if (((Standard__string.length(temp___398)) = (0 : int))) then (
     (Standard__string.of_array(temp___399) ((1 : int)) ((57 : int)))) else (
     (Standard__string.of_array((Array__Int__Standard__character__Concat.concat((Standard__string.to_array(temp___398))) ((Standard__string.first(temp___398))) ((Standard__string.last(temp___398))) (temp___399) ((1 : int)) ((57 : int)))) ((Standard__string.first(temp___398))) (([#"trains.adb" 200 0 0] ( [@GP_Sloc:trains.adb:200:90] [@comment:      Put_Line("Amount of Coolant In Reactor: " &Train.trainReactors.amountOfWater'Image & "                                   m. Reactor Maintenance");                                                                                          ^ trains.adb:200:90:VC_RANGE_CHECK] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Shape:call_put_line__2__concat] [@GP_Id:54] (Standard__positive.range_check_((((Standard__string.first(temp___398)) + ((Integer.length((Standard__string.first(temp___398))) ((Standard__string.last(temp___398)))) + (Integer.length((1 : int)) ((57 : int))))) - (1 : int)))) ))))))))
   ))
   )) )) );
   ( [@GP_Sloc:trains.adb:201:7] ([#"trains.adb" 201 0 0] ()) );
   ( [@GP_Sloc:trains.adb:201:7] ([#"trains.adb" 201 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((let temp___405 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_400.temp___String_Literal_400(())) in (
   (let temp___404 [@mlw:proxy_symbol] [@introduced] = (let temp___403 [@mlw:proxy_symbol] [@introduced] = (Standard_String__Img.to_string((Trains__temp.attr__ATTRIBUTE_IMAGE((Trains__temp__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currenttemp))))) ((5 : int))) in (
   (let temp___402 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_401.temp___String_Literal_401(())) in (
    (Standard__string.of_array((Array__Int__Standard__character__Concat.concat(temp___402) ((1 : int)) ((14 : int)) ((Standard__string.to_array(temp___403))) ((Standard__string.first(temp___403))) ((Standard__string.last(temp___403))))) ((1 : int)) (([#"trains.adb" 201 0 0] ( [@comment:      Put_Line("Current Temp: "&Train.trainReactors.currentTemp'Image & "C                                                  0. Reset Reactor");                                ^ trains.adb:201:32:VC_RANGE_CHECK] [@GP_Sloc:trains.adb:201:32] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Shape:call_put_line__2__concat__concat] [@GP_Id:55] (Standard__positive.range_check_((((1 : int) + ((Integer.length((1 : int)) ((14 : int))) + (Integer.length((Standard__string.first(temp___403))) ((Standard__string.last(temp___403)))))) - (1 : int)))) ))))))
   ))
    in (
    (if (((Standard__string.length(temp___404)) = (0 : int))) then (
     (Standard__string.of_array(temp___405) ((1 : int)) ((67 : int)))) else (
     (Standard__string.of_array((Array__Int__Standard__character__Concat.concat((Standard__string.to_array(temp___404))) ((Standard__string.first(temp___404))) ((Standard__string.last(temp___404))) (temp___405) ((1 : int)) ((67 : int)))) ((Standard__string.first(temp___404))) (([#"trains.adb" 201 0 0] ( [@GP_Id:56] [@GP_Sloc:trains.adb:201:71] [@comment:      Put_Line("Current Temp: "&Train.trainReactors.currentTemp'Image & "C                                                  0. Reset Reactor");                                                                       ^ trains.adb:201:71:VC_RANGE_CHECK] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@GP_Shape:call_put_line__2__concat] (Standard__positive.range_check_((((Standard__string.first(temp___404)) + ((Integer.length((Standard__string.first(temp___404))) ((Standard__string.last(temp___404)))) + (Integer.length((1 : int)) ((67 : int))))) - (1 : int)))) ))))))))
   ))
   )) )) );
   ( [@GP_Sloc:trains.adb:202:7] ([#"trains.adb" 202 0 0] ()) );
   ( [@GP_Sloc:trains.adb:202:7] ([#"trains.adb" 202 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((let temp___411 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_406.temp___String_Literal_406(())) in (
   (let temp___410 [@mlw:proxy_symbol] [@introduced] = (let temp___409 [@mlw:proxy_symbol] [@introduced] = (Standard_String__Img.to_string((Trains__powersupply.attr__ATTRIBUTE_IMAGE((Trains__powersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofpower))))) ((5 : int))) in (
   (let temp___408 [@mlw:proxy_symbol] [@introduced] = (Temp___String_Literal_407.temp___String_Literal_407(())) in (
    (Standard__string.of_array((Array__Int__Standard__character__Concat.concat(temp___408) ((1 : int)) ((32 : int)) ((Standard__string.to_array(temp___409))) ((Standard__string.first(temp___409))) ((Standard__string.last(temp___409))))) ((1 : int)) (([#"trains.adb" 202 0 0] ( [@GP_Id:57] [@GP_Sloc:trains.adb:202:51] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@comment:      Put_Line("Amount of Power Being Produced: " &Train.trainReactors.amountOfPower'Image & " Mwh");                                                   ^ trains.adb:202:51:VC_RANGE_CHECK] [@GP_Shape:call_put_line__2__concat__concat] (Standard__positive.range_check_((((1 : int) + ((Integer.length((1 : int)) ((32 : int))) + (Integer.length((Standard__string.first(temp___409))) ((Standard__string.last(temp___409)))))) - (1 : int)))) ))))))
   ))
    in (
    (if (((Standard__string.length(temp___410)) = (0 : int))) then (
     (Standard__string.of_array(temp___411) ((1 : int)) ((4 : int)))) else (
     (Standard__string.of_array((Array__Int__Standard__character__Concat.concat((Standard__string.to_array(temp___410))) ((Standard__string.first(temp___410))) ((Standard__string.last(temp___410))) (temp___411) ((1 : int)) ((4 : int)))) ((Standard__string.first(temp___410))) (([#"trains.adb" 202 0 0] ( [@GP_Id:58] [@vc:annotation] [@GP_Reason:VC_RANGE_CHECK] [@comment:      Put_Line("Amount of Power Being Produced: " &Train.trainReactors.amountOfPower'Image & " Mwh");                                                                                            ^ trains.adb:202:92:VC_RANGE_CHECK] [@GP_Shape:call_put_line__2__concat] [@GP_Sloc:trains.adb:202:92] (Standard__positive.range_check_((((Standard__string.first(temp___410)) + ((Integer.length((Standard__string.first(temp___410))) ((Standard__string.last(temp___410)))) + (Integer.length((1 : int)) ((4 : int))))) - (1 : int)))) ))))))))
   ))
   )) )) );
   ( [@GP_Sloc:trains.adb:203:7] ([#"trains.adb" 203 0 0] ()) );
   ( [@GP_Sloc:trains.adb:203:7] ([#"trains.adb" 203 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((Standard__string.of_array((Temp___String_Literal_412.temp___String_Literal_412(()))) ((1 : int)) ((55 : int))))) )) );
   ( [@GP_Sloc:trains.adb:204:10] ([#"trains.adb" 204 0 0] ()) );
   ( [@GP_Sloc:trains.adb:204:7] ([#"trains.adb" 204 0 0] (if (( ([#"trains.adb" 204 0 0] [#"trains.adb" 204 0 0] (([@branch_id=3306] Main.spark__branch).bool__content <- ( ((Boolean.to_int(Trains__reactorshutdown.reactorshutdown.bool__content)) = (Boolean.to_int((Boolean.of_int((1 : int)))))) )));
   ( [@branch_id=3306] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:trains.adb:205:12] ([#"trains.adb" 205 0 0] ()) );
    ( [@GP_Sloc:trains.adb:205:12] ([#"trains.adb" 205 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((Standard__string.of_array((Temp___String_Literal_413.temp___String_Literal_413(()))) ((1 : int)) ((48 : int))))) )) );
    ( [@GP_Sloc:trains.adb:206:11] ([#"trains.adb" 206 0 0] [#"trains.adb" 206 0 0] begin ensures {true} let _ = (let _ = ( 2000000000 : int ) in (
     ()))
     in () end ) );
    ( [@GP_Sloc:trains.adb:207:11] ([#"trains.adb" 207 0 0] ()) );
    ( [@GP_Sloc:trains.adb:207:27] ([#"trains.adb" 207 0 0] [#"trains.adb" 207 0 0] (Trains__reactorshutdown.reactorshutdown.bool__content <- ( (Boolean.of_int((0 : int))) ))) ) )) else (
    ( ();
    ( [@GP_Sloc:trains.adb:208:18] ([#"trains.adb" 208 0 0] ()) );
    ( [@GP_Sloc:trains.adb:208:15] ([#"trains.adb" 208 0 0] (if (( ([#"trains.adb" 208 0 0] [#"trains.adb" 208 0 0] (([@branch_id=3318] Main.spark__branch).bool__content <- ( ((Boolean.to_int(Trains__reactorneedscontrol.reactorneedscontrol.bool__content)) = (Boolean.to_int((Boolean.of_int((1 : int)))))) )));
    ( [@branch_id=3318] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:trains.adb:209:15] ([#"trains.adb" 209 0 0] ()) );
     ( [@GP_Sloc:trains.adb:209:15] ([#"trains.adb" 209 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((Standard__string.of_array((Temp___String_Literal_414.temp___String_Literal_414(()))) ((1 : int)) ((46 : int))))) )) );
     ( [@GP_Sloc:trains.adb:210:13] ([#"trains.adb" 210 0 0] [#"trains.adb" 210 0 0] begin ensures {true} let _ = (let _ = ( 2000000000 : int ) in (
      ()))
      in () end ) );
     ( [@GP_Sloc:trains.adb:211:13] ([#"trains.adb" 211 0 0] ()) );
     ( [@GP_Sloc:trains.adb:211:33] ([#"trains.adb" 211 0 0] [#"trains.adb" 211 0 0] (Trains__reactorneedscontrol.reactorneedscontrol.bool__content <- ( (Boolean.of_int((0 : int))) ))) ) )) else (
     ( ();
     ( [@GP_Sloc:trains.adb:212:21] ([#"trains.adb" 212 0 0] ()) );
     ( [@GP_Sloc:trains.adb:212:17] ([#"trains.adb" 212 0 0] (if (( ([#"trains.adb" 212 0 0] [#"trains.adb" 212 0 0] (([@branch_id=3330] Main.spark__branch).bool__content <- ( ((Boolean.to_int(Trains__reactorneedscoolant.reactorneedscoolant.bool__content)) = (Boolean.to_int((Boolean.of_int((1 : int)))))) )));
     ( [@branch_id=3330] Main.spark__branch ).bool__content )) then (
      ( ();
      ( [@GP_Sloc:trains.adb:213:18] ([#"trains.adb" 213 0 0] ()) );
      ( [@GP_Sloc:trains.adb:213:18] ([#"trains.adb" 213 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((Standard__string.of_array((Temp___String_Literal_415.temp___String_Literal_415(()))) ((1 : int)) ((41 : int))))) )) );
      ( [@GP_Sloc:trains.adb:214:17] ([#"trains.adb" 214 0 0] [#"trains.adb" 214 0 0] begin ensures {true} let _ = (let _ = ( 2000000000 : int ) in (
       ()))
       in () end ) );
      ( [@GP_Sloc:trains.adb:215:16] ([#"trains.adb" 215 0 0] ()) );
      ( [@GP_Sloc:trains.adb:215:36] ([#"trains.adb" 215 0 0] [#"trains.adb" 215 0 0] (Trains__reactorneedscoolant.reactorneedscoolant.bool__content <- ( (Boolean.of_int((0 : int))) ))) ) )) else (
      ()))) ) )))) ) )))) );
   ( [@GP_Sloc:trains.adb:219:11] ([#"trains.adb" 219 0 0] ()) );
   ( [@GP_Sloc:trains.adb:219:7] ([#"trains.adb" 219 0 0] (if (( ([#"trains.adb" 219 0 0] [#"trains.adb" 219 0 0] (([@branch_id=3342] Main.spark__branch).bool__content <- ( ((Boolean.to_int(Trains__reactoremer.reactoremer.bool__content)) = (Boolean.to_int((Boolean.of_int((1 : int)))))) )));
   ( [@branch_id=3342] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:trains.adb:220:12] ([#"trains.adb" 220 0 0] ()) );
    ( [@GP_Sloc:trains.adb:220:12] ([#"trains.adb" 220 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((Standard__string.of_array((Temp___String_Literal_416.temp___String_Literal_416(()))) ((1 : int)) ((78 : int))))) )) );
    ( [@GP_Sloc:trains.adb:221:10] ([#"trains.adb" 221 0 0] [#"trains.adb" 221 0 0] begin ensures {true} let _ = (let _ = ( 2000000000 : int ) in (
     ()))
     in () end ) );
    ( [@GP_Sloc:trains.adb:222:10] ([#"trains.adb" 222 0 0] ()) );
    ( [@GP_Sloc:trains.adb:222:22] ([#"trains.adb" 222 0 0] [#"trains.adb" 222 0 0] (Trains__reactoremer.reactoremer.bool__content <- ( (Boolean.of_int((0 : int))) ))) ) )) else (
    ()))) );
   ( [@GP_Sloc:trains.adb:224:11] ([#"trains.adb" 224 0 0] ()) );
   ( [@GP_Sloc:trains.adb:224:7] ([#"trains.adb" 224 0 0] (if (( ([#"trains.adb" 224 0 0] [#"trains.adb" 224 0 0] (([@branch_id=3354] Main.spark__branch).bool__content <- ( ((Boolean.to_int(Trains__trainstart1.trainstart1.bool__content)) = (Boolean.to_int((Boolean.of_int((1 : int)))))) )));
   ( [@branch_id=3354] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:trains.adb:225:12] ([#"trains.adb" 225 0 0] ()) );
    ( [@GP_Sloc:trains.adb:225:12] ([#"trains.adb" 225 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((Standard__string.of_array((Temp___String_Literal_417.temp___String_Literal_417(()))) ((1 : int)) ((41 : int))))) )) );
    ( [@GP_Sloc:trains.adb:226:10] ([#"trains.adb" 226 0 0] [#"trains.adb" 226 0 0] begin ensures {true} let _ = (let _ = ( 2000000000 : int ) in (
     ()))
     in () end ) );
    ( [@GP_Sloc:trains.adb:227:10] ([#"trains.adb" 227 0 0] ()) );
    ( [@GP_Sloc:trains.adb:227:22] ([#"trains.adb" 227 0 0] [#"trains.adb" 227 0 0] (Trains__trainstart1.trainstart1.bool__content <- ( (Boolean.of_int((0 : int))) ))) ) )) else (
    ( ();
    ( [@GP_Sloc:trains.adb:228:18] ([#"trains.adb" 228 0 0] ()) );
    ( [@GP_Sloc:trains.adb:228:15] ([#"trains.adb" 228 0 0] (if (( ([#"trains.adb" 228 0 0] [#"trains.adb" 228 0 0] (([@branch_id=3366] Main.spark__branch).bool__content <- ( ((Boolean.to_int(Trains__trainneedsreactor.trainneedsreactor.bool__content)) = (Boolean.to_int((Boolean.of_int((1 : int)))))) )));
    ( [@branch_id=3366] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:trains.adb:229:15] ([#"trains.adb" 229 0 0] ()) );
     ( [@GP_Sloc:trains.adb:229:15] ([#"trains.adb" 229 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((Standard__string.of_array((Temp___String_Literal_418.temp___String_Literal_418(()))) ((1 : int)) ((35 : int))))) )) );
     ( [@GP_Sloc:trains.adb:230:13] ([#"trains.adb" 230 0 0] [#"trains.adb" 230 0 0] begin ensures {true} let _ = (let _ = ( 2000000000 : int ) in (
      ()))
      in () end ) );
     ( [@GP_Sloc:trains.adb:231:13] ([#"trains.adb" 231 0 0] ()) );
     ( [@GP_Sloc:trains.adb:231:31] ([#"trains.adb" 231 0 0] [#"trains.adb" 231 0 0] (Trains__trainneedsreactor.trainneedsreactor.bool__content <- ( (Boolean.of_int((0 : int))) ))) ) )) else (
     ()))) ) )))) );
   ( [@GP_Sloc:trains.adb:234:11] ([#"trains.adb" 234 0 0] ()) );
   ( [@GP_Sloc:trains.adb:234:7] ([#"trains.adb" 234 0 0] (if (( ([#"trains.adb" 234 0 0] [#"trains.adb" 234 0 0] (([@branch_id=3378] Main.spark__branch).bool__content <- ( ((Boolean.to_int(Trains__reactormaintenance.reactormaintenance.bool__content)) = (Boolean.to_int((Boolean.of_int((1 : int)))))) )));
   ( [@branch_id=3378] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:trains.adb:235:12] ([#"trains.adb" 235 0 0] ()) );
    ( [@GP_Sloc:trains.adb:235:12] ([#"trains.adb" 235 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((Standard__string.of_array((Temp___String_Literal_419.temp___String_Literal_419(()))) ((1 : int)) ((28 : int))))) )) );
    ( [@GP_Sloc:trains.adb:236:15] ([#"trains.adb" 236 0 0] [#"trains.adb" 236 0 0] begin ensures {true} let _ = (let _ = ( 5000000000 : int ) in (
     ()))
     in () end ) );
    ( [@GP_Sloc:trains.adb:237:13] ([#"trains.adb" 237 0 0] ()) );
    ( [@GP_Sloc:trains.adb:237:13] ([#"trains.adb" 237 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((Standard__string.of_array((Temp___String_Literal_420.temp___String_Literal_420(()))) ((1 : int)) ((28 : int))))) )) );
    ( [@GP_Sloc:trains.adb:238:13] ([#"trains.adb" 238 0 0] [#"trains.adb" 238 0 0] begin ensures {true} let _ = (let _ = ( 2000000000 : int ) in (
     ()))
     in () end ) );
    ( [@GP_Sloc:trains.adb:239:13] ([#"trains.adb" 239 0 0] ()) );
    ( [@GP_Sloc:trains.adb:239:32] ([#"trains.adb" 239 0 0] [#"trains.adb" 239 0 0] (Trains__reactormaintenance.reactormaintenance.bool__content <- ( (Boolean.of_int((0 : int))) ))) ) )) else (
    ( ();
    ( [@GP_Sloc:trains.adb:240:19] ([#"trains.adb" 240 0 0] ()) );
    ( [@GP_Sloc:trains.adb:240:15] ([#"trains.adb" 240 0 0] (if (( ([#"trains.adb" 240 0 0] [#"trains.adb" 240 0 0] (([@branch_id=3395] Main.spark__branch).bool__content <- ( ((Boolean.to_int(Trains__reactornotoff.reactornotoff.bool__content)) = (Boolean.to_int((Boolean.of_int((1 : int)))))) )));
    ( [@branch_id=3395] Main.spark__branch ).bool__content )) then (
     ( ();
     ( [@GP_Sloc:trains.adb:241:18] ([#"trains.adb" 241 0 0] ()) );
     ( [@GP_Sloc:trains.adb:241:18] ([#"trains.adb" 241 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((Standard__string.of_array((Temp___String_Literal_421.temp___String_Literal_421(()))) ((1 : int)) ((82 : int))))) )) );
     ( [@GP_Sloc:trains.adb:242:16] ([#"trains.adb" 242 0 0] [#"trains.adb" 242 0 0] begin ensures {true} let _ = (let _ = ( 2000000000 : int ) in (
      ()))
      in () end ) );
     ( [@GP_Sloc:trains.adb:243:18] ([#"trains.adb" 243 0 0] ()) );
     ( [@GP_Sloc:trains.adb:243:32] ([#"trains.adb" 243 0 0] [#"trains.adb" 243 0 0] (Trains__reactornotoff.reactornotoff.bool__content <- ( (Boolean.of_int((0 : int))) ))) ) )) else (
     ()))) ) )))) );
   ( [@GP_Sloc:trains.adb:246:7] ([#"trains.adb" 246 0 0] ()) );
   ( [@GP_Sloc:trains.adb:246:7] ([#"trains.adb" 246 0 0] ( (Ada__text_io__put_line__2___axiom.put_line__2((Standard__string.of_array((Temp___String_Literal_422.temp___String_Literal_422(()))) ((1 : int)) ((26 : int))))) )) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = True in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "restart" defined at trains.ads:148, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__restart__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Boolean as Boolean
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__controlrods as Trains__controlrods
 use        Trains__controlrods__rep as Trains__controlrods__rep
 use        Trains__watersupply as Trains__watersupply
 use        Trains__watersupply__rep as Trains__watersupply__rep
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom

 let def [#"trains.ads" 148 0 0][@GP_Subp:trains.ads:148] 
   (__void_param : unit)
  requires { [#"trains.ads" 148 0 0] true }
  ensures { [#"trains.ads" 148 0 0] ([#"trains.ads" 150 0 0] ( [@GP_Reason:VC_POSTCONDITION] [@GP_Id:59] [@GP_Sloc:trains.ads:150:14] [@comment:     Post => train.trainReactors.noControlRods = 3 and train.trainReactors.amountOfWater = 2;              ^ trains.ads:150:14:VC_POSTCONDITION] [@model_vc_post] [@GP_Shape:pragargs__and] ( ( [@GP_Pretty_Ada:4835] [@GP_Sloc:trains.ads:150:14] ((Trains__controlrods__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods) = (3 : int)) ) /\ ( [@GP_Sloc:trains.ads:150:56] [@GP_Pretty_Ada:4843] ((Trains__watersupply__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater) = (2 : int)) ) ) )) }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:148 *)
  ;
   assume {  (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:148 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:148 *)
  ;
   begin ensures {true} let _ = (let _ = True in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:148 *)
  ;
   try
   ( ();
   ( [@GP_Sloc:trains.adb:174:7] ([#"trains.adb" 174 0 0] ()) );
   ( [@GP_Sloc:trains.adb:174:41] ([#"trains.adb" 174 0 0] (let temp___425 [@mlw:proxy_symbol] [@introduced] = (let temp___424 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
    ( [#"trains.adb" 174 0 0] begin ensures {true} let _ = (let _ = temp___424.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
     ()))
     in () end ;
    { ( temp___424 ) with Trains__trains.__split_fields = { ( temp___424.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___423 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
     ( [#"trains.adb" 174 0 0] begin ensures {true} let _ = (let _ = temp___423.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods in (
      ()))
      in () end ;
     { ( temp___423 ) with Trains__reactors.__split_fields = { ( temp___423.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__nocontrolrods = ( 3 : Trains__controlrods.controlrods ) } } )))
     } } )))
    in (
    [#"trains.adb" 174 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___425.Trains__trains.__split_fields ))))
   ) );
   ( [@GP_Sloc:trains.adb:175:7] ([#"trains.adb" 175 0 0] ()) );
   ( [@GP_Sloc:trains.adb:175:41] ([#"trains.adb" 175 0 0] (let temp___428 [@mlw:proxy_symbol] [@introduced] = (let temp___427 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } in (
    ( [#"trains.adb" 175 0 0] begin ensures {true} let _ = (let _ = temp___427.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
     ()))
     in () end ;
    { ( temp___427 ) with Trains__trains.__split_fields = { ( temp___427.Trains__trains.__split_fields ) with Trains__trains.rec__trains__trains__trainreactors = (let temp___426 [@mlw:proxy_symbol] [@introduced] = { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors in (
     ( [#"trains.adb" 175 0 0] begin ensures {true} let _ = (let _ = temp___426.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater in (
      ()))
      in () end ;
     { ( temp___426 ) with Trains__reactors.__split_fields = { ( temp___426.Trains__reactors.__split_fields ) with Trains__reactors.rec__trains__reactors__amountofwater = ( 2 : Trains__watersupply.watersupply ) } } )))
     } } )))
    in (
    [#"trains.adb" 175 0 0] (Trains__train.train__split_fields.Trains__trains.__split_fields__content <- ( temp___428.Trains__trains.__split_fields ))))
   ) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = (Boolean.andb(((Trains__controlrods__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__nocontrolrods)) = (3 : int))) (((Trains__watersupply__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__amountofwater)) = (2 : int)))) in (
   ()))
   in () end  )
end

(* Module for checking contracts and absence of run-time errors in subprogram "maintenance" defined at trains.ads:152, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Trains__maintenance__subprogram_def
 use        "_gnatprove_standard".Main
 use        "int".Int
 use        "int".Int
 use        "_gnatprove_standard".Main as Main
 use        "_gnatprove_standard".Boolean as Boolean
 use        Trains__reactors as Trains__reactors
 use        Trains__train as Trains__train
 use        Trains__trains as Trains__trains
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__reactormaintenance as Trains__reactormaintenance
 use        Trains__reactornotoff as Trains__reactornotoff
 use        Trains__reactorstate as Trains__reactorstate
 use        Trains__reactorstate__rep as Trains__reactorstate__rep
 use        Trains__temp___axiom as Trains__temp___axiom
 use        Trains__controlrods___axiom as Trains__controlrods___axiom
 use        Trains__watersupply___axiom as Trains__watersupply___axiom
 use        Trains__powersupply___axiom as Trains__powersupply___axiom
 use        Trains__carriages___axiom as Trains__carriages___axiom
 use        Trains__velocity___axiom as Trains__velocity___axiom
 use        Trains__reactorstate___axiom as Trains__reactorstate___axiom
 use        Trains__lights___axiom as Trains__lights___axiom
 use        Trains__reactors___axiom as Trains__reactors___axiom
 use        Trains__trains___axiom as Trains__trains___axiom
 use        Trains__train___axiom as Trains__train___axiom
 use        Trains__reactormaintenance___axiom as Trains__reactormaintenance___axiom
 use        Trains__reactornotoff___axiom as Trains__reactornotoff___axiom

 let def [#"trains.ads" 152 0 0][@GP_Subp:trains.ads:152] 
   (__void_param : unit)
  requires { [#"trains.ads" 152 0 0] true }
   = [@vc:divergent]
  ( () (* Assume dynamic invariants of inputs of the subprogram trains.ads:152 *)
  ;
  [#"trains.ads" 152 0 0] assume { [#"trains.ads" 152 0 0] (Trains__trains___axiom.dynamic_invariant { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content } True False True True) };
  () (* Declarations introduced by the compiler at the beginning of the subprogram trains.ads:152 *)
  ;
  () (* Check for RTE in the Pre of the subprogram trains.ads:152 *)
  ;
  [#"trains.ads" 152 0 0] begin ensures {true} let _ = (let _ = ((Trains__reactorstate__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate)) = (1 : int)) in (
   ()))
   in () end ;
  () (* Assume Pre of the subprogram trains.ads:152 *)
  ;
  [#"trains.ads" 152 0 0] assume { [#"trains.ads" 152 0 0] ( [@GP_Pretty_Ada:45295] ((Trains__reactorstate__rep.to_rep { Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate) = (1 : int)) ) };
  [#"trains.ads" 152 0 0] try
   ( ();
   ( [@GP_Sloc:trains.adb:180:10] ([#"trains.adb" 180 0 0] ()) );
   ( [@GP_Sloc:trains.adb:180:7] ([#"trains.adb" 180 0 0] (if (( ([#"trains.adb" 180 0 0] [#"trains.adb" 180 0 0] (([@branch_id=3152] Main.spark__branch).bool__content <- ( ((Trains__reactorstate__rep.to_rep({ Trains__trains.__split_fields = Trains__train.train__split_fields.Trains__trains.__split_fields__content }.Trains__trains.__split_fields.Trains__trains.rec__trains__trains__trainreactors.Trains__reactors.__split_fields.Trains__reactors.rec__trains__reactors__currentreactorstate)) = (1 : int)) )));
   ( [@branch_id=3152] Main.spark__branch ).bool__content )) then (
    ( ();
    ( [@GP_Sloc:trains.adb:181:12] ([#"trains.adb" 181 0 0] ()) );
    ( [@GP_Sloc:trains.adb:181:31] ([#"trains.adb" 181 0 0] [#"trains.adb" 181 0 0] (Trains__reactormaintenance.reactormaintenance.bool__content <- ( (Boolean.of_int((1 : int))) ))) ) )) else (
    ( ();
    ( [@GP_Sloc:trains.adb:183:10] ([#"trains.adb" 183 0 0] ()) );
    ( [@GP_Sloc:trains.adb:183:24] ([#"trains.adb" 183 0 0] [#"trains.adb" 183 0 0] (Trains__reactornotoff.reactornotoff.bool__content <- ( (Boolean.of_int((1 : int))) ))) ) )))) );
    raise Return__exc )
  with
   Return__exc -> ()
  end;
   begin ensures {true} let _ = (let _ = True in (
   ()))
   in () end  )
end
